//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace USOFT.DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class USOFTEntities : DbContext
    {
        public USOFTEntities()
            : base("name=USOFTEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<ACC_GetTaxReport_Result> ACC_GetTaxReport(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ACC_GetTaxReport_Result>("ACC_GetTaxReport", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<ADMINFEE_GET_CONTRACT_Result> ADMINFEE_GET_CONTRACT(string contNo, Nullable<int> startRowIndex, Nullable<int> maximumRows, Nullable<int> type)
        {
            var contNoParameter = contNo != null ?
                new ObjectParameter("contNo", contNo) :
                new ObjectParameter("contNo", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("maximumRows", maximumRows) :
                new ObjectParameter("maximumRows", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMINFEE_GET_CONTRACT_Result>("ADMINFEE_GET_CONTRACT", contNoParameter, startRowIndexParameter, maximumRowsParameter, typeParameter);
        }
    
        public virtual ObjectResult<ADMINFEE_GET_FINANCING_Result> ADMINFEE_GET_FINANCING(string contNo)
        {
            var contNoParameter = contNo != null ?
                new ObjectParameter("contNo", contNo) :
                new ObjectParameter("contNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMINFEE_GET_FINANCING_Result>("ADMINFEE_GET_FINANCING", contNoParameter);
        }
    
        public virtual ObjectResult<b2b_sendMail_Aswata_Result> b2b_sendMail_Aswata(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<b2b_sendMail_Aswata_Result>("b2b_sendMail_Aswata", branchIdParameter);
        }
    
        public virtual int b2b_sendMail_Raksa(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("b2b_sendMail_Raksa", branchIdParameter);
        }
    
        public virtual int b2b_sendMail_Tokio(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("b2b_sendMail_Tokio", branchIdParameter);
        }
    
        public virtual ObjectResult<string> CASH_REWARD_BRAND()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CASH_REWARD_BRAND");
        }
    
        public virtual int CASH_REWARD_CREATE(string contract)
        {
            var contractParameter = contract != null ?
                new ObjectParameter("Contract", contract) :
                new ObjectParameter("Contract", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CASH_REWARD_CREATE", contractParameter);
        }
    
        public virtual int CASH_REWARD_DEALER_CREATE(string brandCode, string brandName, Nullable<int> area, string dealerCode, string dealerName, Nullable<decimal> amount, string use_Area, string updateBy)
        {
            var brandCodeParameter = brandCode != null ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(string));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(int));
    
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var dealerNameParameter = dealerName != null ?
                new ObjectParameter("DealerName", dealerName) :
                new ObjectParameter("DealerName", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var use_AreaParameter = use_Area != null ?
                new ObjectParameter("Use_Area", use_Area) :
                new ObjectParameter("Use_Area", typeof(string));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CASH_REWARD_DEALER_CREATE", brandCodeParameter, brandNameParameter, areaParameter, dealerCodeParameter, dealerNameParameter, amountParameter, use_AreaParameter, updateByParameter);
        }
    
        public virtual int CASH_REWARD_DEALER_DELETE(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CASH_REWARD_DEALER_DELETE", idParameter);
        }
    
        public virtual int CASH_REWARD_DEALER_EDIT(Nullable<int> id, string brandCode, string brandName, Nullable<int> area, string dealerCode, string dealerName, Nullable<decimal> amount, string use_Area, string updateBy, string active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var brandCodeParameter = brandCode != null ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(string));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(int));
    
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var dealerNameParameter = dealerName != null ?
                new ObjectParameter("DealerName", dealerName) :
                new ObjectParameter("DealerName", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var use_AreaParameter = use_Area != null ?
                new ObjectParameter("Use_Area", use_Area) :
                new ObjectParameter("Use_Area", typeof(string));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CASH_REWARD_DEALER_EDIT", idParameter, brandCodeParameter, brandNameParameter, areaParameter, dealerCodeParameter, dealerNameParameter, amountParameter, use_AreaParameter, updateByParameter, activeParameter);
        }
    
        public virtual int CASH_REWARD_DEALER_SHOW(string dealer_name, string brand_name, string area)
        {
            var dealer_nameParameter = dealer_name != null ?
                new ObjectParameter("dealer_name", dealer_name) :
                new ObjectParameter("dealer_name", typeof(string));
    
            var brand_nameParameter = brand_name != null ?
                new ObjectParameter("brand_name", brand_name) :
                new ObjectParameter("brand_name", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CASH_REWARD_DEALER_SHOW", dealer_nameParameter, brand_nameParameter, areaParameter);
        }
    
        public virtual ObjectResult<string> CASH_REWARD_PAYMENT_BCA_CONVERT(string paymentRequestNo, Nullable<System.DateTime> effectiveDate, string accountNumber, string companyCode, string remark1, string remark2)
        {
            var paymentRequestNoParameter = paymentRequestNo != null ?
                new ObjectParameter("PaymentRequestNo", paymentRequestNo) :
                new ObjectParameter("PaymentRequestNo", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var remark1Parameter = remark1 != null ?
                new ObjectParameter("Remark1", remark1) :
                new ObjectParameter("Remark1", typeof(string));
    
            var remark2Parameter = remark2 != null ?
                new ObjectParameter("Remark2", remark2) :
                new ObjectParameter("Remark2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CASH_REWARD_PAYMENT_BCA_CONVERT", paymentRequestNoParameter, effectiveDateParameter, accountNumberParameter, companyCodeParameter, remark1Parameter, remark2Parameter);
        }
    
        public virtual int CASH_REWARD_PRICING_CREATE(string type, string brandCode, Nullable<int> area, Nullable<int> tenor, Nullable<decimal> adminfee, Nullable<decimal> fIAddm, Nullable<decimal> fIAddb, string use_Area, string updateBy)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var brandCodeParameter = brandCode != null ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(string));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(int));
    
            var tenorParameter = tenor.HasValue ?
                new ObjectParameter("Tenor", tenor) :
                new ObjectParameter("Tenor", typeof(int));
    
            var adminfeeParameter = adminfee.HasValue ?
                new ObjectParameter("Adminfee", adminfee) :
                new ObjectParameter("Adminfee", typeof(decimal));
    
            var fIAddmParameter = fIAddm.HasValue ?
                new ObjectParameter("FIAddm", fIAddm) :
                new ObjectParameter("FIAddm", typeof(decimal));
    
            var fIAddbParameter = fIAddb.HasValue ?
                new ObjectParameter("FIAddb", fIAddb) :
                new ObjectParameter("FIAddb", typeof(decimal));
    
            var use_AreaParameter = use_Area != null ?
                new ObjectParameter("Use_Area", use_Area) :
                new ObjectParameter("Use_Area", typeof(string));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CASH_REWARD_PRICING_CREATE", typeParameter, brandCodeParameter, areaParameter, tenorParameter, adminfeeParameter, fIAddmParameter, fIAddbParameter, use_AreaParameter, updateByParameter);
        }
    
        public virtual int CASH_REWARD_PRICING_DELETE(string whereType, string whereBrandCode, string whereArea, Nullable<int> whereTenor)
        {
            var whereTypeParameter = whereType != null ?
                new ObjectParameter("WhereType", whereType) :
                new ObjectParameter("WhereType", typeof(string));
    
            var whereBrandCodeParameter = whereBrandCode != null ?
                new ObjectParameter("WhereBrandCode", whereBrandCode) :
                new ObjectParameter("WhereBrandCode", typeof(string));
    
            var whereAreaParameter = whereArea != null ?
                new ObjectParameter("WhereArea", whereArea) :
                new ObjectParameter("WhereArea", typeof(string));
    
            var whereTenorParameter = whereTenor.HasValue ?
                new ObjectParameter("WhereTenor", whereTenor) :
                new ObjectParameter("WhereTenor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CASH_REWARD_PRICING_DELETE", whereTypeParameter, whereBrandCodeParameter, whereAreaParameter, whereTenorParameter);
        }
    
        public virtual int CASH_REWARD_PRICING_EDIT(string whereType, string whereBrandCode, string whereArea, Nullable<int> whereTenor, string type, string brandCode, Nullable<int> area, Nullable<int> tenor, Nullable<decimal> adminfee, Nullable<decimal> fIAddm, Nullable<decimal> fIAddb, string use_Area, string updateBy, string active)
        {
            var whereTypeParameter = whereType != null ?
                new ObjectParameter("WhereType", whereType) :
                new ObjectParameter("WhereType", typeof(string));
    
            var whereBrandCodeParameter = whereBrandCode != null ?
                new ObjectParameter("WhereBrandCode", whereBrandCode) :
                new ObjectParameter("WhereBrandCode", typeof(string));
    
            var whereAreaParameter = whereArea != null ?
                new ObjectParameter("WhereArea", whereArea) :
                new ObjectParameter("WhereArea", typeof(string));
    
            var whereTenorParameter = whereTenor.HasValue ?
                new ObjectParameter("WhereTenor", whereTenor) :
                new ObjectParameter("WhereTenor", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var brandCodeParameter = brandCode != null ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(string));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(int));
    
            var tenorParameter = tenor.HasValue ?
                new ObjectParameter("Tenor", tenor) :
                new ObjectParameter("Tenor", typeof(int));
    
            var adminfeeParameter = adminfee.HasValue ?
                new ObjectParameter("Adminfee", adminfee) :
                new ObjectParameter("Adminfee", typeof(decimal));
    
            var fIAddmParameter = fIAddm.HasValue ?
                new ObjectParameter("FIAddm", fIAddm) :
                new ObjectParameter("FIAddm", typeof(decimal));
    
            var fIAddbParameter = fIAddb.HasValue ?
                new ObjectParameter("FIAddb", fIAddb) :
                new ObjectParameter("FIAddb", typeof(decimal));
    
            var use_AreaParameter = use_Area != null ?
                new ObjectParameter("Use_Area", use_Area) :
                new ObjectParameter("Use_Area", typeof(string));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CASH_REWARD_PRICING_EDIT", whereTypeParameter, whereBrandCodeParameter, whereAreaParameter, whereTenorParameter, typeParameter, brandCodeParameter, areaParameter, tenorParameter, adminfeeParameter, fIAddmParameter, fIAddbParameter, use_AreaParameter, updateByParameter, activeParameter);
        }
    
        public virtual int CASH_REWARD_PRICING_SHOW(string brandCode, string area, string tenor)
        {
            var brandCodeParameter = brandCode != null ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var tenorParameter = tenor != null ?
                new ObjectParameter("Tenor", tenor) :
                new ObjectParameter("Tenor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CASH_REWARD_PRICING_SHOW", brandCodeParameter, areaParameter, tenorParameter);
        }
    
        public virtual int CASH_REWARD_SHOW(string pERIOD, string cONDITION, string bRAND, string bRANCH, Nullable<int> tYPE)
        {
            var pERIODParameter = pERIOD != null ?
                new ObjectParameter("PERIOD", pERIOD) :
                new ObjectParameter("PERIOD", typeof(string));
    
            var cONDITIONParameter = cONDITION != null ?
                new ObjectParameter("CONDITION", cONDITION) :
                new ObjectParameter("CONDITION", typeof(string));
    
            var bRANDParameter = bRAND != null ?
                new ObjectParameter("BRAND", bRAND) :
                new ObjectParameter("BRAND", typeof(string));
    
            var bRANCHParameter = bRANCH != null ?
                new ObjectParameter("BRANCH", bRANCH) :
                new ObjectParameter("BRANCH", typeof(string));
    
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CASH_REWARD_SHOW", pERIODParameter, cONDITIONParameter, bRANDParameter, bRANCHParameter, tYPEParameter);
        }
    
        public virtual ObjectResult<CashRewardApRecipients_Result> CashRewardApRecipients(string contractNumber, string brandName, string supplierName, string refundRecipientName)
        {
            var contractNumberParameter = contractNumber != null ?
                new ObjectParameter("ContractNumber", contractNumber) :
                new ObjectParameter("ContractNumber", typeof(string));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var refundRecipientNameParameter = refundRecipientName != null ?
                new ObjectParameter("RefundRecipientName", refundRecipientName) :
                new ObjectParameter("RefundRecipientName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashRewardApRecipients_Result>("CashRewardApRecipients", contractNumberParameter, brandNameParameter, supplierNameParameter, refundRecipientNameParameter);
        }
    
        public virtual int CashRewardAPSetRecipients(string contractNumber, Nullable<decimal> refundRecipientId, string paymentRequestNo, string paymentStatus)
        {
            var contractNumberParameter = contractNumber != null ?
                new ObjectParameter("ContractNumber", contractNumber) :
                new ObjectParameter("ContractNumber", typeof(string));
    
            var refundRecipientIdParameter = refundRecipientId.HasValue ?
                new ObjectParameter("RefundRecipientId", refundRecipientId) :
                new ObjectParameter("RefundRecipientId", typeof(decimal));
    
            var paymentRequestNoParameter = paymentRequestNo != null ?
                new ObjectParameter("PaymentRequestNo", paymentRequestNo) :
                new ObjectParameter("PaymentRequestNo", typeof(string));
    
            var paymentStatusParameter = paymentStatus != null ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardAPSetRecipients", contractNumberParameter, refundRecipientIdParameter, paymentRequestNoParameter, paymentStatusParameter);
        }
    
        public virtual int CashRewardDealerGetList(string brandName, string dealerCode, string dealerName, string active, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var dealerNameParameter = dealerName != null ?
                new ObjectParameter("DealerName", dealerName) :
                new ObjectParameter("DealerName", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardDealerGetList", brandNameParameter, dealerCodeParameter, dealerNameParameter, activeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<CashRewardGetDealer_Result> CashRewardGetDealer(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashRewardGetDealer_Result>("CashRewardGetDealer", iDParameter);
        }
    
        public virtual ObjectResult<CashRewardGetDetail_Result> CashRewardGetDetail(string cONTRACTNUMBER)
        {
            var cONTRACTNUMBERParameter = cONTRACTNUMBER != null ?
                new ObjectParameter("CONTRACTNUMBER", cONTRACTNUMBER) :
                new ObjectParameter("CONTRACTNUMBER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashRewardGetDetail_Result>("CashRewardGetDetail", cONTRACTNUMBERParameter);
        }
    
        public virtual int CashRewardGetHeader(string contractNumber)
        {
            var contractNumberParameter = contractNumber != null ?
                new ObjectParameter("contractNumber", contractNumber) :
                new ObjectParameter("contractNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardGetHeader", contractNumberParameter);
        }
    
        public virtual int CashRewardGetList(string contract, Nullable<int> branchId, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var contractParameter = contract != null ?
                new ObjectParameter("Contract", contract) :
                new ObjectParameter("Contract", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardGetList", contractParameter, branchIdParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<CashRewardGetPricing_Result> CashRewardGetPricing(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashRewardGetPricing_Result>("CashRewardGetPricing", iDParameter);
        }
    
        public virtual ObjectResult<CashRewardGetUndefined_Result> CashRewardGetUndefined(string brand, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var brandParameter = brand != null ?
                new ObjectParameter("brand", brand) :
                new ObjectParameter("brand", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashRewardGetUndefined_Result>("CashRewardGetUndefined", brandParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<CashRewardGetUndefinedDetail_Result> CashRewardGetUndefinedDetail(string contractnumber, Nullable<int> rowIdx)
        {
            var contractnumberParameter = contractnumber != null ?
                new ObjectParameter("Contractnumber", contractnumber) :
                new ObjectParameter("Contractnumber", typeof(string));
    
            var rowIdxParameter = rowIdx.HasValue ?
                new ObjectParameter("RowIdx", rowIdx) :
                new ObjectParameter("RowIdx", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashRewardGetUndefinedDetail_Result>("CashRewardGetUndefinedDetail", contractnumberParameter, rowIdxParameter);
        }
    
        public virtual int CashRewardPaid(string paymentRequestNo, string contractNumber, Nullable<decimal> refundRecipientId, ObjectParameter countPaid)
        {
            var paymentRequestNoParameter = paymentRequestNo != null ?
                new ObjectParameter("PaymentRequestNo", paymentRequestNo) :
                new ObjectParameter("PaymentRequestNo", typeof(string));
    
            var contractNumberParameter = contractNumber != null ?
                new ObjectParameter("ContractNumber", contractNumber) :
                new ObjectParameter("ContractNumber", typeof(string));
    
            var refundRecipientIdParameter = refundRecipientId.HasValue ?
                new ObjectParameter("RefundRecipientId", refundRecipientId) :
                new ObjectParameter("RefundRecipientId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardPaid", paymentRequestNoParameter, contractNumberParameter, refundRecipientIdParameter, countPaid);
        }
    
        public virtual int CashRewardPaidAll(string paymentRequestNo)
        {
            var paymentRequestNoParameter = paymentRequestNo != null ?
                new ObjectParameter("PaymentRequestNo", paymentRequestNo) :
                new ObjectParameter("PaymentRequestNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardPaidAll", paymentRequestNoParameter);
        }
    
        public virtual ObjectResult<CashRewardPaymentGetCount_Result> CashRewardPaymentGetCount(string paymentRequestNo)
        {
            var paymentRequestNoParameter = paymentRequestNo != null ?
                new ObjectParameter("PaymentRequestNo", paymentRequestNo) :
                new ObjectParameter("PaymentRequestNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashRewardPaymentGetCount_Result>("CashRewardPaymentGetCount", paymentRequestNoParameter);
        }
    
        public virtual int CashRewardPaymentGetDetail(string paymentRequestNo, string bankGroup, ObjectParameter totalAmount, ObjectParameter totalTax, ObjectParameter totalNet, ObjectParameter countPaid, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var paymentRequestNoParameter = paymentRequestNo != null ?
                new ObjectParameter("PaymentRequestNo", paymentRequestNo) :
                new ObjectParameter("PaymentRequestNo", typeof(string));
    
            var bankGroupParameter = bankGroup != null ?
                new ObjectParameter("BankGroup", bankGroup) :
                new ObjectParameter("BankGroup", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardPaymentGetDetail", paymentRequestNoParameter, bankGroupParameter, totalAmount, totalTax, totalNet, countPaid, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<CashRewardPaymentGetHeader_Result> CashRewardPaymentGetHeader(string paymentRequestNo, string paymentRequestStatus)
        {
            var paymentRequestNoParameter = paymentRequestNo != null ?
                new ObjectParameter("PaymentRequestNo", paymentRequestNo) :
                new ObjectParameter("PaymentRequestNo", typeof(string));
    
            var paymentRequestStatusParameter = paymentRequestStatus != null ?
                new ObjectParameter("PaymentRequestStatus", paymentRequestStatus) :
                new ObjectParameter("PaymentRequestStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashRewardPaymentGetHeader_Result>("CashRewardPaymentGetHeader", paymentRequestNoParameter, paymentRequestStatusParameter);
        }
    
        public virtual ObjectResult<CashRewardPaymentReport_Result> CashRewardPaymentReport(string paymentRequestNo, string brand)
        {
            var paymentRequestNoParameter = paymentRequestNo != null ?
                new ObjectParameter("PaymentRequestNo", paymentRequestNo) :
                new ObjectParameter("PaymentRequestNo", typeof(string));
    
            var brandParameter = brand != null ?
                new ObjectParameter("Brand", brand) :
                new ObjectParameter("Brand", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashRewardPaymentReport_Result>("CashRewardPaymentReport", paymentRequestNoParameter, brandParameter);
        }
    
        public virtual int CashRewardPaymentSetHeader(string description, string createdBy, ObjectParameter paymentRequestNo)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardPaymentSetHeader", descriptionParameter, createdByParameter, paymentRequestNo);
        }
    
        public virtual ObjectResult<CashRewardPaymentUndefinedGetHeader_Result> CashRewardPaymentUndefinedGetHeader(string paymentRequestNo, string paymentRequestStatus)
        {
            var paymentRequestNoParameter = paymentRequestNo != null ?
                new ObjectParameter("PaymentRequestNo", paymentRequestNo) :
                new ObjectParameter("PaymentRequestNo", typeof(string));
    
            var paymentRequestStatusParameter = paymentRequestStatus != null ?
                new ObjectParameter("PaymentRequestStatus", paymentRequestStatus) :
                new ObjectParameter("PaymentRequestStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashRewardPaymentUndefinedGetHeader_Result>("CashRewardPaymentUndefinedGetHeader", paymentRequestNoParameter, paymentRequestStatusParameter);
        }
    
        public virtual int CashRewardPaymentUndefinedSetHeader(string description, string createdBy, ObjectParameter paymentRequestNo)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardPaymentUndefinedSetHeader", descriptionParameter, createdByParameter, paymentRequestNo);
        }
    
        public virtual int CashRewardPaymentView(string paymentrequestNo, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var paymentrequestNoParameter = paymentrequestNo != null ?
                new ObjectParameter("PaymentrequestNo", paymentrequestNo) :
                new ObjectParameter("PaymentrequestNo", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardPaymentView", paymentrequestNoParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int CashRewardPricingGetList(string assetCondition, string category, string brandName, string active, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var assetConditionParameter = assetCondition != null ?
                new ObjectParameter("AssetCondition", assetCondition) :
                new ObjectParameter("AssetCondition", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardPricingGetList", assetConditionParameter, categoryParameter, brandNameParameter, activeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int CashRewardProcess(string contractNumber, string applicationStatusCode)
        {
            var contractNumberParameter = contractNumber != null ?
                new ObjectParameter("ContractNumber", contractNumber) :
                new ObjectParameter("ContractNumber", typeof(string));
    
            var applicationStatusCodeParameter = applicationStatusCode != null ?
                new ObjectParameter("ApplicationStatusCode", applicationStatusCode) :
                new ObjectParameter("ApplicationStatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardProcess", contractNumberParameter, applicationStatusCodeParameter);
        }
    
        public virtual int CashRewardRefundRecipient(string cONTRACTNUMBER, Nullable<int> branchId, string refundRecipientName, string includeAnotherDealer, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var cONTRACTNUMBERParameter = cONTRACTNUMBER != null ?
                new ObjectParameter("CONTRACTNUMBER", cONTRACTNUMBER) :
                new ObjectParameter("CONTRACTNUMBER", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var refundRecipientNameParameter = refundRecipientName != null ?
                new ObjectParameter("RefundRecipientName", refundRecipientName) :
                new ObjectParameter("RefundRecipientName", typeof(string));
    
            var includeAnotherDealerParameter = includeAnotherDealer != null ?
                new ObjectParameter("IncludeAnotherDealer", includeAnotherDealer) :
                new ObjectParameter("IncludeAnotherDealer", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardRefundRecipient", cONTRACTNUMBERParameter, branchIdParameter, refundRecipientNameParameter, includeAnotherDealerParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<CashRewardRequestRecipients_Result> CashRewardRequestRecipients(string paymentRequestNo)
        {
            var paymentRequestNoParameter = paymentRequestNo != null ?
                new ObjectParameter("PaymentRequestNo", paymentRequestNo) :
                new ObjectParameter("PaymentRequestNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashRewardRequestRecipients_Result>("CashRewardRequestRecipients", paymentRequestNoParameter);
        }
    
        public virtual int CashRewardSetDealer(Nullable<int> iD, string brandName, string dealerCode, string dealerName, Nullable<decimal> amount, string updateBy, string active, string state)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var dealerNameParameter = dealerName != null ?
                new ObjectParameter("DealerName", dealerName) :
                new ObjectParameter("DealerName", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardSetDealer", iDParameter, brandNameParameter, dealerCodeParameter, dealerNameParameter, amountParameter, updateByParameter, activeParameter, stateParameter);
        }
    
        public virtual int CashRewardSetDetail(string contractNumber, Nullable<decimal> refundRecipientId, string refundRecipientName, string position, string bankName, string bankLocation, string accountName, string accountNumber, string npwp, string taxProcentage, Nullable<decimal> amount, Nullable<decimal> taxAmount, Nullable<decimal> netAmount, Nullable<int> rowIdx, string deleteFlag)
        {
            var contractNumberParameter = contractNumber != null ?
                new ObjectParameter("ContractNumber", contractNumber) :
                new ObjectParameter("ContractNumber", typeof(string));
    
            var refundRecipientIdParameter = refundRecipientId.HasValue ?
                new ObjectParameter("RefundRecipientId", refundRecipientId) :
                new ObjectParameter("RefundRecipientId", typeof(decimal));
    
            var refundRecipientNameParameter = refundRecipientName != null ?
                new ObjectParameter("RefundRecipientName", refundRecipientName) :
                new ObjectParameter("RefundRecipientName", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var bankLocationParameter = bankLocation != null ?
                new ObjectParameter("BankLocation", bankLocation) :
                new ObjectParameter("BankLocation", typeof(string));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var npwpParameter = npwp != null ?
                new ObjectParameter("Npwp", npwp) :
                new ObjectParameter("Npwp", typeof(string));
    
            var taxProcentageParameter = taxProcentage != null ?
                new ObjectParameter("TaxProcentage", taxProcentage) :
                new ObjectParameter("TaxProcentage", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var taxAmountParameter = taxAmount.HasValue ?
                new ObjectParameter("TaxAmount", taxAmount) :
                new ObjectParameter("TaxAmount", typeof(decimal));
    
            var netAmountParameter = netAmount.HasValue ?
                new ObjectParameter("NetAmount", netAmount) :
                new ObjectParameter("NetAmount", typeof(decimal));
    
            var rowIdxParameter = rowIdx.HasValue ?
                new ObjectParameter("RowIdx", rowIdx) :
                new ObjectParameter("RowIdx", typeof(int));
    
            var deleteFlagParameter = deleteFlag != null ?
                new ObjectParameter("DeleteFlag", deleteFlag) :
                new ObjectParameter("DeleteFlag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardSetDetail", contractNumberParameter, refundRecipientIdParameter, refundRecipientNameParameter, positionParameter, bankNameParameter, bankLocationParameter, accountNameParameter, accountNumberParameter, npwpParameter, taxProcentageParameter, amountParameter, taxAmountParameter, netAmountParameter, rowIdxParameter, deleteFlagParameter);
        }
    
        public virtual int CashRewardSetHeader(string cONTRACT_NUMBER, string bRANCH, string sBP, string cUSTOMER_NAME, string bRAND_NAME, string sUPPLIER_NAME, string aPPLICATION_STATUS_CODE, Nullable<decimal> aMOUNT, string cREATE_BY)
        {
            var cONTRACT_NUMBERParameter = cONTRACT_NUMBER != null ?
                new ObjectParameter("CONTRACT_NUMBER", cONTRACT_NUMBER) :
                new ObjectParameter("CONTRACT_NUMBER", typeof(string));
    
            var bRANCHParameter = bRANCH != null ?
                new ObjectParameter("BRANCH", bRANCH) :
                new ObjectParameter("BRANCH", typeof(string));
    
            var sBPParameter = sBP != null ?
                new ObjectParameter("SBP", sBP) :
                new ObjectParameter("SBP", typeof(string));
    
            var cUSTOMER_NAMEParameter = cUSTOMER_NAME != null ?
                new ObjectParameter("CUSTOMER_NAME", cUSTOMER_NAME) :
                new ObjectParameter("CUSTOMER_NAME", typeof(string));
    
            var bRAND_NAMEParameter = bRAND_NAME != null ?
                new ObjectParameter("BRAND_NAME", bRAND_NAME) :
                new ObjectParameter("BRAND_NAME", typeof(string));
    
            var sUPPLIER_NAMEParameter = sUPPLIER_NAME != null ?
                new ObjectParameter("SUPPLIER_NAME", sUPPLIER_NAME) :
                new ObjectParameter("SUPPLIER_NAME", typeof(string));
    
            var aPPLICATION_STATUS_CODEParameter = aPPLICATION_STATUS_CODE != null ?
                new ObjectParameter("APPLICATION_STATUS_CODE", aPPLICATION_STATUS_CODE) :
                new ObjectParameter("APPLICATION_STATUS_CODE", typeof(string));
    
            var aMOUNTParameter = aMOUNT.HasValue ?
                new ObjectParameter("AMOUNT", aMOUNT) :
                new ObjectParameter("AMOUNT", typeof(decimal));
    
            var cREATE_BYParameter = cREATE_BY != null ?
                new ObjectParameter("CREATE_BY", cREATE_BY) :
                new ObjectParameter("CREATE_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardSetHeader", cONTRACT_NUMBERParameter, bRANCHParameter, sBPParameter, cUSTOMER_NAMEParameter, bRAND_NAMEParameter, sUPPLIER_NAMEParameter, aPPLICATION_STATUS_CODEParameter, aMOUNTParameter, cREATE_BYParameter);
        }
    
        public virtual int CashRewardSetPricing(Nullable<int> iD, string assetCondition, string category, string brandName, string paymentType, Nullable<int> tenor, string area, Nullable<decimal> flatRate, Nullable<decimal> adminFee, string updateBy, string active, string state)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var assetConditionParameter = assetCondition != null ?
                new ObjectParameter("AssetCondition", assetCondition) :
                new ObjectParameter("AssetCondition", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var tenorParameter = tenor.HasValue ?
                new ObjectParameter("Tenor", tenor) :
                new ObjectParameter("Tenor", typeof(int));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var flatRateParameter = flatRate.HasValue ?
                new ObjectParameter("FlatRate", flatRate) :
                new ObjectParameter("FlatRate", typeof(decimal));
    
            var adminFeeParameter = adminFee.HasValue ?
                new ObjectParameter("AdminFee", adminFee) :
                new ObjectParameter("AdminFee", typeof(decimal));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CashRewardSetPricing", iDParameter, assetConditionParameter, categoryParameter, brandNameParameter, paymentTypeParameter, tenorParameter, areaParameter, flatRateParameter, adminFeeParameter, updateByParameter, activeParameter, stateParameter);
        }
    
        public virtual ObjectResult<string> CashRewardToBCA(string paymentRequestNo, Nullable<System.DateTime> effectiveDate, string companyAccount, string companyCode, string remark1, string remark2)
        {
            var paymentRequestNoParameter = paymentRequestNo != null ?
                new ObjectParameter("PaymentRequestNo", paymentRequestNo) :
                new ObjectParameter("PaymentRequestNo", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var companyAccountParameter = companyAccount != null ?
                new ObjectParameter("CompanyAccount", companyAccount) :
                new ObjectParameter("CompanyAccount", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var remark1Parameter = remark1 != null ?
                new ObjectParameter("Remark1", remark1) :
                new ObjectParameter("Remark1", typeof(string));
    
            var remark2Parameter = remark2 != null ?
                new ObjectParameter("Remark2", remark2) :
                new ObjectParameter("Remark2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CashRewardToBCA", paymentRequestNoParameter, effectiveDateParameter, companyAccountParameter, companyCodeParameter, remark1Parameter, remark2Parameter);
        }
    
        public virtual ObjectResult<CashRewardToBTMU_Result> CashRewardToBTMU(string paymentRequestNo, string settlementAcc, string ccy, Nullable<System.DateTime> valueDate, string sector, string bankChr)
        {
            var paymentRequestNoParameter = paymentRequestNo != null ?
                new ObjectParameter("PaymentRequestNo", paymentRequestNo) :
                new ObjectParameter("PaymentRequestNo", typeof(string));
    
            var settlementAccParameter = settlementAcc != null ?
                new ObjectParameter("SettlementAcc", settlementAcc) :
                new ObjectParameter("SettlementAcc", typeof(string));
    
            var ccyParameter = ccy != null ?
                new ObjectParameter("Ccy", ccy) :
                new ObjectParameter("Ccy", typeof(string));
    
            var valueDateParameter = valueDate.HasValue ?
                new ObjectParameter("ValueDate", valueDate) :
                new ObjectParameter("ValueDate", typeof(System.DateTime));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("Sector", sector) :
                new ObjectParameter("Sector", typeof(string));
    
            var bankChrParameter = bankChr != null ?
                new ObjectParameter("BankChr", bankChr) :
                new ObjectParameter("BankChr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashRewardToBTMU_Result>("CashRewardToBTMU", paymentRequestNoParameter, settlementAccParameter, ccyParameter, valueDateParameter, sectorParameter, bankChrParameter);
        }
    
        public virtual ObjectResult<CashRewardUndefinedApRecipients_Result> CashRewardUndefinedApRecipients(string contractNumber, string brandName, string supplierName, string refundRecipientName)
        {
            var contractNumberParameter = contractNumber != null ?
                new ObjectParameter("ContractNumber", contractNumber) :
                new ObjectParameter("ContractNumber", typeof(string));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var refundRecipientNameParameter = refundRecipientName != null ?
                new ObjectParameter("RefundRecipientName", refundRecipientName) :
                new ObjectParameter("RefundRecipientName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashRewardUndefinedApRecipients_Result>("CashRewardUndefinedApRecipients", contractNumberParameter, brandNameParameter, supplierNameParameter, refundRecipientNameParameter);
        }
    
        public virtual ObjectResult<CashRewardUnidentifiedPaymentReport_Result> CashRewardUnidentifiedPaymentReport(string paymentRequestNo, string brand)
        {
            var paymentRequestNoParameter = paymentRequestNo != null ?
                new ObjectParameter("PaymentRequestNo", paymentRequestNo) :
                new ObjectParameter("PaymentRequestNo", typeof(string));
    
            var brandParameter = brand != null ?
                new ObjectParameter("Brand", brand) :
                new ObjectParameter("Brand", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashRewardUnidentifiedPaymentReport_Result>("CashRewardUnidentifiedPaymentReport", paymentRequestNoParameter, brandParameter);
        }
    
        public virtual ObjectResult<string> DomainFileServerGet(string pivchBranchCode)
        {
            var pivchBranchCodeParameter = pivchBranchCode != null ?
                new ObjectParameter("pivchBranchCode", pivchBranchCode) :
                new ObjectParameter("pivchBranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DomainFileServerGet", pivchBranchCodeParameter);
        }
    
        public virtual ObjectResult<EG_GetList_Result> EG_GetList(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EG_GetList_Result>("EG_GetList", userIdParameter);
        }
    
        public virtual int ElearningAnswerDelete(Nullable<decimal> questionerDtID)
        {
            var questionerDtIDParameter = questionerDtID.HasValue ?
                new ObjectParameter("QuestionerDtID", questionerDtID) :
                new ObjectParameter("QuestionerDtID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningAnswerDelete", questionerDtIDParameter);
        }
    
        public virtual int ElearningAnswerDtIDToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningAnswerDtIDToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<ElearningAnswerGet_Result> ElearningAnswerGet(Nullable<decimal> questionerDtID)
        {
            var questionerDtIDParameter = questionerDtID.HasValue ?
                new ObjectParameter("QuestionerDtID", questionerDtID) :
                new ObjectParameter("QuestionerDtID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningAnswerGet_Result>("ElearningAnswerGet", questionerDtIDParameter);
        }
    
        public virtual int ElearningAnswerInsert(Nullable<decimal> questionerDtID, string sequence, string questionerDtAnswer, Nullable<int> score, string pivchInputID)
        {
            var questionerDtIDParameter = questionerDtID.HasValue ?
                new ObjectParameter("QuestionerDtID", questionerDtID) :
                new ObjectParameter("QuestionerDtID", typeof(decimal));
    
            var sequenceParameter = sequence != null ?
                new ObjectParameter("Sequence", sequence) :
                new ObjectParameter("Sequence", typeof(string));
    
            var questionerDtAnswerParameter = questionerDtAnswer != null ?
                new ObjectParameter("QuestionerDtAnswer", questionerDtAnswer) :
                new ObjectParameter("QuestionerDtAnswer", typeof(string));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("Score", score) :
                new ObjectParameter("Score", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningAnswerInsert", questionerDtIDParameter, sequenceParameter, questionerDtAnswerParameter, scoreParameter, pivchInputIDParameter);
        }
    
        public virtual int ElearningAnswerUpdate(Nullable<decimal> questionerDtID, string sequence, string questionerDtAnswer, Nullable<bool> score, string pivchInputID)
        {
            var questionerDtIDParameter = questionerDtID.HasValue ?
                new ObjectParameter("QuestionerDtID", questionerDtID) :
                new ObjectParameter("QuestionerDtID", typeof(decimal));
    
            var sequenceParameter = sequence != null ?
                new ObjectParameter("Sequence", sequence) :
                new ObjectParameter("Sequence", typeof(string));
    
            var questionerDtAnswerParameter = questionerDtAnswer != null ?
                new ObjectParameter("QuestionerDtAnswer", questionerDtAnswer) :
                new ObjectParameter("QuestionerDtAnswer", typeof(string));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("Score", score) :
                new ObjectParameter("Score", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningAnswerUpdate", questionerDtIDParameter, sequenceParameter, questionerDtAnswerParameter, scoreParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<ElearningAnswerView_Result> ElearningAnswerView(Nullable<int> questionerAnswerID)
        {
            var questionerAnswerIDParameter = questionerAnswerID.HasValue ?
                new ObjectParameter("QuestionerAnswerID", questionerAnswerID) :
                new ObjectParameter("QuestionerAnswerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningAnswerView_Result>("ElearningAnswerView", questionerAnswerIDParameter);
        }
    
        public virtual ObjectResult<ElearningBroadcastDetailGet_Result> ElearningBroadcastDetailGet(string questionerCode, Nullable<bool> active, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningBroadcastDetailGet_Result>("ElearningBroadcastDetailGet", questionerCodeParameter, activeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<ElearningBroadcastGet_Result> ElearningBroadcastGet(string questionerCode, string questionerName, Nullable<int> branchID, string departementCode, Nullable<bool> active, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var questionerNameParameter = questionerName != null ?
                new ObjectParameter("QuestionerName", questionerName) :
                new ObjectParameter("QuestionerName", typeof(string));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var departementCodeParameter = departementCode != null ?
                new ObjectParameter("DepartementCode", departementCode) :
                new ObjectParameter("DepartementCode", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningBroadcastGet_Result>("ElearningBroadcastGet", questionerCodeParameter, questionerNameParameter, branchIDParameter, departementCodeParameter, activeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int ElearningBroadcastSet(Nullable<int> type, string questionerCode, Nullable<decimal> scheduleIdx, string userType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sendConfirmEmail, Nullable<System.DateTime> sendConfirmDate, Nullable<bool> active, string createBy)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var scheduleIdxParameter = scheduleIdx.HasValue ?
                new ObjectParameter("ScheduleIdx", scheduleIdx) :
                new ObjectParameter("ScheduleIdx", typeof(decimal));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sendConfirmEmailParameter = sendConfirmEmail != null ?
                new ObjectParameter("SendConfirmEmail", sendConfirmEmail) :
                new ObjectParameter("SendConfirmEmail", typeof(string));
    
            var sendConfirmDateParameter = sendConfirmDate.HasValue ?
                new ObjectParameter("SendConfirmDate", sendConfirmDate) :
                new ObjectParameter("SendConfirmDate", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var createByParameter = createBy != null ?
                new ObjectParameter("CreateBy", createBy) :
                new ObjectParameter("CreateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningBroadcastSet", typeParameter, questionerCodeParameter, scheduleIdxParameter, userTypeParameter, startDateParameter, endDateParameter, sendConfirmEmailParameter, sendConfirmDateParameter, activeParameter, createByParameter);
        }
    
        public virtual ObjectResult<ElearningBroadcastUserTestGet_Result> ElearningBroadcastUserTestGet(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningBroadcastUserTestGet_Result>("ElearningBroadcastUserTestGet", userIdParameter);
        }
    
        public virtual int ElearningDetailAddView(string keyID)
        {
            var keyIDParameter = keyID != null ?
                new ObjectParameter("keyID", keyID) :
                new ObjectParameter("keyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningDetailAddView", keyIDParameter);
        }
    
        public virtual int ElearningDetailCodeToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningDetailCodeToCombo", pivchWhereParameter);
        }
    
        public virtual int ElearningDetailDelete(Nullable<decimal> questionerDtID)
        {
            var questionerDtIDParameter = questionerDtID.HasValue ?
                new ObjectParameter("QuestionerDtID", questionerDtID) :
                new ObjectParameter("QuestionerDtID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningDetailDelete", questionerDtIDParameter);
        }
    
        public virtual ObjectResult<ElearningDetailGet_Result> ElearningDetailGet(string questionerCode, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningDetailGet_Result>("ElearningDetailGet", questionerCodeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int ElearningDetailSet(Nullable<int> type, string questionerCode, Nullable<decimal> questionerDtID, string questionerTypeID, string questionerTest, string questionerAnswer, Nullable<int> questionerScore, Nullable<bool> active, string pivchInputID, ObjectParameter pointID)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var questionerDtIDParameter = questionerDtID.HasValue ?
                new ObjectParameter("QuestionerDtID", questionerDtID) :
                new ObjectParameter("QuestionerDtID", typeof(decimal));
    
            var questionerTypeIDParameter = questionerTypeID != null ?
                new ObjectParameter("QuestionerTypeID", questionerTypeID) :
                new ObjectParameter("QuestionerTypeID", typeof(string));
    
            var questionerTestParameter = questionerTest != null ?
                new ObjectParameter("QuestionerTest", questionerTest) :
                new ObjectParameter("QuestionerTest", typeof(string));
    
            var questionerAnswerParameter = questionerAnswer != null ?
                new ObjectParameter("QuestionerAnswer", questionerAnswer) :
                new ObjectParameter("QuestionerAnswer", typeof(string));
    
            var questionerScoreParameter = questionerScore.HasValue ?
                new ObjectParameter("QuestionerScore", questionerScore) :
                new ObjectParameter("QuestionerScore", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningDetailSet", typeParameter, questionerCodeParameter, questionerDtIDParameter, questionerTypeIDParameter, questionerTestParameter, questionerAnswerParameter, questionerScoreParameter, activeParameter, pivchInputIDParameter, pointID);
        }
    
        public virtual int ElearningDetailTypeToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningDetailTypeToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<ElearningDetailView_Result> ElearningDetailView(Nullable<decimal> questionerDtID)
        {
            var questionerDtIDParameter = questionerDtID.HasValue ?
                new ObjectParameter("QuestionerDtID", questionerDtID) :
                new ObjectParameter("QuestionerDtID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningDetailView_Result>("ElearningDetailView", questionerDtIDParameter);
        }
    
        public virtual int ElearningMasterDelete(string questionerCode)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningMasterDelete", questionerCodeParameter);
        }
    
        public virtual int ElearningMasterDownload(string questionerCode)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningMasterDownload", questionerCodeParameter);
        }
    
        public virtual ObjectResult<ElearningMasterGet_Result> ElearningMasterGet(string questionerCode, string questionerName, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var questionerNameParameter = questionerName != null ?
                new ObjectParameter("QuestionerName", questionerName) :
                new ObjectParameter("QuestionerName", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningMasterGet_Result>("ElearningMasterGet", questionerCodeParameter, questionerNameParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int ElearningMasterSet(Nullable<int> type, string questionerCode, Nullable<bool> active, Nullable<int> branchId, string departementCode, string questionerName, string description, string questionerLink, Nullable<System.DateTime> questionerSchedule, string pivchInputID)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var departementCodeParameter = departementCode != null ?
                new ObjectParameter("DepartementCode", departementCode) :
                new ObjectParameter("DepartementCode", typeof(string));
    
            var questionerNameParameter = questionerName != null ?
                new ObjectParameter("QuestionerName", questionerName) :
                new ObjectParameter("QuestionerName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var questionerLinkParameter = questionerLink != null ?
                new ObjectParameter("QuestionerLink", questionerLink) :
                new ObjectParameter("QuestionerLink", typeof(string));
    
            var questionerScheduleParameter = questionerSchedule.HasValue ?
                new ObjectParameter("QuestionerSchedule", questionerSchedule) :
                new ObjectParameter("QuestionerSchedule", typeof(System.DateTime));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningMasterSet", typeParameter, questionerCodeParameter, activeParameter, branchIdParameter, departementCodeParameter, questionerNameParameter, descriptionParameter, questionerLinkParameter, questionerScheduleParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<ElearningMasterView_Result> ElearningMasterView(string questionerCode)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningMasterView_Result>("ElearningMasterView", questionerCodeParameter);
        }
    
        public virtual int ElearningPointInsert(string questionerCode, string pivchInputID, Nullable<int> questionerPointTotal)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            var questionerPointTotalParameter = questionerPointTotal.HasValue ?
                new ObjectParameter("QuestionerPointTotal", questionerPointTotal) :
                new ObjectParameter("QuestionerPointTotal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningPointInsert", questionerCodeParameter, pivchInputIDParameter, questionerPointTotalParameter);
        }
    
        public virtual ObjectResult<ElearningReportDt_Result> ElearningReportDt(string questionerCode, Nullable<decimal> scheduleIdx, string userID)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var scheduleIdxParameter = scheduleIdx.HasValue ?
                new ObjectParameter("ScheduleIdx", scheduleIdx) :
                new ObjectParameter("ScheduleIdx", typeof(decimal));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningReportDt_Result>("ElearningReportDt", questionerCodeParameter, scheduleIdxParameter, userIDParameter);
        }
    
        public virtual ObjectResult<ElearningReportHd_Result> ElearningReportHd(string questionerCode, Nullable<decimal> scheduleIdx)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var scheduleIdxParameter = scheduleIdx.HasValue ?
                new ObjectParameter("ScheduleIdx", scheduleIdx) :
                new ObjectParameter("ScheduleIdx", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningReportHd_Result>("ElearningReportHd", questionerCodeParameter, scheduleIdxParameter);
        }
    
        public virtual ObjectResult<ElearningResultGet_Result> ElearningResultGet(Nullable<int> branchID, string departementCode, string questionerCode, string questionerName, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var departementCodeParameter = departementCode != null ?
                new ObjectParameter("DepartementCode", departementCode) :
                new ObjectParameter("DepartementCode", typeof(string));
    
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var questionerNameParameter = questionerName != null ?
                new ObjectParameter("QuestionerName", questionerName) :
                new ObjectParameter("QuestionerName", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningResultGet_Result>("ElearningResultGet", branchIDParameter, departementCodeParameter, questionerCodeParameter, questionerNameParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int ElearningResultInsert(string questionerCode, Nullable<int> questionerPointTotal, string pivchInputID)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var questionerPointTotalParameter = questionerPointTotal.HasValue ?
                new ObjectParameter("QuestionerPointTotal", questionerPointTotal) :
                new ObjectParameter("QuestionerPointTotal", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningResultInsert", questionerCodeParameter, questionerPointTotalParameter, pivchInputIDParameter);
        }
    
        public virtual int ElearningScheduleReminderGet(string questionerCode)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningScheduleReminderGet", questionerCodeParameter);
        }
    
        public virtual int ElearningTestDetailCount(string questionerCode)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningTestDetailCount", questionerCodeParameter);
        }
    
        public virtual int ElearningTestDetailGet(string questionerCode, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningTestDetailGet", questionerCodeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<ElearningTestDetailGetAnswer_Result> ElearningTestDetailGetAnswer(Nullable<decimal> questionerDtID)
        {
            var questionerDtIDParameter = questionerDtID.HasValue ?
                new ObjectParameter("QuestionerDtID", questionerDtID) :
                new ObjectParameter("QuestionerDtID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningTestDetailGetAnswer_Result>("ElearningTestDetailGetAnswer", questionerDtIDParameter);
        }
    
        public virtual int ElearningTestDetailSet(string questionerCode, Nullable<decimal> scheduleIdx, Nullable<decimal> questionerDtID, string questionerUserAnswer, Nullable<bool> active, string pivchInputID)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var scheduleIdxParameter = scheduleIdx.HasValue ?
                new ObjectParameter("ScheduleIdx", scheduleIdx) :
                new ObjectParameter("ScheduleIdx", typeof(decimal));
    
            var questionerDtIDParameter = questionerDtID.HasValue ?
                new ObjectParameter("QuestionerDtID", questionerDtID) :
                new ObjectParameter("QuestionerDtID", typeof(decimal));
    
            var questionerUserAnswerParameter = questionerUserAnswer != null ?
                new ObjectParameter("QuestionerUserAnswer", questionerUserAnswer) :
                new ObjectParameter("QuestionerUserAnswer", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningTestDetailSet", questionerCodeParameter, scheduleIdxParameter, questionerDtIDParameter, questionerUserAnswerParameter, activeParameter, pivchInputIDParameter);
        }
    
        public virtual int ElearningTestHDSet(string questionerCode, Nullable<decimal> scheduleIdx, string userID)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var scheduleIdxParameter = scheduleIdx.HasValue ?
                new ObjectParameter("ScheduleIdx", scheduleIdx) :
                new ObjectParameter("ScheduleIdx", typeof(decimal));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningTestHDSet", questionerCodeParameter, scheduleIdxParameter, userIDParameter);
        }
    
        public virtual int ElearningTestNameToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningTestNameToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ElearningTestUserResult(Nullable<decimal> scheduleIdx, string userId)
        {
            var scheduleIdxParameter = scheduleIdx.HasValue ?
                new ObjectParameter("ScheduleIdx", scheduleIdx) :
                new ObjectParameter("ScheduleIdx", typeof(decimal));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ElearningTestUserResult", scheduleIdxParameter, userIdParameter);
        }
    
        public virtual int ElearningTypeDelete(Nullable<int> questionerTypeID)
        {
            var questionerTypeIDParameter = questionerTypeID.HasValue ?
                new ObjectParameter("QuestionerTypeID", questionerTypeID) :
                new ObjectParameter("QuestionerTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningTypeDelete", questionerTypeIDParameter);
        }
    
        public virtual int ElearningTypeGet(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningTypeGet", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int ElearningTypeInsert(Nullable<int> questionerTypeID, string questionerTypeName, string questionerTypeDescription, Nullable<bool> active, string pivchInputID)
        {
            var questionerTypeIDParameter = questionerTypeID.HasValue ?
                new ObjectParameter("QuestionerTypeID", questionerTypeID) :
                new ObjectParameter("QuestionerTypeID", typeof(int));
    
            var questionerTypeNameParameter = questionerTypeName != null ?
                new ObjectParameter("QuestionerTypeName", questionerTypeName) :
                new ObjectParameter("QuestionerTypeName", typeof(string));
    
            var questionerTypeDescriptionParameter = questionerTypeDescription != null ?
                new ObjectParameter("QuestionerTypeDescription", questionerTypeDescription) :
                new ObjectParameter("QuestionerTypeDescription", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningTypeInsert", questionerTypeIDParameter, questionerTypeNameParameter, questionerTypeDescriptionParameter, activeParameter, pivchInputIDParameter);
        }
    
        public virtual int ElearningTypeNameToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningTypeNameToCombo", pivchWhereParameter);
        }
    
        public virtual int ElearningTypeUpdate(string keyID, Nullable<int> questionerTypeID, string questionerTypeName, string questionerTypeDescription, Nullable<bool> active, string pivchInputID)
        {
            var keyIDParameter = keyID != null ?
                new ObjectParameter("keyID", keyID) :
                new ObjectParameter("keyID", typeof(string));
    
            var questionerTypeIDParameter = questionerTypeID.HasValue ?
                new ObjectParameter("QuestionerTypeID", questionerTypeID) :
                new ObjectParameter("QuestionerTypeID", typeof(int));
    
            var questionerTypeNameParameter = questionerTypeName != null ?
                new ObjectParameter("QuestionerTypeName", questionerTypeName) :
                new ObjectParameter("QuestionerTypeName", typeof(string));
    
            var questionerTypeDescriptionParameter = questionerTypeDescription != null ?
                new ObjectParameter("QuestionerTypeDescription", questionerTypeDescription) :
                new ObjectParameter("QuestionerTypeDescription", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningTypeUpdate", keyIDParameter, questionerTypeIDParameter, questionerTypeNameParameter, questionerTypeDescriptionParameter, activeParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<ElearningTypeView_Result> ElearningTypeView(Nullable<int> questionerTypeID)
        {
            var questionerTypeIDParameter = questionerTypeID.HasValue ?
                new ObjectParameter("QuestionerTypeID", questionerTypeID) :
                new ObjectParameter("QuestionerTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningTypeView_Result>("ElearningTypeView", questionerTypeIDParameter);
        }
    
        public virtual int ElearningUserResultDelete(Nullable<long> pointID)
        {
            var pointIDParameter = pointID.HasValue ?
                new ObjectParameter("PointID", pointID) :
                new ObjectParameter("PointID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningUserResultDelete", pointIDParameter);
        }
    
        public virtual ObjectResult<ElearningUserResultGet_Result> ElearningUserResultGet(string questionerCode, Nullable<decimal> scheduleIdx, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var scheduleIdxParameter = scheduleIdx.HasValue ?
                new ObjectParameter("ScheduleIdx", scheduleIdx) :
                new ObjectParameter("ScheduleIdx", typeof(decimal));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningUserResultGet_Result>("ElearningUserResultGet", questionerCodeParameter, scheduleIdxParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int ElearningUserScheduleSet(Nullable<int> type, string userBy, string active, string branchId, string questionerCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var userByParameter = userBy != null ?
                new ObjectParameter("UserBy", userBy) :
                new ObjectParameter("UserBy", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var branchIdParameter = branchId != null ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(string));
    
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningUserScheduleSet", typeParameter, userByParameter, activeParameter, branchIdParameter, questionerCodeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ElearningUserTestGet_Result> ElearningUserTestGet(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ElearningUserTestGet_Result>("ElearningUserTestGet", userIdParameter);
        }
    
        public virtual int ElearningUserTestSet(Nullable<int> type, string userId, string active, string userBy, string questionerCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var userByParameter = userBy != null ?
                new ObjectParameter("UserBy", userBy) :
                new ObjectParameter("UserBy", typeof(string));
    
            var questionerCodeParameter = questionerCode != null ?
                new ObjectParameter("QuestionerCode", questionerCode) :
                new ObjectParameter("QuestionerCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElearningUserTestSet", typeParameter, userIdParameter, activeParameter, userByParameter, questionerCodeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<string> ENTERTAINMENT_CREATE_DEALER(string dealerCode, string dealerName, string inputBy)
        {
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var dealerNameParameter = dealerName != null ?
                new ObjectParameter("DealerName", dealerName) :
                new ObjectParameter("DealerName", typeof(string));
    
            var inputByParameter = inputBy != null ?
                new ObjectParameter("InputBy", inputBy) :
                new ObjectParameter("InputBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ENTERTAINMENT_CREATE_DEALER", dealerCodeParameter, dealerNameParameter, inputByParameter);
        }
    
        public virtual ObjectResult<string> ENTERTAINMENT_CREATE_DEPT(string deptCode, string deptName)
        {
            var deptCodeParameter = deptCode != null ?
                new ObjectParameter("DeptCode", deptCode) :
                new ObjectParameter("DeptCode", typeof(string));
    
            var deptNameParameter = deptName != null ?
                new ObjectParameter("DeptName", deptName) :
                new ObjectParameter("DeptName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ENTERTAINMENT_CREATE_DEPT", deptCodeParameter, deptNameParameter);
        }
    
        public virtual int ENTERTAINMENT_DEALER_REPORT(string pivchWhereBy, string pivchUserID)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ENTERTAINMENT_DEALER_REPORT", pivchWhereByParameter, pivchUserIDParameter);
        }
    
        public virtual ObjectResult<string> ENTERTAINMENT_EDIT_DEALER(string dealerCode, string dealerName, Nullable<bool> status, string inputBy)
        {
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var dealerNameParameter = dealerName != null ?
                new ObjectParameter("DealerName", dealerName) :
                new ObjectParameter("DealerName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var inputByParameter = inputBy != null ?
                new ObjectParameter("InputBy", inputBy) :
                new ObjectParameter("InputBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ENTERTAINMENT_EDIT_DEALER", dealerCodeParameter, dealerNameParameter, statusParameter, inputByParameter);
        }
    
        public virtual ObjectResult<string> ENTERTAINMENT_EDIT_DEPT(string deptCode, string deptName, Nullable<bool> status)
        {
            var deptCodeParameter = deptCode != null ?
                new ObjectParameter("DeptCode", deptCode) :
                new ObjectParameter("DeptCode", typeof(string));
    
            var deptNameParameter = deptName != null ?
                new ObjectParameter("DeptName", deptName) :
                new ObjectParameter("DeptName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ENTERTAINMENT_EDIT_DEPT", deptCodeParameter, deptNameParameter, statusParameter);
        }
    
        public virtual ObjectResult<ENTERTAINMENT_GET_DEALER_Result> ENTERTAINMENT_GET_DEALER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ENTERTAINMENT_GET_DEALER_Result>("ENTERTAINMENT_GET_DEALER");
        }
    
        public virtual ObjectResult<ENTERTAINMENT_GET_DEPT_Result> ENTERTAINMENT_GET_DEPT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ENTERTAINMENT_GET_DEPT_Result>("ENTERTAINMENT_GET_DEPT");
        }
    
        public virtual int ENTERTAINMENT_GIFT_APPROVE(Nullable<int> keyID, string status)
        {
            var keyIDParameter = keyID.HasValue ?
                new ObjectParameter("KeyID", keyID) :
                new ObjectParameter("KeyID", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ENTERTAINMENT_GIFT_APPROVE", keyIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<ENTERTAINMENT_GIFT_EDIT_Result> ENTERTAINMENT_GIFT_EDIT(Nullable<int> keyID)
        {
            var keyIDParameter = keyID.HasValue ?
                new ObjectParameter("KeyID", keyID) :
                new ObjectParameter("KeyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ENTERTAINMENT_GIFT_EDIT_Result>("ENTERTAINMENT_GIFT_EDIT", keyIDParameter);
        }
    
        public virtual ObjectResult<ENTERTAINMENT_GIFT_HISTORY_Result> ENTERTAINMENT_GIFT_HISTORY(string dateStart, string dateEnd, string seqId, string createby)
        {
            var dateStartParameter = dateStart != null ?
                new ObjectParameter("dateStart", dateStart) :
                new ObjectParameter("dateStart", typeof(string));
    
            var dateEndParameter = dateEnd != null ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(string));
    
            var seqIdParameter = seqId != null ?
                new ObjectParameter("SeqId", seqId) :
                new ObjectParameter("SeqId", typeof(string));
    
            var createbyParameter = createby != null ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ENTERTAINMENT_GIFT_HISTORY_Result>("ENTERTAINMENT_GIFT_HISTORY", dateStartParameter, dateEndParameter, seqIdParameter, createbyParameter);
        }
    
        public virtual ObjectResult<ENTERTAINMENT_GIFT_INSERT_Result> ENTERTAINMENT_GIFT_INSERT(string applName, string bankName, string accName, string accNo, string ddlBranch, string rdAcceptanceOffer, string lineBussines, Nullable<int> rdCounterparty, string countpartyName, string purpose, Nullable<int> rdEvents, string place, Nullable<System.DateTime> datepicker, string time, string ourAttendee, string counterAttendee, Nullable<decimal> estBudget, Nullable<decimal> totalAmount, string reason, string receiptNo, string participant1, Nullable<double> percentage1, string participant2, Nullable<double> percentage2, string participant3, Nullable<double> percentage3, Nullable<int> rdAntiSocialCheck, string reasonAnti, string userName, string dept, string rdlRegulerSudden, string companyJPN, string comments, Nullable<bool> oriReceiptAttach, string createDate, string createBy)
        {
            var applNameParameter = applName != null ?
                new ObjectParameter("ApplName", applName) :
                new ObjectParameter("ApplName", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var accNameParameter = accName != null ?
                new ObjectParameter("AccName", accName) :
                new ObjectParameter("AccName", typeof(string));
    
            var accNoParameter = accNo != null ?
                new ObjectParameter("AccNo", accNo) :
                new ObjectParameter("AccNo", typeof(string));
    
            var ddlBranchParameter = ddlBranch != null ?
                new ObjectParameter("ddlBranch", ddlBranch) :
                new ObjectParameter("ddlBranch", typeof(string));
    
            var rdAcceptanceOfferParameter = rdAcceptanceOffer != null ?
                new ObjectParameter("rdAcceptanceOffer", rdAcceptanceOffer) :
                new ObjectParameter("rdAcceptanceOffer", typeof(string));
    
            var lineBussinesParameter = lineBussines != null ?
                new ObjectParameter("LineBussines", lineBussines) :
                new ObjectParameter("LineBussines", typeof(string));
    
            var rdCounterpartyParameter = rdCounterparty.HasValue ?
                new ObjectParameter("rdCounterparty", rdCounterparty) :
                new ObjectParameter("rdCounterparty", typeof(int));
    
            var countpartyNameParameter = countpartyName != null ?
                new ObjectParameter("CountpartyName", countpartyName) :
                new ObjectParameter("CountpartyName", typeof(string));
    
            var purposeParameter = purpose != null ?
                new ObjectParameter("Purpose", purpose) :
                new ObjectParameter("Purpose", typeof(string));
    
            var rdEventsParameter = rdEvents.HasValue ?
                new ObjectParameter("RdEvents", rdEvents) :
                new ObjectParameter("RdEvents", typeof(int));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var datepickerParameter = datepicker.HasValue ?
                new ObjectParameter("datepicker", datepicker) :
                new ObjectParameter("datepicker", typeof(System.DateTime));
    
            var timeParameter = time != null ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(string));
    
            var ourAttendeeParameter = ourAttendee != null ?
                new ObjectParameter("OurAttendee", ourAttendee) :
                new ObjectParameter("OurAttendee", typeof(string));
    
            var counterAttendeeParameter = counterAttendee != null ?
                new ObjectParameter("CounterAttendee", counterAttendee) :
                new ObjectParameter("CounterAttendee", typeof(string));
    
            var estBudgetParameter = estBudget.HasValue ?
                new ObjectParameter("EstBudget", estBudget) :
                new ObjectParameter("EstBudget", typeof(decimal));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var participant1Parameter = participant1 != null ?
                new ObjectParameter("Participant1", participant1) :
                new ObjectParameter("Participant1", typeof(string));
    
            var percentage1Parameter = percentage1.HasValue ?
                new ObjectParameter("Percentage1", percentage1) :
                new ObjectParameter("Percentage1", typeof(double));
    
            var participant2Parameter = participant2 != null ?
                new ObjectParameter("Participant2", participant2) :
                new ObjectParameter("Participant2", typeof(string));
    
            var percentage2Parameter = percentage2.HasValue ?
                new ObjectParameter("Percentage2", percentage2) :
                new ObjectParameter("Percentage2", typeof(double));
    
            var participant3Parameter = participant3 != null ?
                new ObjectParameter("Participant3", participant3) :
                new ObjectParameter("Participant3", typeof(string));
    
            var percentage3Parameter = percentage3.HasValue ?
                new ObjectParameter("Percentage3", percentage3) :
                new ObjectParameter("Percentage3", typeof(double));
    
            var rdAntiSocialCheckParameter = rdAntiSocialCheck.HasValue ?
                new ObjectParameter("rdAntiSocialCheck", rdAntiSocialCheck) :
                new ObjectParameter("rdAntiSocialCheck", typeof(int));
    
            var reasonAntiParameter = reasonAnti != null ?
                new ObjectParameter("ReasonAnti", reasonAnti) :
                new ObjectParameter("ReasonAnti", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var deptParameter = dept != null ?
                new ObjectParameter("Dept", dept) :
                new ObjectParameter("Dept", typeof(string));
    
            var rdlRegulerSuddenParameter = rdlRegulerSudden != null ?
                new ObjectParameter("rdlRegulerSudden", rdlRegulerSudden) :
                new ObjectParameter("rdlRegulerSudden", typeof(string));
    
            var companyJPNParameter = companyJPN != null ?
                new ObjectParameter("CompanyJPN", companyJPN) :
                new ObjectParameter("CompanyJPN", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var oriReceiptAttachParameter = oriReceiptAttach.HasValue ?
                new ObjectParameter("OriReceiptAttach", oriReceiptAttach) :
                new ObjectParameter("OriReceiptAttach", typeof(bool));
    
            var createDateParameter = createDate != null ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(string));
    
            var createByParameter = createBy != null ?
                new ObjectParameter("CreateBy", createBy) :
                new ObjectParameter("CreateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ENTERTAINMENT_GIFT_INSERT_Result>("ENTERTAINMENT_GIFT_INSERT", applNameParameter, bankNameParameter, accNameParameter, accNoParameter, ddlBranchParameter, rdAcceptanceOfferParameter, lineBussinesParameter, rdCounterpartyParameter, countpartyNameParameter, purposeParameter, rdEventsParameter, placeParameter, datepickerParameter, timeParameter, ourAttendeeParameter, counterAttendeeParameter, estBudgetParameter, totalAmountParameter, reasonParameter, receiptNoParameter, participant1Parameter, percentage1Parameter, participant2Parameter, percentage2Parameter, participant3Parameter, percentage3Parameter, rdAntiSocialCheckParameter, reasonAntiParameter, userNameParameter, deptParameter, rdlRegulerSuddenParameter, companyJPNParameter, commentsParameter, oriReceiptAttachParameter, createDateParameter, createByParameter);
        }
    
        public virtual int ENTERTAINMENT_GIFT_REPORT_VIEW(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string branch, string status, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ENTERTAINMENT_GIFT_REPORT_VIEW", startDateParameter, endDateParameter, branchParameter, statusParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int ENTERTAINMENT_GIFT_UPDATE(Nullable<int> keyID, string applName, string bankName, string accName, string accNo, string ddlBranch, string rdAcceptanceOffer, string lineBussines, Nullable<int> rdCounterparty, string countpartyName, string purpose, Nullable<int> rdEvents, string place, Nullable<System.DateTime> datepicker, string time, string ourAttendee, string counterAttendee, Nullable<decimal> estBudget, Nullable<decimal> totalAmount, string reason, string receiptNo, string participant1, Nullable<double> percentage1, string participant2, Nullable<double> percentage2, string participant3, Nullable<double> percentage3, Nullable<int> rdAntiSocialCheck, string reasonAnti, string userName, string dept, string rdlRegulerSudden, string companyJPN, string comments, Nullable<bool> oriReceiptAttach, string createDate, string updateBy)
        {
            var keyIDParameter = keyID.HasValue ?
                new ObjectParameter("KeyID", keyID) :
                new ObjectParameter("KeyID", typeof(int));
    
            var applNameParameter = applName != null ?
                new ObjectParameter("ApplName", applName) :
                new ObjectParameter("ApplName", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var accNameParameter = accName != null ?
                new ObjectParameter("AccName", accName) :
                new ObjectParameter("AccName", typeof(string));
    
            var accNoParameter = accNo != null ?
                new ObjectParameter("AccNo", accNo) :
                new ObjectParameter("AccNo", typeof(string));
    
            var ddlBranchParameter = ddlBranch != null ?
                new ObjectParameter("ddlBranch", ddlBranch) :
                new ObjectParameter("ddlBranch", typeof(string));
    
            var rdAcceptanceOfferParameter = rdAcceptanceOffer != null ?
                new ObjectParameter("rdAcceptanceOffer", rdAcceptanceOffer) :
                new ObjectParameter("rdAcceptanceOffer", typeof(string));
    
            var lineBussinesParameter = lineBussines != null ?
                new ObjectParameter("LineBussines", lineBussines) :
                new ObjectParameter("LineBussines", typeof(string));
    
            var rdCounterpartyParameter = rdCounterparty.HasValue ?
                new ObjectParameter("rdCounterparty", rdCounterparty) :
                new ObjectParameter("rdCounterparty", typeof(int));
    
            var countpartyNameParameter = countpartyName != null ?
                new ObjectParameter("CountpartyName", countpartyName) :
                new ObjectParameter("CountpartyName", typeof(string));
    
            var purposeParameter = purpose != null ?
                new ObjectParameter("Purpose", purpose) :
                new ObjectParameter("Purpose", typeof(string));
    
            var rdEventsParameter = rdEvents.HasValue ?
                new ObjectParameter("RdEvents", rdEvents) :
                new ObjectParameter("RdEvents", typeof(int));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var datepickerParameter = datepicker.HasValue ?
                new ObjectParameter("datepicker", datepicker) :
                new ObjectParameter("datepicker", typeof(System.DateTime));
    
            var timeParameter = time != null ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(string));
    
            var ourAttendeeParameter = ourAttendee != null ?
                new ObjectParameter("OurAttendee", ourAttendee) :
                new ObjectParameter("OurAttendee", typeof(string));
    
            var counterAttendeeParameter = counterAttendee != null ?
                new ObjectParameter("CounterAttendee", counterAttendee) :
                new ObjectParameter("CounterAttendee", typeof(string));
    
            var estBudgetParameter = estBudget.HasValue ?
                new ObjectParameter("EstBudget", estBudget) :
                new ObjectParameter("EstBudget", typeof(decimal));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var participant1Parameter = participant1 != null ?
                new ObjectParameter("Participant1", participant1) :
                new ObjectParameter("Participant1", typeof(string));
    
            var percentage1Parameter = percentage1.HasValue ?
                new ObjectParameter("Percentage1", percentage1) :
                new ObjectParameter("Percentage1", typeof(double));
    
            var participant2Parameter = participant2 != null ?
                new ObjectParameter("Participant2", participant2) :
                new ObjectParameter("Participant2", typeof(string));
    
            var percentage2Parameter = percentage2.HasValue ?
                new ObjectParameter("Percentage2", percentage2) :
                new ObjectParameter("Percentage2", typeof(double));
    
            var participant3Parameter = participant3 != null ?
                new ObjectParameter("Participant3", participant3) :
                new ObjectParameter("Participant3", typeof(string));
    
            var percentage3Parameter = percentage3.HasValue ?
                new ObjectParameter("Percentage3", percentage3) :
                new ObjectParameter("Percentage3", typeof(double));
    
            var rdAntiSocialCheckParameter = rdAntiSocialCheck.HasValue ?
                new ObjectParameter("rdAntiSocialCheck", rdAntiSocialCheck) :
                new ObjectParameter("rdAntiSocialCheck", typeof(int));
    
            var reasonAntiParameter = reasonAnti != null ?
                new ObjectParameter("ReasonAnti", reasonAnti) :
                new ObjectParameter("ReasonAnti", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var deptParameter = dept != null ?
                new ObjectParameter("Dept", dept) :
                new ObjectParameter("Dept", typeof(string));
    
            var rdlRegulerSuddenParameter = rdlRegulerSudden != null ?
                new ObjectParameter("rdlRegulerSudden", rdlRegulerSudden) :
                new ObjectParameter("rdlRegulerSudden", typeof(string));
    
            var companyJPNParameter = companyJPN != null ?
                new ObjectParameter("CompanyJPN", companyJPN) :
                new ObjectParameter("CompanyJPN", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var oriReceiptAttachParameter = oriReceiptAttach.HasValue ?
                new ObjectParameter("OriReceiptAttach", oriReceiptAttach) :
                new ObjectParameter("OriReceiptAttach", typeof(bool));
    
            var createDateParameter = createDate != null ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(string));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ENTERTAINMENT_GIFT_UPDATE", keyIDParameter, applNameParameter, bankNameParameter, accNameParameter, accNoParameter, ddlBranchParameter, rdAcceptanceOfferParameter, lineBussinesParameter, rdCounterpartyParameter, countpartyNameParameter, purposeParameter, rdEventsParameter, placeParameter, datepickerParameter, timeParameter, ourAttendeeParameter, counterAttendeeParameter, estBudgetParameter, totalAmountParameter, reasonParameter, receiptNoParameter, participant1Parameter, percentage1Parameter, participant2Parameter, percentage2Parameter, participant3Parameter, percentage3Parameter, rdAntiSocialCheckParameter, reasonAntiParameter, userNameParameter, deptParameter, rdlRegulerSuddenParameter, companyJPNParameter, commentsParameter, oriReceiptAttachParameter, createDateParameter, updateByParameter);
        }
    
        public virtual int ENTERTAINMENT_GIFT_UPDATE_HISTORY(string keyID)
        {
            var keyIDParameter = keyID != null ?
                new ObjectParameter("KeyID", keyID) :
                new ObjectParameter("KeyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ENTERTAINMENT_GIFT_UPDATE_HISTORY", keyIDParameter);
        }
    
        public virtual ObjectResult<ENTERTAINMENT_GIFT_VIEW_SHOW_Result> ENTERTAINMENT_GIFT_VIEW_SHOW(Nullable<int> startRowIndex, Nullable<int> maximumRows, Nullable<int> type)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("maximumRows", maximumRows) :
                new ObjectParameter("maximumRows", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ENTERTAINMENT_GIFT_VIEW_SHOW_Result>("ENTERTAINMENT_GIFT_VIEW_SHOW", startRowIndexParameter, maximumRowsParameter, typeParameter);
        }
    
        public virtual int ENTERTAINMENT_OTOCANCEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ENTERTAINMENT_OTOCANCEL");
        }
    
        public virtual ObjectResult<ENTERTAINMENT_SEARCH_DEALER_Result> ENTERTAINMENT_SEARCH_DEALER(string namaDealer, string status, string kodeDealer)
        {
            var namaDealerParameter = namaDealer != null ?
                new ObjectParameter("NamaDealer", namaDealer) :
                new ObjectParameter("NamaDealer", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var kodeDealerParameter = kodeDealer != null ?
                new ObjectParameter("KodeDealer", kodeDealer) :
                new ObjectParameter("KodeDealer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ENTERTAINMENT_SEARCH_DEALER_Result>("ENTERTAINMENT_SEARCH_DEALER", namaDealerParameter, statusParameter, kodeDealerParameter);
        }
    
        public virtual ObjectResult<ENTERTAINMENT_SEARCH_DEPT_Result> ENTERTAINMENT_SEARCH_DEPT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ENTERTAINMENT_SEARCH_DEPT_Result>("ENTERTAINMENT_SEARCH_DEPT");
        }
    
        public virtual int ENTERTAINMENT_SET_OTOCANCELDATE(Nullable<int> cancelDate, string pivchInputID)
        {
            var cancelDateParameter = cancelDate.HasValue ?
                new ObjectParameter("CancelDate", cancelDate) :
                new ObjectParameter("CancelDate", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ENTERTAINMENT_SET_OTOCANCELDATE", cancelDateParameter, pivchInputIDParameter);
        }
    
        public virtual int EntertainmentGetHistory(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, string seqId, string createby, string status, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("dateStart", dateStart) :
                new ObjectParameter("dateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            var seqIdParameter = seqId != null ?
                new ObjectParameter("SeqId", seqId) :
                new ObjectParameter("SeqId", typeof(string));
    
            var createbyParameter = createby != null ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EntertainmentGetHistory", dateStartParameter, dateEndParameter, seqIdParameter, createbyParameter, statusParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int EntertainmentSetApproval(Nullable<int> keyID, string status, string pivchInputID)
        {
            var keyIDParameter = keyID.HasValue ?
                new ObjectParameter("KeyID", keyID) :
                new ObjectParameter("KeyID", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EntertainmentSetApproval", keyIDParameter, statusParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<EntertainmentSetEdit_Result> EntertainmentSetEdit(Nullable<int> keyID)
        {
            var keyIDParameter = keyID.HasValue ?
                new ObjectParameter("KeyID", keyID) :
                new ObjectParameter("KeyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EntertainmentSetEdit_Result>("EntertainmentSetEdit", keyIDParameter);
        }
    
        public virtual ObjectResult<EPCWorkflowStatus_Result> EPCWorkflowStatus(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPCWorkflowStatus_Result>("EPCWorkflowStatus", dateFromParameter, dateToParameter);
        }
    
        public virtual int ExpensePaymentCreationDetail(Nullable<decimal> apCreationId, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var apCreationIdParameter = apCreationId.HasValue ?
                new ObjectParameter("ApCreationId", apCreationId) :
                new ObjectParameter("ApCreationId", typeof(decimal));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExpensePaymentCreationDetail", apCreationIdParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int ExpensePaymentCreationGetList(Nullable<System.DateTime> paidRequestFrom, Nullable<System.DateTime> paidRequestTo, Nullable<int> branchId, string expenseCode, string active, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var paidRequestFromParameter = paidRequestFrom.HasValue ?
                new ObjectParameter("PaidRequestFrom", paidRequestFrom) :
                new ObjectParameter("PaidRequestFrom", typeof(System.DateTime));
    
            var paidRequestToParameter = paidRequestTo.HasValue ?
                new ObjectParameter("PaidRequestTo", paidRequestTo) :
                new ObjectParameter("PaidRequestTo", typeof(System.DateTime));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var expenseCodeParameter = expenseCode != null ?
                new ObjectParameter("ExpenseCode", expenseCode) :
                new ObjectParameter("ExpenseCode", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExpensePaymentCreationGetList", paidRequestFromParameter, paidRequestToParameter, branchIdParameter, expenseCodeParameter, activeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int ExpensePaymentCreationRequestSet(Nullable<decimal> apCreationID, string voucherNo, string status, string userId)
        {
            var apCreationIDParameter = apCreationID.HasValue ?
                new ObjectParameter("ApCreationID", apCreationID) :
                new ObjectParameter("ApCreationID", typeof(decimal));
    
            var voucherNoParameter = voucherNo != null ?
                new ObjectParameter("VoucherNo", voucherNo) :
                new ObjectParameter("VoucherNo", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExpensePaymentCreationRequestSet", apCreationIDParameter, voucherNoParameter, statusParameter, userIdParameter);
        }
    
        public virtual int ExpensePaymentCreationSearch(string voucherNo, string agencyName, Nullable<int> branchId, string expenseCode, string active, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var voucherNoParameter = voucherNo != null ?
                new ObjectParameter("VoucherNo", voucherNo) :
                new ObjectParameter("VoucherNo", typeof(string));
    
            var agencyNameParameter = agencyName != null ?
                new ObjectParameter("AgencyName", agencyName) :
                new ObjectParameter("AgencyName", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var expenseCodeParameter = expenseCode != null ?
                new ObjectParameter("ExpenseCode", expenseCode) :
                new ObjectParameter("ExpenseCode", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExpensePaymentCreationSearch", voucherNoParameter, agencyNameParameter, branchIdParameter, expenseCodeParameter, activeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int ExpensePaymentGetList(Nullable<System.DateTime> requestDateFrom, Nullable<System.DateTime> requestDateTo, Nullable<int> branchId, string allocationCode, string active, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var requestDateFromParameter = requestDateFrom.HasValue ?
                new ObjectParameter("RequestDateFrom", requestDateFrom) :
                new ObjectParameter("RequestDateFrom", typeof(System.DateTime));
    
            var requestDateToParameter = requestDateTo.HasValue ?
                new ObjectParameter("RequestDateTo", requestDateTo) :
                new ObjectParameter("RequestDateTo", typeof(System.DateTime));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var allocationCodeParameter = allocationCode != null ?
                new ObjectParameter("AllocationCode", allocationCode) :
                new ObjectParameter("AllocationCode", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExpensePaymentGetList", requestDateFromParameter, requestDateToParameter, branchIdParameter, allocationCodeParameter, activeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int ExpensePaymentPendingWork()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExpensePaymentPendingWork");
        }
    
        public virtual int ExpensePaymentRequestSet(Nullable<decimal> contractID, Nullable<decimal> otherPaymentID, Nullable<decimal> counterID, Nullable<decimal> customerID, string allocationCode, Nullable<int> branchID, string paidStatus, string userID)
        {
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("ContractID", contractID) :
                new ObjectParameter("ContractID", typeof(decimal));
    
            var otherPaymentIDParameter = otherPaymentID.HasValue ?
                new ObjectParameter("OtherPaymentID", otherPaymentID) :
                new ObjectParameter("OtherPaymentID", typeof(decimal));
    
            var counterIDParameter = counterID.HasValue ?
                new ObjectParameter("CounterID", counterID) :
                new ObjectParameter("CounterID", typeof(decimal));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(decimal));
    
            var allocationCodeParameter = allocationCode != null ?
                new ObjectParameter("AllocationCode", allocationCode) :
                new ObjectParameter("AllocationCode", typeof(string));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var paidStatusParameter = paidStatus != null ?
                new ObjectParameter("PaidStatus", paidStatus) :
                new ObjectParameter("PaidStatus", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExpensePaymentRequestSet", contractIDParameter, otherPaymentIDParameter, counterIDParameter, customerIDParameter, allocationCodeParameter, branchIDParameter, paidStatusParameter, userIDParameter);
        }
    
        public virtual ObjectResult<ExpensePaymentSearch_Result> ExpensePaymentSearch(Nullable<int> branchId, string allocationCode, string contractNo, string contractName, string active, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var allocationCodeParameter = allocationCode != null ?
                new ObjectParameter("AllocationCode", allocationCode) :
                new ObjectParameter("AllocationCode", typeof(string));
    
            var contractNoParameter = contractNo != null ?
                new ObjectParameter("ContractNo", contractNo) :
                new ObjectParameter("ContractNo", typeof(string));
    
            var contractNameParameter = contractName != null ?
                new ObjectParameter("ContractName", contractName) :
                new ObjectParameter("ContractName", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExpensePaymentSearch_Result>("ExpensePaymentSearch", branchIdParameter, allocationCodeParameter, contractNoParameter, contractNameParameter, activeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int ExpensePaymentUpdateStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExpensePaymentUpdateStatus");
        }
    
        public virtual int HIGH_RISK_COUNTRY_CLEAR_TEMP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HIGH_RISK_COUNTRY_CLEAR_TEMP");
        }
    
        public virtual ObjectResult<HIGH_RISK_COUNTRY_GET_Result> HIGH_RISK_COUNTRY_GET(string countryName, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var countryNameParameter = countryName != null ?
                new ObjectParameter("countryName", countryName) :
                new ObjectParameter("countryName", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HIGH_RISK_COUNTRY_GET_Result>("HIGH_RISK_COUNTRY_GET", countryNameParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int HIGH_RISK_COUNTRY_GET_TEMP(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HIGH_RISK_COUNTRY_GET_TEMP", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> HIGH_RISK_COUNTRY_GetUpdateOnDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("HIGH_RISK_COUNTRY_GetUpdateOnDate");
        }
    
        public virtual int HIGH_RISK_COUNTRY_INSERT(Nullable<System.DateTime> pidtmUpdateOn, string pivchInputID)
        {
            var pidtmUpdateOnParameter = pidtmUpdateOn.HasValue ?
                new ObjectParameter("pidtmUpdateOn", pidtmUpdateOn) :
                new ObjectParameter("pidtmUpdateOn", typeof(System.DateTime));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HIGH_RISK_COUNTRY_INSERT", pidtmUpdateOnParameter, pivchInputIDParameter);
        }
    
        public virtual int HIGH_RISK_COUNTRY_INSERT_TEMP(Nullable<int> tYPE, Nullable<int> pAGESIZE)
        {
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HIGH_RISK_COUNTRY_INSERT_TEMP", tYPEParameter, pAGESIZEParameter);
        }
    
        public virtual ObjectResult<HRAccountNumberByIdGet_Result> HRAccountNumberByIdGet(Nullable<decimal> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRAccountNumberByIdGet_Result>("HRAccountNumberByIdGet", iDParameter);
        }
    
        public virtual ObjectResult<HRAccountNumberGet_Result> HRAccountNumberGet(string nIK)
        {
            var nIKParameter = nIK != null ?
                new ObjectParameter("NIK", nIK) :
                new ObjectParameter("NIK", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HRAccountNumberGet_Result>("HRAccountNumberGet", nIKParameter);
        }
    
        public virtual int HRAccountNumberLookup(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRAccountNumberLookup", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<Nullable<decimal>> HRAccountNumberSet(string nIK, string bankFinCode, string bankName, string accountNumber, string accountName, Nullable<bool> isActive, string approvalStatus, string createdBy)
        {
            var nIKParameter = nIK != null ?
                new ObjectParameter("NIK", nIK) :
                new ObjectParameter("NIK", typeof(string));
    
            var bankFinCodeParameter = bankFinCode != null ?
                new ObjectParameter("BankFinCode", bankFinCode) :
                new ObjectParameter("BankFinCode", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            var approvalStatusParameter = approvalStatus != null ?
                new ObjectParameter("ApprovalStatus", approvalStatus) :
                new ObjectParameter("ApprovalStatus", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("HRAccountNumberSet", nIKParameter, bankFinCodeParameter, bankNameParameter, accountNumberParameter, accountNameParameter, isActiveParameter, approvalStatusParameter, createdByParameter);
        }
    
        public virtual int INSURANCE_ASWATA(Nullable<int> branchId, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSURANCE_ASWATA", branchIdParameter, dateStartParameter, dateEndParameter);
        }
    
        public virtual int INSURANCE_RAKSA(Nullable<int> branchId, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSURANCE_RAKSA", branchIdParameter, dateStartParameter, dateEndParameter);
        }
    
        public virtual int INSURANCE_TOKIO(Nullable<int> branchId, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSURANCE_TOKIO", branchIdParameter, dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<InsurancePWDetailGet_Result> InsurancePWDetailGet(Nullable<System.DateTime> transactionDate, Nullable<System.DateTime> requestDate, string bankCode, string insuranceNorek, Nullable<decimal> insuranceCompanyID)
        {
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            var requestDateParameter = requestDate.HasValue ?
                new ObjectParameter("RequestDate", requestDate) :
                new ObjectParameter("RequestDate", typeof(System.DateTime));
    
            var bankCodeParameter = bankCode != null ?
                new ObjectParameter("BankCode", bankCode) :
                new ObjectParameter("BankCode", typeof(string));
    
            var insuranceNorekParameter = insuranceNorek != null ?
                new ObjectParameter("InsuranceNorek", insuranceNorek) :
                new ObjectParameter("InsuranceNorek", typeof(string));
    
            var insuranceCompanyIDParameter = insuranceCompanyID.HasValue ?
                new ObjectParameter("InsuranceCompanyID", insuranceCompanyID) :
                new ObjectParameter("InsuranceCompanyID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsurancePWDetailGet_Result>("InsurancePWDetailGet", transactionDateParameter, requestDateParameter, bankCodeParameter, insuranceNorekParameter, insuranceCompanyIDParameter);
        }
    
        public virtual int InsurancePWDetailSet(Nullable<System.DateTime> transactionDate, Nullable<System.DateTime> requestDate, string bankCode, string insuranceNorek, Nullable<decimal> insuranceCompanyID, string pwRequestBy)
        {
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            var requestDateParameter = requestDate.HasValue ?
                new ObjectParameter("RequestDate", requestDate) :
                new ObjectParameter("RequestDate", typeof(System.DateTime));
    
            var bankCodeParameter = bankCode != null ?
                new ObjectParameter("BankCode", bankCode) :
                new ObjectParameter("BankCode", typeof(string));
    
            var insuranceNorekParameter = insuranceNorek != null ?
                new ObjectParameter("InsuranceNorek", insuranceNorek) :
                new ObjectParameter("InsuranceNorek", typeof(string));
    
            var insuranceCompanyIDParameter = insuranceCompanyID.HasValue ?
                new ObjectParameter("InsuranceCompanyID", insuranceCompanyID) :
                new ObjectParameter("InsuranceCompanyID", typeof(decimal));
    
            var pwRequestByParameter = pwRequestBy != null ?
                new ObjectParameter("PwRequestBy", pwRequestBy) :
                new ObjectParameter("PwRequestBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsurancePWDetailSet", transactionDateParameter, requestDateParameter, bankCodeParameter, insuranceNorekParameter, insuranceCompanyIDParameter, pwRequestByParameter);
        }
    
        public virtual ObjectResult<InsurancePWHeaderGet_Result> InsurancePWHeaderGet(string branchCode)
        {
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsurancePWHeaderGet_Result>("InsurancePWHeaderGet", branchCodeParameter);
        }
    
        public virtual int InsurancePWHeaderSet(Nullable<System.DateTime> transactionDate, Nullable<System.DateTime> requestDate, string bankCode, string branchCode, string insuranceNoRek, Nullable<decimal> insuranceCompanyID, string contractNumber, Nullable<decimal> discountAmount, Nullable<decimal> vatAmount, Nullable<decimal> whTaxAmount, string pwRequestBy)
        {
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            var requestDateParameter = requestDate.HasValue ?
                new ObjectParameter("RequestDate", requestDate) :
                new ObjectParameter("RequestDate", typeof(System.DateTime));
    
            var bankCodeParameter = bankCode != null ?
                new ObjectParameter("BankCode", bankCode) :
                new ObjectParameter("BankCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var insuranceNoRekParameter = insuranceNoRek != null ?
                new ObjectParameter("InsuranceNoRek", insuranceNoRek) :
                new ObjectParameter("InsuranceNoRek", typeof(string));
    
            var insuranceCompanyIDParameter = insuranceCompanyID.HasValue ?
                new ObjectParameter("InsuranceCompanyID", insuranceCompanyID) :
                new ObjectParameter("InsuranceCompanyID", typeof(decimal));
    
            var contractNumberParameter = contractNumber != null ?
                new ObjectParameter("ContractNumber", contractNumber) :
                new ObjectParameter("ContractNumber", typeof(string));
    
            var discountAmountParameter = discountAmount.HasValue ?
                new ObjectParameter("DiscountAmount", discountAmount) :
                new ObjectParameter("DiscountAmount", typeof(decimal));
    
            var vatAmountParameter = vatAmount.HasValue ?
                new ObjectParameter("VatAmount", vatAmount) :
                new ObjectParameter("VatAmount", typeof(decimal));
    
            var whTaxAmountParameter = whTaxAmount.HasValue ?
                new ObjectParameter("WhTaxAmount", whTaxAmount) :
                new ObjectParameter("WhTaxAmount", typeof(decimal));
    
            var pwRequestByParameter = pwRequestBy != null ?
                new ObjectParameter("PwRequestBy", pwRequestBy) :
                new ObjectParameter("PwRequestBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsurancePWHeaderSet", transactionDateParameter, requestDateParameter, bankCodeParameter, branchCodeParameter, insuranceNoRekParameter, insuranceCompanyIDParameter, contractNumberParameter, discountAmountParameter, vatAmountParameter, whTaxAmountParameter, pwRequestByParameter);
        }
    
        public virtual int InsurancePWReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsurancePWReport");
        }
    
        public virtual ObjectResult<InsurancePWTaxInvoiceTransGet_Result> InsurancePWTaxInvoiceTransGet(string invoiceNumber, Nullable<System.DateTime> period)
        {
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(string));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsurancePWTaxInvoiceTransGet_Result>("InsurancePWTaxInvoiceTransGet", invoiceNumberParameter, periodParameter);
        }
    
        public virtual int InsurancePWTaxJournal(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsurancePWTaxJournal", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<JournalTransactionGet_Result> JournalTransactionGet(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JournalTransactionGet_Result>("JournalTransactionGet", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<MailHistoryGet_Result> MailHistoryGet(string recipient, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var recipientParameter = recipient != null ?
                new ObjectParameter("recipient", recipient) :
                new ObjectParameter("recipient", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MailHistoryGet_Result>("MailHistoryGet", recipientParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual int MsChangePassword(string userId, string pass)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsChangePassword", userIdParameter, passParameter);
        }
    
        public virtual ObjectResult<MsCompanyBankAccountGet_Result> MsCompanyBankAccountGet(string bankCode)
        {
            var bankCodeParameter = bankCode != null ?
                new ObjectParameter("BankCode", bankCode) :
                new ObjectParameter("BankCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MsCompanyBankAccountGet_Result>("MsCompanyBankAccountGet", bankCodeParameter);
        }
    
        public virtual ObjectResult<string> MsCreatePriviledge(string privCode, string privName)
        {
            var privCodeParameter = privCode != null ?
                new ObjectParameter("PrivCode", privCode) :
                new ObjectParameter("PrivCode", typeof(string));
    
            var privNameParameter = privName != null ?
                new ObjectParameter("PrivName", privName) :
                new ObjectParameter("PrivName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MsCreatePriviledge", privCodeParameter, privNameParameter);
        }
    
        public virtual ObjectResult<string> MsCreateUser(string userId, string pass, string userName, Nullable<int> branchId, string email, string changePass, string sendMail)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var changePassParameter = changePass != null ?
                new ObjectParameter("ChangePass", changePass) :
                new ObjectParameter("ChangePass", typeof(string));
    
            var sendMailParameter = sendMail != null ?
                new ObjectParameter("SendMail", sendMail) :
                new ObjectParameter("SendMail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MsCreateUser", userIdParameter, passParameter, userNameParameter, branchIdParameter, emailParameter, changePassParameter, sendMailParameter);
        }
    
        public virtual ObjectResult<string> MsFakturPajakGet(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MsFakturPajakGet", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<string> MsGetBankAccount(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MsGetBankAccount", typeParameter);
        }
    
        public virtual int MsGetBranch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsGetBranch");
        }
    
        public virtual ObjectResult<string> MsGetCompanyCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MsGetCompanyCode");
        }
    
        public virtual int MsGetInsuranceNPWP(string active, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsGetInsuranceNPWP", activeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<GetMenuResult> MsGetMenuName(Nullable<int> menuId)
        {
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMenuResult>("MsGetMenuName", menuIdParameter);
        }
    
        public virtual ObjectResult<string> MsGetMultiBranch(string branch)
        {
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MsGetMultiBranch", branchParameter);
        }
    
        public virtual ObjectResult<MsGetPriviledge_Result> MsGetPriviledge()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MsGetPriviledge_Result>("MsGetPriviledge");
        }
    
        public virtual int MsGetUserid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsGetUserid");
        }
    
        public virtual ObjectResult<string> MsGetWorkFlowModule(string active)
        {
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MsGetWorkFlowModule", activeParameter);
        }
    
        public virtual int MsJournalTransInsert(string workFlowType, string accountNumber, Nullable<decimal> debet, Nullable<decimal> credit, string tableValue, string description, string createdBy)
        {
            var workFlowTypeParameter = workFlowType != null ?
                new ObjectParameter("WorkFlowType", workFlowType) :
                new ObjectParameter("WorkFlowType", typeof(string));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var debetParameter = debet.HasValue ?
                new ObjectParameter("Debet", debet) :
                new ObjectParameter("Debet", typeof(decimal));
    
            var creditParameter = credit.HasValue ?
                new ObjectParameter("Credit", credit) :
                new ObjectParameter("Credit", typeof(decimal));
    
            var tableValueParameter = tableValue != null ?
                new ObjectParameter("TableValue", tableValue) :
                new ObjectParameter("TableValue", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsJournalTransInsert", workFlowTypeParameter, accountNumberParameter, debetParameter, creditParameter, tableValueParameter, descriptionParameter, createdByParameter);
        }
    
        public virtual int MsMenuGetAll(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsMenuGetAll", userIdParameter);
        }
    
        public virtual int MsMenuPrivGetAll(string privCode)
        {
            var privCodeParameter = privCode != null ?
                new ObjectParameter("PrivCode", privCode) :
                new ObjectParameter("PrivCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsMenuPrivGetAll", privCodeParameter);
        }
    
        public virtual int MsMenuViewer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsMenuViewer");
        }
    
        public virtual int MsPriveledgeDetail(string privCode, Nullable<int> menuId, Nullable<bool> insertDt, Nullable<bool> updateDt, Nullable<bool> deleteDt, Nullable<bool> viewDt)
        {
            var privCodeParameter = privCode != null ?
                new ObjectParameter("PrivCode", privCode) :
                new ObjectParameter("PrivCode", typeof(string));
    
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            var insertDtParameter = insertDt.HasValue ?
                new ObjectParameter("InsertDt", insertDt) :
                new ObjectParameter("InsertDt", typeof(bool));
    
            var updateDtParameter = updateDt.HasValue ?
                new ObjectParameter("UpdateDt", updateDt) :
                new ObjectParameter("UpdateDt", typeof(bool));
    
            var deleteDtParameter = deleteDt.HasValue ?
                new ObjectParameter("DeleteDt", deleteDt) :
                new ObjectParameter("DeleteDt", typeof(bool));
    
            var viewDtParameter = viewDt.HasValue ?
                new ObjectParameter("ViewDt", viewDt) :
                new ObjectParameter("ViewDt", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsPriveledgeDetail", privCodeParameter, menuIdParameter, insertDtParameter, updateDtParameter, deleteDtParameter, viewDtParameter);
        }
    
        public virtual ObjectResult<string> MsResetPassword(string userId, string resPass)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var resPassParameter = resPass != null ?
                new ObjectParameter("resPass", resPass) :
                new ObjectParameter("resPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MsResetPassword", userIdParameter, resPassParameter);
        }
    
        public virtual ObjectResult<MsSearchPriviledge_Result> MsSearchPriviledge()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MsSearchPriviledge_Result>("MsSearchPriviledge");
        }
    
        public virtual int MsSearchUsers(string userId, string userName, string active)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsSearchUsers", userIdParameter, userNameParameter, activeParameter);
        }
    
        public virtual ObjectResult<string> MsUpdatePriviledge(string privCode, string privName, Nullable<int> active)
        {
            var privCodeParameter = privCode != null ?
                new ObjectParameter("PrivCode", privCode) :
                new ObjectParameter("PrivCode", typeof(string));
    
            var privNameParameter = privName != null ?
                new ObjectParameter("PrivName", privName) :
                new ObjectParameter("PrivName", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MsUpdatePriviledge", privCodeParameter, privNameParameter, activeParameter);
        }
    
        public virtual int MsUpdateUser(string userId, string userName, Nullable<int> branchId, Nullable<int> active, string email, string changePass, string sendMail)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var changePassParameter = changePass != null ?
                new ObjectParameter("ChangePass", changePass) :
                new ObjectParameter("ChangePass", typeof(string));
    
            var sendMailParameter = sendMail != null ?
                new ObjectParameter("SendMail", sendMail) :
                new ObjectParameter("SendMail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsUpdateUser", userIdParameter, userNameParameter, branchIdParameter, activeParameter, emailParameter, changePassParameter, sendMailParameter);
        }
    
        public virtual int MsUserLogon(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsUserLogon", userIdParameter);
        }
    
        public virtual int MsUserPriveledge(string userId, Nullable<int> menuId, Nullable<bool> insertDt, Nullable<bool> updateDt, Nullable<bool> deleteDt, Nullable<bool> viewDt, string privCode)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            var insertDtParameter = insertDt.HasValue ?
                new ObjectParameter("InsertDt", insertDt) :
                new ObjectParameter("InsertDt", typeof(bool));
    
            var updateDtParameter = updateDt.HasValue ?
                new ObjectParameter("UpdateDt", updateDt) :
                new ObjectParameter("UpdateDt", typeof(bool));
    
            var deleteDtParameter = deleteDt.HasValue ?
                new ObjectParameter("DeleteDt", deleteDt) :
                new ObjectParameter("DeleteDt", typeof(bool));
    
            var viewDtParameter = viewDt.HasValue ?
                new ObjectParameter("ViewDt", viewDt) :
                new ObjectParameter("ViewDt", typeof(bool));
    
            var privCodeParameter = privCode != null ?
                new ObjectParameter("PrivCode", privCode) :
                new ObjectParameter("PrivCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsUserPriveledge", userIdParameter, menuIdParameter, insertDtParameter, updateDtParameter, deleteDtParameter, viewDtParameter, privCodeParameter);
        }
    
        public virtual int MsWorkFlowApproval(Nullable<int> workFlowID, string workFlowApprovalStatus, string workFlowUpdateBy, string workFlowRemark)
        {
            var workFlowIDParameter = workFlowID.HasValue ?
                new ObjectParameter("WorkFlowID", workFlowID) :
                new ObjectParameter("WorkFlowID", typeof(int));
    
            var workFlowApprovalStatusParameter = workFlowApprovalStatus != null ?
                new ObjectParameter("WorkFlowApprovalStatus", workFlowApprovalStatus) :
                new ObjectParameter("WorkFlowApprovalStatus", typeof(string));
    
            var workFlowUpdateByParameter = workFlowUpdateBy != null ?
                new ObjectParameter("WorkFlowUpdateBy", workFlowUpdateBy) :
                new ObjectParameter("WorkFlowUpdateBy", typeof(string));
    
            var workFlowRemarkParameter = workFlowRemark != null ?
                new ObjectParameter("WorkFlowRemark", workFlowRemark) :
                new ObjectParameter("WorkFlowRemark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsWorkFlowApproval", workFlowIDParameter, workFlowApprovalStatusParameter, workFlowUpdateByParameter, workFlowRemarkParameter);
        }
    
        public virtual ObjectResult<MsWorkFlowChecker_Result> MsWorkFlowChecker(string workFlowCode, string workFlowTableKey, string workFlowTablevalue)
        {
            var workFlowCodeParameter = workFlowCode != null ?
                new ObjectParameter("WorkFlowCode", workFlowCode) :
                new ObjectParameter("WorkFlowCode", typeof(string));
    
            var workFlowTableKeyParameter = workFlowTableKey != null ?
                new ObjectParameter("WorkFlowTableKey", workFlowTableKey) :
                new ObjectParameter("WorkFlowTableKey", typeof(string));
    
            var workFlowTablevalueParameter = workFlowTablevalue != null ?
                new ObjectParameter("WorkFlowTablevalue", workFlowTablevalue) :
                new ObjectParameter("WorkFlowTablevalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MsWorkFlowChecker_Result>("MsWorkFlowChecker", workFlowCodeParameter, workFlowTableKeyParameter, workFlowTablevalueParameter);
        }
    
        public virtual ObjectResult<MsWorkFlowGetViewPage_Result> MsWorkFlowGetViewPage(Nullable<decimal> workFlowID, string workFlowCode)
        {
            var workFlowIDParameter = workFlowID.HasValue ?
                new ObjectParameter("WorkFlowID", workFlowID) :
                new ObjectParameter("WorkFlowID", typeof(decimal));
    
            var workFlowCodeParameter = workFlowCode != null ?
                new ObjectParameter("workFlowCode", workFlowCode) :
                new ObjectParameter("workFlowCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MsWorkFlowGetViewPage_Result>("MsWorkFlowGetViewPage", workFlowIDParameter, workFlowCodeParameter);
        }
    
        public virtual ObjectResult<MsWorkFlowHistoryGet_Result> MsWorkFlowHistoryGet(string nomor)
        {
            var nomorParameter = nomor != null ?
                new ObjectParameter("Nomor", nomor) :
                new ObjectParameter("Nomor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MsWorkFlowHistoryGet_Result>("MsWorkFlowHistoryGet", nomorParameter);
        }
    
        public virtual int MsWorkFlowInsert(string workFlowCode, Nullable<int> workFlowBranchCode, string workFlowTableKey, string workFlowTableValue, string workFlowApprovalStatus, string workFlowDescription, string workFlowCreatedBy, Nullable<int> workFlowCreatedBranch, string workFlowUpdateBy, Nullable<System.DateTime> workFlowUpdateDate)
        {
            var workFlowCodeParameter = workFlowCode != null ?
                new ObjectParameter("WorkFlowCode", workFlowCode) :
                new ObjectParameter("WorkFlowCode", typeof(string));
    
            var workFlowBranchCodeParameter = workFlowBranchCode.HasValue ?
                new ObjectParameter("WorkFlowBranchCode", workFlowBranchCode) :
                new ObjectParameter("WorkFlowBranchCode", typeof(int));
    
            var workFlowTableKeyParameter = workFlowTableKey != null ?
                new ObjectParameter("WorkFlowTableKey", workFlowTableKey) :
                new ObjectParameter("WorkFlowTableKey", typeof(string));
    
            var workFlowTableValueParameter = workFlowTableValue != null ?
                new ObjectParameter("WorkFlowTableValue", workFlowTableValue) :
                new ObjectParameter("WorkFlowTableValue", typeof(string));
    
            var workFlowApprovalStatusParameter = workFlowApprovalStatus != null ?
                new ObjectParameter("WorkFlowApprovalStatus", workFlowApprovalStatus) :
                new ObjectParameter("WorkFlowApprovalStatus", typeof(string));
    
            var workFlowDescriptionParameter = workFlowDescription != null ?
                new ObjectParameter("WorkFlowDescription", workFlowDescription) :
                new ObjectParameter("WorkFlowDescription", typeof(string));
    
            var workFlowCreatedByParameter = workFlowCreatedBy != null ?
                new ObjectParameter("WorkFlowCreatedBy", workFlowCreatedBy) :
                new ObjectParameter("WorkFlowCreatedBy", typeof(string));
    
            var workFlowCreatedBranchParameter = workFlowCreatedBranch.HasValue ?
                new ObjectParameter("WorkFlowCreatedBranch", workFlowCreatedBranch) :
                new ObjectParameter("WorkFlowCreatedBranch", typeof(int));
    
            var workFlowUpdateByParameter = workFlowUpdateBy != null ?
                new ObjectParameter("WorkFlowUpdateBy", workFlowUpdateBy) :
                new ObjectParameter("WorkFlowUpdateBy", typeof(string));
    
            var workFlowUpdateDateParameter = workFlowUpdateDate.HasValue ?
                new ObjectParameter("WorkFlowUpdateDate", workFlowUpdateDate) :
                new ObjectParameter("WorkFlowUpdateDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsWorkFlowInsert", workFlowCodeParameter, workFlowBranchCodeParameter, workFlowTableKeyParameter, workFlowTableValueParameter, workFlowApprovalStatusParameter, workFlowDescriptionParameter, workFlowCreatedByParameter, workFlowCreatedBranchParameter, workFlowUpdateByParameter, workFlowUpdateDateParameter);
        }
    
        public virtual ObjectResult<MsWorkFlowSearch_Result> MsWorkFlowSearch(Nullable<int> workFlowBranchCode, string workFlowPriveledgeCode, string workFlowUserID, string workFlowUserType)
        {
            var workFlowBranchCodeParameter = workFlowBranchCode.HasValue ?
                new ObjectParameter("WorkFlowBranchCode", workFlowBranchCode) :
                new ObjectParameter("WorkFlowBranchCode", typeof(int));
    
            var workFlowPriveledgeCodeParameter = workFlowPriveledgeCode != null ?
                new ObjectParameter("WorkFlowPriveledgeCode", workFlowPriveledgeCode) :
                new ObjectParameter("WorkFlowPriveledgeCode", typeof(string));
    
            var workFlowUserIDParameter = workFlowUserID != null ?
                new ObjectParameter("WorkFlowUserID", workFlowUserID) :
                new ObjectParameter("WorkFlowUserID", typeof(string));
    
            var workFlowUserTypeParameter = workFlowUserType != null ?
                new ObjectParameter("WorkFlowUserType", workFlowUserType) :
                new ObjectParameter("WorkFlowUserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MsWorkFlowSearch_Result>("MsWorkFlowSearch", workFlowBranchCodeParameter, workFlowPriveledgeCodeParameter, workFlowUserIDParameter, workFlowUserTypeParameter);
        }
    
        public virtual int MsWorkFlowSearchPath(string nomor, string userID, string type)
        {
            var nomorParameter = nomor != null ?
                new ObjectParameter("Nomor", nomor) :
                new ObjectParameter("Nomor", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsWorkFlowSearchPath", nomorParameter, userIDParameter, typeParameter);
        }
    
        public virtual ObjectResult<MsWorkFlowShowPath_Result> MsWorkFlowShowPath(string nomor)
        {
            var nomorParameter = nomor != null ?
                new ObjectParameter("Nomor", nomor) :
                new ObjectParameter("Nomor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MsWorkFlowShowPath_Result>("MsWorkFlowShowPath", nomorParameter);
        }
    
        public virtual ObjectResult<MsWorkFlowSourceGetList_Result> MsWorkFlowSourceGetList(Nullable<int> branchId, string departementCode, string workFlowType, string workFlowCode)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var departementCodeParameter = departementCode != null ?
                new ObjectParameter("DepartementCode", departementCode) :
                new ObjectParameter("DepartementCode", typeof(string));
    
            var workFlowTypeParameter = workFlowType != null ?
                new ObjectParameter("WorkFlowType", workFlowType) :
                new ObjectParameter("WorkFlowType", typeof(string));
    
            var workFlowCodeParameter = workFlowCode != null ?
                new ObjectParameter("WorkFlowCode", workFlowCode) :
                new ObjectParameter("WorkFlowCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MsWorkFlowSourceGetList_Result>("MsWorkFlowSourceGetList", branchIdParameter, departementCodeParameter, workFlowTypeParameter, workFlowCodeParameter);
        }
    
        public virtual ObjectResult<string> MsWorkFlowSourceGetWFCode(Nullable<int> branchId, string departementCode, string workFlowType, string specificValue)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var departementCodeParameter = departementCode != null ?
                new ObjectParameter("DepartementCode", departementCode) :
                new ObjectParameter("DepartementCode", typeof(string));
    
            var workFlowTypeParameter = workFlowType != null ?
                new ObjectParameter("WorkFlowType", workFlowType) :
                new ObjectParameter("WorkFlowType", typeof(string));
    
            var specificValueParameter = specificValue != null ?
                new ObjectParameter("SpecificValue", specificValue) :
                new ObjectParameter("SpecificValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MsWorkFlowSourceGetWFCode", branchIdParameter, departementCodeParameter, workFlowTypeParameter, specificValueParameter);
        }
    
        public virtual int MsWorkFlowUpdateOtherTable(string workFlowTable, string workFlowTablevalue, string workFlowType)
        {
            var workFlowTableParameter = workFlowTable != null ?
                new ObjectParameter("WorkFlowTable", workFlowTable) :
                new ObjectParameter("WorkFlowTable", typeof(string));
    
            var workFlowTablevalueParameter = workFlowTablevalue != null ?
                new ObjectParameter("WorkFlowTablevalue", workFlowTablevalue) :
                new ObjectParameter("WorkFlowTablevalue", typeof(string));
    
            var workFlowTypeParameter = workFlowType != null ?
                new ObjectParameter("WorkFlowType", workFlowType) :
                new ObjectParameter("WorkFlowType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MsWorkFlowUpdateOtherTable", workFlowTableParameter, workFlowTablevalueParameter, workFlowTypeParameter);
        }
    
        public virtual int NominativeAttendeeSet(Nullable<int> nominativeNo, Nullable<int> tahun, Nullable<int> nominativeIdx, string attendeeName, string attendeeTitle, string active, string userId)
        {
            var nominativeNoParameter = nominativeNo.HasValue ?
                new ObjectParameter("NominativeNo", nominativeNo) :
                new ObjectParameter("NominativeNo", typeof(int));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("Tahun", tahun) :
                new ObjectParameter("Tahun", typeof(int));
    
            var nominativeIdxParameter = nominativeIdx.HasValue ?
                new ObjectParameter("NominativeIdx", nominativeIdx) :
                new ObjectParameter("NominativeIdx", typeof(int));
    
            var attendeeNameParameter = attendeeName != null ?
                new ObjectParameter("AttendeeName", attendeeName) :
                new ObjectParameter("AttendeeName", typeof(string));
    
            var attendeeTitleParameter = attendeeTitle != null ?
                new ObjectParameter("AttendeeTitle", attendeeTitle) :
                new ObjectParameter("AttendeeTitle", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NominativeAttendeeSet", nominativeNoParameter, tahunParameter, nominativeIdxParameter, attendeeNameParameter, attendeeTitleParameter, activeParameter, userIdParameter);
        }
    
        public virtual ObjectResult<NominativeCounterPartyAttGetList_Result> NominativeCounterPartyAttGetList(Nullable<int> nominativeNo, Nullable<int> tahun, string active)
        {
            var nominativeNoParameter = nominativeNo.HasValue ?
                new ObjectParameter("NominativeNo", nominativeNo) :
                new ObjectParameter("NominativeNo", typeof(int));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("Tahun", tahun) :
                new ObjectParameter("Tahun", typeof(int));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NominativeCounterPartyAttGetList_Result>("NominativeCounterPartyAttGetList", nominativeNoParameter, tahunParameter, activeParameter);
        }
    
        public virtual ObjectResult<NominativeCounterPartyReport_Result> NominativeCounterPartyReport(Nullable<int> nominative_no)
        {
            var nominative_noParameter = nominative_no.HasValue ?
                new ObjectParameter("Nominative_no", nominative_no) :
                new ObjectParameter("Nominative_no", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NominativeCounterPartyReport_Result>("NominativeCounterPartyReport", nominative_noParameter);
        }
    
        public virtual int NominativeGetEditHeader(string userId, string nominativeNo)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var nominativeNoParameter = nominativeNo != null ?
                new ObjectParameter("NominativeNo", nominativeNo) :
                new ObjectParameter("NominativeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NominativeGetEditHeader", userIdParameter, nominativeNoParameter);
        }
    
        public virtual ObjectResult<NominativeGetHeader_Result> NominativeGetHeader(string userId, string nominativeNo, string tahun, Nullable<bool> isAllBranch)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var nominativeNoParameter = nominativeNo != null ?
                new ObjectParameter("NominativeNo", nominativeNo) :
                new ObjectParameter("NominativeNo", typeof(string));
    
            var tahunParameter = tahun != null ?
                new ObjectParameter("Tahun", tahun) :
                new ObjectParameter("Tahun", typeof(string));
    
            var isAllBranchParameter = isAllBranch.HasValue ?
                new ObjectParameter("IsAllBranch", isAllBranch) :
                new ObjectParameter("IsAllBranch", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NominativeGetHeader_Result>("NominativeGetHeader", userIdParameter, nominativeNoParameter, tahunParameter, isAllBranchParameter);
        }
    
        public virtual int NominativeHeaderGetList(string nominativeNo, string userId, string status, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var nominativeNoParameter = nominativeNo != null ?
                new ObjectParameter("NominativeNo", nominativeNo) :
                new ObjectParameter("NominativeNo", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NominativeHeaderGetList", nominativeNoParameter, userIdParameter, statusParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int NominativeHeaderReport(Nullable<int> nominative_no)
        {
            var nominative_noParameter = nominative_no.HasValue ?
                new ObjectParameter("Nominative_no", nominative_no) :
                new ObjectParameter("Nominative_no", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NominativeHeaderReport", nominative_noParameter);
        }
    
        public virtual ObjectResult<NominativeOurAttendeeReport_Result> NominativeOurAttendeeReport(Nullable<int> nominative_no)
        {
            var nominative_noParameter = nominative_no.HasValue ?
                new ObjectParameter("Nominative_no", nominative_no) :
                new ObjectParameter("Nominative_no", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NominativeOurAttendeeReport_Result>("NominativeOurAttendeeReport", nominative_noParameter);
        }
    
        public virtual int NominativeOurAttendeeSet(Nullable<int> nominativeNo, Nullable<int> tahun, Nullable<int> nominativeIdx, string ourAttendeeName, string active, string userId)
        {
            var nominativeNoParameter = nominativeNo.HasValue ?
                new ObjectParameter("NominativeNo", nominativeNo) :
                new ObjectParameter("NominativeNo", typeof(int));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("Tahun", tahun) :
                new ObjectParameter("Tahun", typeof(int));
    
            var nominativeIdxParameter = nominativeIdx.HasValue ?
                new ObjectParameter("NominativeIdx", nominativeIdx) :
                new ObjectParameter("NominativeIdx", typeof(int));
    
            var ourAttendeeNameParameter = ourAttendeeName != null ?
                new ObjectParameter("OurAttendeeName", ourAttendeeName) :
                new ObjectParameter("OurAttendeeName", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NominativeOurAttendeeSet", nominativeNoParameter, tahunParameter, nominativeIdxParameter, ourAttendeeNameParameter, activeParameter, userIdParameter);
        }
    
        public virtual int NominativePaymentGetList(string nominativeNo, string userId, string status, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var nominativeNoParameter = nominativeNo != null ?
                new ObjectParameter("NominativeNo", nominativeNo) :
                new ObjectParameter("NominativeNo", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NominativePaymentGetList", nominativeNoParameter, userIdParameter, statusParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int NominativePaymentSet(Nullable<int> nominativeNo, string status, string userId)
        {
            var nominativeNoParameter = nominativeNo.HasValue ?
                new ObjectParameter("NominativeNo", nominativeNo) :
                new ObjectParameter("NominativeNo", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NominativePaymentSet", nominativeNoParameter, statusParameter, userIdParameter);
        }
    
        public virtual int NominativeReport(string nominative_no, Nullable<int> tahun)
        {
            var nominative_noParameter = nominative_no != null ?
                new ObjectParameter("Nominative_no", nominative_no) :
                new ObjectParameter("Nominative_no", typeof(string));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("Tahun", tahun) :
                new ObjectParameter("Tahun", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NominativeReport", nominative_noParameter, tahunParameter);
        }
    
        public virtual int NominativeReportAccounting(string branchId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var branchIdParameter = branchId != null ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NominativeReportAccounting", branchIdParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual int NominativeReportAccumulated(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NominativeReportAccumulated", dateFromParameter, dateToParameter);
        }
    
        public virtual int NominativeSet(Nullable<int> nominativeNo, Nullable<int> branchId, Nullable<int> sbpId, string address, string status, string userId, Nullable<int> tahun)
        {
            var nominativeNoParameter = nominativeNo.HasValue ?
                new ObjectParameter("NominativeNo", nominativeNo) :
                new ObjectParameter("NominativeNo", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var sbpIdParameter = sbpId.HasValue ?
                new ObjectParameter("SbpId", sbpId) :
                new ObjectParameter("SbpId", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("Tahun", tahun) :
                new ObjectParameter("Tahun", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NominativeSet", nominativeNoParameter, branchIdParameter, sbpIdParameter, addressParameter, statusParameter, userIdParameter, tahunParameter);
        }
    
        public virtual ObjectResult<NomintiveOurAttGetList_Result> NomintiveOurAttGetList(Nullable<int> nominativeNo, Nullable<int> tahun, string active)
        {
            var nominativeNoParameter = nominativeNo.HasValue ?
                new ObjectParameter("NominativeNo", nominativeNo) :
                new ObjectParameter("NominativeNo", typeof(int));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("Tahun", tahun) :
                new ObjectParameter("Tahun", typeof(int));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NomintiveOurAttGetList_Result>("NomintiveOurAttGetList", nominativeNoParameter, tahunParameter, activeParameter);
        }
    
        public virtual ObjectResult<OpexPaymentConvertDetailGet_Result> OpexPaymentConvertDetailGet(Nullable<decimal> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentConvertDetailGet_Result>("OpexPaymentConvertDetailGet", iDParameter);
        }
    
        public virtual ObjectResult<OpexPaymentConvertGet_Result> OpexPaymentConvertGet(string bankCode, Nullable<System.DateTime> effectiveDate)
        {
            var bankCodeParameter = bankCode != null ?
                new ObjectParameter("BankCode", bankCode) :
                new ObjectParameter("BankCode", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentConvertGet_Result>("OpexPaymentConvertGet", bankCodeParameter, effectiveDateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> OpexPaymentConvertGetID(Nullable<decimal> historyID)
        {
            var historyIDParameter = historyID.HasValue ?
                new ObjectParameter("HistoryID", historyID) :
                new ObjectParameter("HistoryID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("OpexPaymentConvertGetID", historyIDParameter);
        }
    
        public virtual ObjectResult<OpexPaymentConvertHeaderGet_Result> OpexPaymentConvertHeaderGet(Nullable<decimal> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentConvertHeaderGet_Result>("OpexPaymentConvertHeaderGet", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> OpexPaymentConvertHistorySet(Nullable<int> type, Nullable<decimal> historyID, Nullable<decimal> iD, string opexPaymentNo, string status, Nullable<bool> active, string historyType, string createdBy)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var historyIDParameter = historyID.HasValue ?
                new ObjectParameter("HistoryID", historyID) :
                new ObjectParameter("HistoryID", typeof(decimal));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(decimal));
    
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var historyTypeParameter = historyType != null ?
                new ObjectParameter("HistoryType", historyType) :
                new ObjectParameter("HistoryType", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("OpexPaymentConvertHistorySet", typeParameter, historyIDParameter, iDParameter, opexPaymentNoParameter, statusParameter, activeParameter, historyTypeParameter, createdByParameter);
        }
    
        public virtual int OpexPaymentConvertReversalSet(Nullable<decimal> id, string opexPaymentNo, string paymentStatus, string createdBy)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(decimal));
    
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            var paymentStatusParameter = paymentStatus != null ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpexPaymentConvertReversalSet", idParameter, opexPaymentNoParameter, paymentStatusParameter, createdByParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> OpexPaymentConvertSet(Nullable<int> type, Nullable<decimal> iD, string bankType, Nullable<System.DateTime> effectiveDate, string accountNo, string currency, string companyCode, string transactionRemark, string transactionRemark2, string transactionType, string sectorSelection, string bankCharges, string createdBy)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(decimal));
    
            var bankTypeParameter = bankType != null ?
                new ObjectParameter("BankType", bankType) :
                new ObjectParameter("BankType", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var transactionRemarkParameter = transactionRemark != null ?
                new ObjectParameter("TransactionRemark", transactionRemark) :
                new ObjectParameter("TransactionRemark", typeof(string));
    
            var transactionRemark2Parameter = transactionRemark2 != null ?
                new ObjectParameter("TransactionRemark2", transactionRemark2) :
                new ObjectParameter("TransactionRemark2", typeof(string));
    
            var transactionTypeParameter = transactionType != null ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(string));
    
            var sectorSelectionParameter = sectorSelection != null ?
                new ObjectParameter("SectorSelection", sectorSelection) :
                new ObjectParameter("SectorSelection", typeof(string));
    
            var bankChargesParameter = bankCharges != null ?
                new ObjectParameter("BankCharges", bankCharges) :
                new ObjectParameter("BankCharges", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("OpexPaymentConvertSet", typeParameter, iDParameter, bankTypeParameter, effectiveDateParameter, accountNoParameter, currencyParameter, companyCodeParameter, transactionRemarkParameter, transactionRemark2Parameter, transactionTypeParameter, sectorSelectionParameter, bankChargesParameter, createdByParameter);
        }
    
        public virtual int OpexPaymentConvertStatusSet(Nullable<decimal> iD, string convertStatus, string createdBy)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(decimal));
    
            var convertStatusParameter = convertStatus != null ?
                new ObjectParameter("ConvertStatus", convertStatus) :
                new ObjectParameter("ConvertStatus", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpexPaymentConvertStatusSet", iDParameter, convertStatusParameter, createdByParameter);
        }
    
        public virtual ObjectResult<string> OpexPaymentConvertToBCA(Nullable<decimal> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("OpexPaymentConvertToBCA", iDParameter);
        }
    
        public virtual ObjectResult<OpexPaymentConvertToBTMU_Result> OpexPaymentConvertToBTMU(Nullable<decimal> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentConvertToBTMU_Result>("OpexPaymentConvertToBTMU", iDParameter);
        }
    
        public virtual ObjectResult<OpexPaymentConvertViewGet_Result> OpexPaymentConvertViewGet(Nullable<decimal> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentConvertViewGet_Result>("OpexPaymentConvertViewGet", iDParameter);
        }
    
        public virtual int OpexPaymentCOPGetList(string opexPaymentNo, Nullable<int> createdBranch, string createdDept, string active, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            var createdBranchParameter = createdBranch.HasValue ?
                new ObjectParameter("CreatedBranch", createdBranch) :
                new ObjectParameter("CreatedBranch", typeof(int));
    
            var createdDeptParameter = createdDept != null ?
                new ObjectParameter("CreatedDept", createdDept) :
                new ObjectParameter("CreatedDept", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpexPaymentCOPGetList", opexPaymentNoParameter, createdBranchParameter, createdDeptParameter, activeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<OpexPaymentCOPPPhGet_Result> OpexPaymentCOPPPhGet(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentCOPPPhGet_Result>("OpexPaymentCOPPPhGet", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<OpexPaymentCOPPPNGet_Result> OpexPaymentCOPPPNGet(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentCOPPPNGet_Result>("OpexPaymentCOPPPNGet", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<OpexPaymentDetailCOPGetList_Result> OpexPaymentDetailCOPGetList(string opexPaymentNo, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentDetailCOPGetList_Result>("OpexPaymentDetailCOPGetList", opexPaymentNoParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<OpexPaymentFakturCOPGetList_Result> OpexPaymentFakturCOPGetList(string fakturNo, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var fakturNoParameter = fakturNo != null ?
                new ObjectParameter("FakturNo", fakturNo) :
                new ObjectParameter("FakturNo", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentFakturCOPGetList_Result>("OpexPaymentFakturCOPGetList", fakturNoParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<OpexPaymentFakturGet_Result> OpexPaymentFakturGet(Nullable<int> fakturStatus, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var fakturStatusParameter = fakturStatus.HasValue ?
                new ObjectParameter("FakturStatus", fakturStatus) :
                new ObjectParameter("FakturStatus", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentFakturGet_Result>("OpexPaymentFakturGet", fakturStatusParameter, startDateParameter, endDateParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int OpexPaymentFakturSet(Nullable<int> tYPE, string fakturNo, Nullable<System.DateTime> fakturDate, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            var fakturNoParameter = fakturNo != null ?
                new ObjectParameter("FakturNo", fakturNo) :
                new ObjectParameter("FakturNo", typeof(string));
    
            var fakturDateParameter = fakturDate.HasValue ?
                new ObjectParameter("FakturDate", fakturDate) :
                new ObjectParameter("FakturDate", typeof(System.DateTime));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpexPaymentFakturSet", tYPEParameter, fakturNoParameter, fakturDateParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<OpexPaymentFakturWHCOPGetList_Result> OpexPaymentFakturWHCOPGetList(string fakturNo, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var fakturNoParameter = fakturNo != null ?
                new ObjectParameter("FakturNo", fakturNo) :
                new ObjectParameter("FakturNo", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentFakturWHCOPGetList_Result>("OpexPaymentFakturWHCOPGetList", fakturNoParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<OpexPaymentFakturWHGet_Result> OpexPaymentFakturWHGet(Nullable<int> fakturStatus, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var fakturStatusParameter = fakturStatus.HasValue ?
                new ObjectParameter("FakturStatus", fakturStatus) :
                new ObjectParameter("FakturStatus", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentFakturWHGet_Result>("OpexPaymentFakturWHGet", fakturStatusParameter, startDateParameter, endDateParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int OpexPaymentFakturWHSet(Nullable<int> tYPE, string fakturNo, Nullable<System.DateTime> fakturDate, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            var fakturNoParameter = fakturNo != null ?
                new ObjectParameter("FakturNo", fakturNo) :
                new ObjectParameter("FakturNo", typeof(string));
    
            var fakturDateParameter = fakturDate.HasValue ?
                new ObjectParameter("FakturDate", fakturDate) :
                new ObjectParameter("FakturDate", typeof(System.DateTime));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpexPaymentFakturWHSet", tYPEParameter, fakturNoParameter, fakturDateParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<OpexPaymentGetDetail_Result> OpexPaymentGetDetail(string opexPaymentNo, Nullable<int> opexPaymentIdx)
        {
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            var opexPaymentIdxParameter = opexPaymentIdx.HasValue ?
                new ObjectParameter("OpexPaymentIdx", opexPaymentIdx) :
                new ObjectParameter("OpexPaymentIdx", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentGetDetail_Result>("OpexPaymentGetDetail", opexPaymentNoParameter, opexPaymentIdxParameter);
        }
    
        public virtual ObjectResult<OpexPaymentGetDetailCOP_Result> OpexPaymentGetDetailCOP(string opexPaymentNo, Nullable<int> opexPaymentIdx)
        {
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            var opexPaymentIdxParameter = opexPaymentIdx.HasValue ?
                new ObjectParameter("OpexPaymentIdx", opexPaymentIdx) :
                new ObjectParameter("OpexPaymentIdx", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentGetDetailCOP_Result>("OpexPaymentGetDetailCOP", opexPaymentNoParameter, opexPaymentIdxParameter);
        }
    
        public virtual ObjectResult<OpexPaymentGetHeader_Result> OpexPaymentGetHeader(string opexPaymentNo)
        {
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentGetHeader_Result>("OpexPaymentGetHeader", opexPaymentNoParameter);
        }
    
        public virtual int OpexPaymentGetHeaderPaid(string opexPaymentNo, string paidStatus, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            var paidStatusParameter = paidStatus != null ?
                new ObjectParameter("PaidStatus", paidStatus) :
                new ObjectParameter("PaidStatus", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpexPaymentGetHeaderPaid", opexPaymentNoParameter, paidStatusParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<OpexPaymentGetHeaderUpload_Result> OpexPaymentGetHeaderUpload(string opexPaymentNo)
        {
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentGetHeaderUpload_Result>("OpexPaymentGetHeaderUpload", opexPaymentNoParameter);
        }
    
        public virtual int OpexPaymentGetList(string opexPaymentNo, Nullable<int> createdBranch, string createdDept, string active, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            var createdBranchParameter = createdBranch.HasValue ?
                new ObjectParameter("CreatedBranch", createdBranch) :
                new ObjectParameter("CreatedBranch", typeof(int));
    
            var createdDeptParameter = createdDept != null ?
                new ObjectParameter("CreatedDept", createdDept) :
                new ObjectParameter("CreatedDept", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpexPaymentGetList", opexPaymentNoParameter, createdBranchParameter, createdDeptParameter, activeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int OpexPaymentGetListDetail(string opexPaymentNo, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpexPaymentGetListDetail", opexPaymentNoParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<OpexPaymentLookUp_Result> OpexPaymentLookUp(string opexPaymentNo, Nullable<decimal> branchId, string recepientBankType, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(decimal));
    
            var recepientBankTypeParameter = recepientBankType != null ?
                new ObjectParameter("RecepientBankType", recepientBankType) :
                new ObjectParameter("RecepientBankType", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentLookUp_Result>("OpexPaymentLookUp", opexPaymentNoParameter, branchIdParameter, recepientBankTypeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int OpexPaymentSetDetail(string opexPaymentNo, Nullable<int> branchAllocation, Nullable<int> sbpAllocation, Nullable<decimal> price, Nullable<decimal> includePpnAmount, Nullable<decimal> feeAmount, Nullable<decimal> totalDpp, Nullable<decimal> vatAmount, Nullable<decimal> whTaxAmount, Nullable<decimal> stampDuty, Nullable<decimal> excludePpnAmount, Nullable<decimal> amountPaid, string active, string state, Nullable<int> opexPaymentIdx)
        {
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            var branchAllocationParameter = branchAllocation.HasValue ?
                new ObjectParameter("BranchAllocation", branchAllocation) :
                new ObjectParameter("BranchAllocation", typeof(int));
    
            var sbpAllocationParameter = sbpAllocation.HasValue ?
                new ObjectParameter("SbpAllocation", sbpAllocation) :
                new ObjectParameter("SbpAllocation", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var includePpnAmountParameter = includePpnAmount.HasValue ?
                new ObjectParameter("IncludePpnAmount", includePpnAmount) :
                new ObjectParameter("IncludePpnAmount", typeof(decimal));
    
            var feeAmountParameter = feeAmount.HasValue ?
                new ObjectParameter("FeeAmount", feeAmount) :
                new ObjectParameter("FeeAmount", typeof(decimal));
    
            var totalDppParameter = totalDpp.HasValue ?
                new ObjectParameter("TotalDpp", totalDpp) :
                new ObjectParameter("TotalDpp", typeof(decimal));
    
            var vatAmountParameter = vatAmount.HasValue ?
                new ObjectParameter("VatAmount", vatAmount) :
                new ObjectParameter("VatAmount", typeof(decimal));
    
            var whTaxAmountParameter = whTaxAmount.HasValue ?
                new ObjectParameter("WhTaxAmount", whTaxAmount) :
                new ObjectParameter("WhTaxAmount", typeof(decimal));
    
            var stampDutyParameter = stampDuty.HasValue ?
                new ObjectParameter("StampDuty", stampDuty) :
                new ObjectParameter("StampDuty", typeof(decimal));
    
            var excludePpnAmountParameter = excludePpnAmount.HasValue ?
                new ObjectParameter("ExcludePpnAmount", excludePpnAmount) :
                new ObjectParameter("ExcludePpnAmount", typeof(decimal));
    
            var amountPaidParameter = amountPaid.HasValue ?
                new ObjectParameter("AmountPaid", amountPaid) :
                new ObjectParameter("AmountPaid", typeof(decimal));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var opexPaymentIdxParameter = opexPaymentIdx.HasValue ?
                new ObjectParameter("OpexPaymentIdx", opexPaymentIdx) :
                new ObjectParameter("OpexPaymentIdx", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpexPaymentSetDetail", opexPaymentNoParameter, branchAllocationParameter, sbpAllocationParameter, priceParameter, includePpnAmountParameter, feeAmountParameter, totalDppParameter, vatAmountParameter, whTaxAmountParameter, stampDutyParameter, excludePpnAmountParameter, amountPaidParameter, activeParameter, stateParameter, opexPaymentIdxParameter);
        }
    
        public virtual int OpexPaymentSetDetailCOP(string state, string opexPaymentNo, Nullable<int> branchAllocation, Nullable<int> sbpAllocation, string policyNo, string name, string nIK, string paymentNo, Nullable<decimal> premi, Nullable<decimal> policyFee, Nullable<decimal> totalDebit, Nullable<decimal> comission, Nullable<decimal> vat, Nullable<decimal> whTax, Nullable<decimal> totalCredit, Nullable<decimal> paymentToInsurance, string active, string createdBy, Nullable<int> opexPaymentIdx)
        {
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            var branchAllocationParameter = branchAllocation.HasValue ?
                new ObjectParameter("BranchAllocation", branchAllocation) :
                new ObjectParameter("BranchAllocation", typeof(int));
    
            var sbpAllocationParameter = sbpAllocation.HasValue ?
                new ObjectParameter("SbpAllocation", sbpAllocation) :
                new ObjectParameter("SbpAllocation", typeof(int));
    
            var policyNoParameter = policyNo != null ?
                new ObjectParameter("PolicyNo", policyNo) :
                new ObjectParameter("PolicyNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var nIKParameter = nIK != null ?
                new ObjectParameter("NIK", nIK) :
                new ObjectParameter("NIK", typeof(string));
    
            var paymentNoParameter = paymentNo != null ?
                new ObjectParameter("PaymentNo", paymentNo) :
                new ObjectParameter("PaymentNo", typeof(string));
    
            var premiParameter = premi.HasValue ?
                new ObjectParameter("Premi", premi) :
                new ObjectParameter("Premi", typeof(decimal));
    
            var policyFeeParameter = policyFee.HasValue ?
                new ObjectParameter("PolicyFee", policyFee) :
                new ObjectParameter("PolicyFee", typeof(decimal));
    
            var totalDebitParameter = totalDebit.HasValue ?
                new ObjectParameter("TotalDebit", totalDebit) :
                new ObjectParameter("TotalDebit", typeof(decimal));
    
            var comissionParameter = comission.HasValue ?
                new ObjectParameter("Comission", comission) :
                new ObjectParameter("Comission", typeof(decimal));
    
            var vatParameter = vat.HasValue ?
                new ObjectParameter("vat", vat) :
                new ObjectParameter("vat", typeof(decimal));
    
            var whTaxParameter = whTax.HasValue ?
                new ObjectParameter("whTax", whTax) :
                new ObjectParameter("whTax", typeof(decimal));
    
            var totalCreditParameter = totalCredit.HasValue ?
                new ObjectParameter("TotalCredit", totalCredit) :
                new ObjectParameter("TotalCredit", typeof(decimal));
    
            var paymentToInsuranceParameter = paymentToInsurance.HasValue ?
                new ObjectParameter("PaymentToInsurance", paymentToInsurance) :
                new ObjectParameter("PaymentToInsurance", typeof(decimal));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var opexPaymentIdxParameter = opexPaymentIdx.HasValue ?
                new ObjectParameter("OpexPaymentIdx", opexPaymentIdx) :
                new ObjectParameter("OpexPaymentIdx", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpexPaymentSetDetailCOP", stateParameter, opexPaymentNoParameter, branchAllocationParameter, sbpAllocationParameter, policyNoParameter, nameParameter, nIKParameter, paymentNoParameter, premiParameter, policyFeeParameter, totalDebitParameter, comissionParameter, vatParameter, whTaxParameter, totalCreditParameter, paymentToInsuranceParameter, activeParameter, createdByParameter, opexPaymentIdxParameter);
        }
    
        public virtual int OpexPaymentSetHeader(ObjectParameter opexPaymentNo, string oldOpexPaymentNo, string documentType, string opexType, Nullable<int> branchId, string departementCode, Nullable<int> sbpCode, string invoiceNumber, string description, string recepientName, string recepientNPWP, string recepientAddress, string recepientIDNumber, string recepientPKP, string recepientWhTax, string recepientBankType, string beneficiaryBank, string recepientAccNumber, string recepientAccName, string cCY, Nullable<int> createdBranch, string createdDept, string createdBy, string workFlowCode, Nullable<byte> docType, Nullable<byte> recipientType)
        {
            var oldOpexPaymentNoParameter = oldOpexPaymentNo != null ?
                new ObjectParameter("OldOpexPaymentNo", oldOpexPaymentNo) :
                new ObjectParameter("OldOpexPaymentNo", typeof(string));
    
            var documentTypeParameter = documentType != null ?
                new ObjectParameter("DocumentType", documentType) :
                new ObjectParameter("DocumentType", typeof(string));
    
            var opexTypeParameter = opexType != null ?
                new ObjectParameter("OpexType", opexType) :
                new ObjectParameter("OpexType", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var departementCodeParameter = departementCode != null ?
                new ObjectParameter("DepartementCode", departementCode) :
                new ObjectParameter("DepartementCode", typeof(string));
    
            var sbpCodeParameter = sbpCode.HasValue ?
                new ObjectParameter("SbpCode", sbpCode) :
                new ObjectParameter("SbpCode", typeof(int));
    
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var recepientNameParameter = recepientName != null ?
                new ObjectParameter("RecepientName", recepientName) :
                new ObjectParameter("RecepientName", typeof(string));
    
            var recepientNPWPParameter = recepientNPWP != null ?
                new ObjectParameter("RecepientNPWP", recepientNPWP) :
                new ObjectParameter("RecepientNPWP", typeof(string));
    
            var recepientAddressParameter = recepientAddress != null ?
                new ObjectParameter("RecepientAddress", recepientAddress) :
                new ObjectParameter("RecepientAddress", typeof(string));
    
            var recepientIDNumberParameter = recepientIDNumber != null ?
                new ObjectParameter("RecepientIDNumber", recepientIDNumber) :
                new ObjectParameter("RecepientIDNumber", typeof(string));
    
            var recepientPKPParameter = recepientPKP != null ?
                new ObjectParameter("RecepientPKP", recepientPKP) :
                new ObjectParameter("RecepientPKP", typeof(string));
    
            var recepientWhTaxParameter = recepientWhTax != null ?
                new ObjectParameter("RecepientWhTax", recepientWhTax) :
                new ObjectParameter("RecepientWhTax", typeof(string));
    
            var recepientBankTypeParameter = recepientBankType != null ?
                new ObjectParameter("RecepientBankType", recepientBankType) :
                new ObjectParameter("RecepientBankType", typeof(string));
    
            var beneficiaryBankParameter = beneficiaryBank != null ?
                new ObjectParameter("BeneficiaryBank", beneficiaryBank) :
                new ObjectParameter("BeneficiaryBank", typeof(string));
    
            var recepientAccNumberParameter = recepientAccNumber != null ?
                new ObjectParameter("RecepientAccNumber", recepientAccNumber) :
                new ObjectParameter("RecepientAccNumber", typeof(string));
    
            var recepientAccNameParameter = recepientAccName != null ?
                new ObjectParameter("RecepientAccName", recepientAccName) :
                new ObjectParameter("RecepientAccName", typeof(string));
    
            var cCYParameter = cCY != null ?
                new ObjectParameter("CCY", cCY) :
                new ObjectParameter("CCY", typeof(string));
    
            var createdBranchParameter = createdBranch.HasValue ?
                new ObjectParameter("CreatedBranch", createdBranch) :
                new ObjectParameter("CreatedBranch", typeof(int));
    
            var createdDeptParameter = createdDept != null ?
                new ObjectParameter("CreatedDept", createdDept) :
                new ObjectParameter("CreatedDept", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var workFlowCodeParameter = workFlowCode != null ?
                new ObjectParameter("WorkFlowCode", workFlowCode) :
                new ObjectParameter("WorkFlowCode", typeof(string));
    
            var docTypeParameter = docType.HasValue ?
                new ObjectParameter("DocType", docType) :
                new ObjectParameter("DocType", typeof(byte));
    
            var recipientTypeParameter = recipientType.HasValue ?
                new ObjectParameter("RecipientType", recipientType) :
                new ObjectParameter("RecipientType", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpexPaymentSetHeader", opexPaymentNo, oldOpexPaymentNoParameter, documentTypeParameter, opexTypeParameter, branchIdParameter, departementCodeParameter, sbpCodeParameter, invoiceNumberParameter, descriptionParameter, recepientNameParameter, recepientNPWPParameter, recepientAddressParameter, recepientIDNumberParameter, recepientPKPParameter, recepientWhTaxParameter, recepientBankTypeParameter, beneficiaryBankParameter, recepientAccNumberParameter, recepientAccNameParameter, cCYParameter, createdBranchParameter, createdDeptParameter, createdByParameter, workFlowCodeParameter, docTypeParameter, recipientTypeParameter);
        }
    
        public virtual int OpexPaymentSetHeaderPaid(string opexPaymentNo, string paidStatus, Nullable<decimal> iD)
        {
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            var paidStatusParameter = paidStatus != null ?
                new ObjectParameter("PaidStatus", paidStatus) :
                new ObjectParameter("PaidStatus", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpexPaymentSetHeaderPaid", opexPaymentNoParameter, paidStatusParameter, iDParameter);
        }
    
        public virtual int OpexPaymentSetJournal(string opexPaymentNo, string paidStatus, string createdBy)
        {
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            var paidStatusParameter = paidStatus != null ?
                new ObjectParameter("PaidStatus", paidStatus) :
                new ObjectParameter("PaidStatus", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpexPaymentSetJournal", opexPaymentNoParameter, paidStatusParameter, createdByParameter);
        }
    
        public virtual ObjectResult<OpexPaymentStatus_Result> OpexPaymentStatus(Nullable<int> workFlowBranchCode, string workFlowPriveledgeCode, string workFlowUserID, string workFlowStatus, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var workFlowBranchCodeParameter = workFlowBranchCode.HasValue ?
                new ObjectParameter("WorkFlowBranchCode", workFlowBranchCode) :
                new ObjectParameter("WorkFlowBranchCode", typeof(int));
    
            var workFlowPriveledgeCodeParameter = workFlowPriveledgeCode != null ?
                new ObjectParameter("WorkFlowPriveledgeCode", workFlowPriveledgeCode) :
                new ObjectParameter("WorkFlowPriveledgeCode", typeof(string));
    
            var workFlowUserIDParameter = workFlowUserID != null ?
                new ObjectParameter("WorkFlowUserID", workFlowUserID) :
                new ObjectParameter("WorkFlowUserID", typeof(string));
    
            var workFlowStatusParameter = workFlowStatus != null ?
                new ObjectParameter("WorkFlowStatus", workFlowStatus) :
                new ObjectParameter("WorkFlowStatus", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentStatus_Result>("OpexPaymentStatus", workFlowBranchCodeParameter, workFlowPriveledgeCodeParameter, workFlowUserIDParameter, workFlowStatusParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<OpexPaymentWHFakturCOPGetList_Result> OpexPaymentWHFakturCOPGetList(string wHFakturNo, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var wHFakturNoParameter = wHFakturNo != null ?
                new ObjectParameter("WHFakturNo", wHFakturNo) :
                new ObjectParameter("WHFakturNo", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentWHFakturCOPGetList_Result>("OpexPaymentWHFakturCOPGetList", wHFakturNoParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<OpexPaymentWhFakturGet_Result> OpexPaymentWhFakturGet(Nullable<int> fakturStatus, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var fakturStatusParameter = fakturStatus.HasValue ?
                new ObjectParameter("FakturStatus", fakturStatus) :
                new ObjectParameter("FakturStatus", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentWhFakturGet_Result>("OpexPaymentWhFakturGet", fakturStatusParameter, startDateParameter, endDateParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int REMINDER1_BM_EMPLOYREGIS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REMINDER1_BM_EMPLOYREGIS");
        }
    
        public virtual int REMINDER2_HRD_EMPLOYREGIS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REMINDER2_HRD_EMPLOYREGIS");
        }
    
        public virtual int REMINDER3_GM_EMPLOYREGIS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REMINDER3_GM_EMPLOYREGIS");
        }
    
        public virtual int REMINDER4_BM_USERIDREQ()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REMINDER4_BM_USERIDREQ");
        }
    
        public virtual int REMINDER5_GM_USERIDREQ()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REMINDER5_GM_USERIDREQ");
        }
    
        public virtual int REMINDER6_HRD_CLOSEJOB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REMINDER6_HRD_CLOSEJOB");
        }
    
        public virtual int REMINDER7_IT_CLOSEJOB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REMINDER7_IT_CLOSEJOB");
        }
    
        public virtual ObjectResult<REPORT_LISTS_Result> REPORT_LISTS(string reportGroup, Nullable<bool> isAllBranch)
        {
            var reportGroupParameter = reportGroup != null ?
                new ObjectParameter("ReportGroup", reportGroup) :
                new ObjectParameter("ReportGroup", typeof(string));
    
            var isAllBranchParameter = isAllBranch.HasValue ?
                new ObjectParameter("IsAllBranch", isAllBranch) :
                new ObjectParameter("IsAllBranch", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<REPORT_LISTS_Result>("REPORT_LISTS", reportGroupParameter, isAllBranchParameter);
        }
    
        public virtual ObjectResult<ReportGetOpexPayment_Result> ReportGetOpexPayment(Nullable<int> type, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportGetOpexPayment_Result>("ReportGetOpexPayment", typeParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<ReportGetPWNominative_Result> ReportGetPWNominative(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportGetPWNominative_Result>("ReportGetPWNominative", userIdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_CreateDeleteUserReport(Nullable<System.DateTime> starDate, Nullable<System.DateTime> endDate, Nullable<int> state)
        {
            var starDateParameter = starDate.HasValue ?
                new ObjectParameter("StarDate", starDate) :
                new ObjectParameter("StarDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CreateDeleteUserReport", starDateParameter, endDateParameter, stateParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_send_mail_EOD(string recipients)
        {
            var recipientsParameter = recipients != null ?
                new ObjectParameter("recipients", recipients) :
                new ObjectParameter("recipients", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_send_mail_EOD", recipientsParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spAgentITMailReminder()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAgentITMailReminder");
        }
    
        public virtual ObjectResult<spB2BSendMail_Result> spB2BSendMail(Nullable<int> piintBranchId, string pivchInsType)
        {
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchInsTypeParameter = pivchInsType != null ?
                new ObjectParameter("pivchInsType", pivchInsType) :
                new ObjectParameter("pivchInsType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spB2BSendMail_Result>("spB2BSendMail", piintBranchIdParameter, pivchInsTypeParameter);
        }
    
        public virtual int spBankGroupInsert(string pivchBankGroupCode, string pivchBankGroupName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchBankGroupCodeParameter = pivchBankGroupCode != null ?
                new ObjectParameter("pivchBankGroupCode", pivchBankGroupCode) :
                new ObjectParameter("pivchBankGroupCode", typeof(string));
    
            var pivchBankGroupNameParameter = pivchBankGroupName != null ?
                new ObjectParameter("pivchBankGroupName", pivchBankGroupName) :
                new ObjectParameter("pivchBankGroupName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBankGroupInsert", pivchBankGroupCodeParameter, pivchBankGroupNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spBankGroupList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBankGroupList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spBankGroupUpdate(string pivchBankGroupCode, string pivchBankGroupName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchBankGroupCodeParameter = pivchBankGroupCode != null ?
                new ObjectParameter("pivchBankGroupCode", pivchBankGroupCode) :
                new ObjectParameter("pivchBankGroupCode", typeof(string));
    
            var pivchBankGroupNameParameter = pivchBankGroupName != null ?
                new ObjectParameter("pivchBankGroupName", pivchBankGroupName) :
                new ObjectParameter("pivchBankGroupName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBankGroupUpdate", pivchBankGroupCodeParameter, pivchBankGroupNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spBankGroupView(string pivchBankGroupCode)
        {
            var pivchBankGroupCodeParameter = pivchBankGroupCode != null ?
                new ObjectParameter("pivchBankGroupCode", pivchBankGroupCode) :
                new ObjectParameter("pivchBankGroupCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBankGroupView", pivchBankGroupCodeParameter);
        }
    
        public virtual int spBranchDomainInsert(string pivchBranchCode, string pivchBranchName, string pivchBranchIP, string pivchUserName, string pivchPassword, string pivchInputID)
        {
            var pivchBranchCodeParameter = pivchBranchCode != null ?
                new ObjectParameter("pivchBranchCode", pivchBranchCode) :
                new ObjectParameter("pivchBranchCode", typeof(string));
    
            var pivchBranchNameParameter = pivchBranchName != null ?
                new ObjectParameter("pivchBranchName", pivchBranchName) :
                new ObjectParameter("pivchBranchName", typeof(string));
    
            var pivchBranchIPParameter = pivchBranchIP != null ?
                new ObjectParameter("pivchBranchIP", pivchBranchIP) :
                new ObjectParameter("pivchBranchIP", typeof(string));
    
            var pivchUserNameParameter = pivchUserName != null ?
                new ObjectParameter("pivchUserName", pivchUserName) :
                new ObjectParameter("pivchUserName", typeof(string));
    
            var pivchPasswordParameter = pivchPassword != null ?
                new ObjectParameter("pivchPassword", pivchPassword) :
                new ObjectParameter("pivchPassword", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBranchDomainInsert", pivchBranchCodeParameter, pivchBranchNameParameter, pivchBranchIPParameter, pivchUserNameParameter, pivchPasswordParameter, pivchInputIDParameter);
        }
    
        public virtual int spBranchDomainUpdate(string pivchBranchCodeOld, string pivchBranchCode, string pivchBranchName, string pivchBranchIP, string pivchUserName, string pivchPassword, string pivchInputID)
        {
            var pivchBranchCodeOldParameter = pivchBranchCodeOld != null ?
                new ObjectParameter("pivchBranchCodeOld", pivchBranchCodeOld) :
                new ObjectParameter("pivchBranchCodeOld", typeof(string));
    
            var pivchBranchCodeParameter = pivchBranchCode != null ?
                new ObjectParameter("pivchBranchCode", pivchBranchCode) :
                new ObjectParameter("pivchBranchCode", typeof(string));
    
            var pivchBranchNameParameter = pivchBranchName != null ?
                new ObjectParameter("pivchBranchName", pivchBranchName) :
                new ObjectParameter("pivchBranchName", typeof(string));
    
            var pivchBranchIPParameter = pivchBranchIP != null ?
                new ObjectParameter("pivchBranchIP", pivchBranchIP) :
                new ObjectParameter("pivchBranchIP", typeof(string));
    
            var pivchUserNameParameter = pivchUserName != null ?
                new ObjectParameter("pivchUserName", pivchUserName) :
                new ObjectParameter("pivchUserName", typeof(string));
    
            var pivchPasswordParameter = pivchPassword != null ?
                new ObjectParameter("pivchPassword", pivchPassword) :
                new ObjectParameter("pivchPassword", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBranchDomainUpdate", pivchBranchCodeOldParameter, pivchBranchCodeParameter, pivchBranchNameParameter, pivchBranchIPParameter, pivchUserNameParameter, pivchPasswordParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spBranchDomainView_Result> spBranchDomainView(string pivchBranchCode)
        {
            var pivchBranchCodeParameter = pivchBranchCode != null ?
                new ObjectParameter("pivchBranchCode", pivchBranchCode) :
                new ObjectParameter("pivchBranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBranchDomainView_Result>("spBranchDomainView", pivchBranchCodeParameter);
        }
    
        public virtual int spBranchInsert(Nullable<int> piintBranchId, string pivchBranchCode, string pivchBranchName, Nullable<int> piintBranchType, Nullable<int> piintBranchParent, string pivchBranchAddress, string pivchBranchPhone, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchBranchCodeParameter = pivchBranchCode != null ?
                new ObjectParameter("pivchBranchCode", pivchBranchCode) :
                new ObjectParameter("pivchBranchCode", typeof(string));
    
            var pivchBranchNameParameter = pivchBranchName != null ?
                new ObjectParameter("pivchBranchName", pivchBranchName) :
                new ObjectParameter("pivchBranchName", typeof(string));
    
            var piintBranchTypeParameter = piintBranchType.HasValue ?
                new ObjectParameter("piintBranchType", piintBranchType) :
                new ObjectParameter("piintBranchType", typeof(int));
    
            var piintBranchParentParameter = piintBranchParent.HasValue ?
                new ObjectParameter("piintBranchParent", piintBranchParent) :
                new ObjectParameter("piintBranchParent", typeof(int));
    
            var pivchBranchAddressParameter = pivchBranchAddress != null ?
                new ObjectParameter("pivchBranchAddress", pivchBranchAddress) :
                new ObjectParameter("pivchBranchAddress", typeof(string));
    
            var pivchBranchPhoneParameter = pivchBranchPhone != null ?
                new ObjectParameter("pivchBranchPhone", pivchBranchPhone) :
                new ObjectParameter("pivchBranchPhone", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBranchInsert", piintBranchIdParameter, pivchBranchCodeParameter, pivchBranchNameParameter, piintBranchTypeParameter, piintBranchParentParameter, pivchBranchAddressParameter, pivchBranchPhoneParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spBranchList_Result> spBranchList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBranchList_Result>("spBranchList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spBranchListTest(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter piintTotalPage, ObjectParameter piintTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBranchListTest", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, piintTotalPage, piintTotalData);
        }
    
        public virtual int spBranchUpdate(Nullable<int> piintBranchId, string pivchBranchCode, string pivchBranchName, Nullable<int> piintBranchType, Nullable<int> piintBranchParent, string pivchBranchAddress, string pivchBranchPhone, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchBranchCodeParameter = pivchBranchCode != null ?
                new ObjectParameter("pivchBranchCode", pivchBranchCode) :
                new ObjectParameter("pivchBranchCode", typeof(string));
    
            var pivchBranchNameParameter = pivchBranchName != null ?
                new ObjectParameter("pivchBranchName", pivchBranchName) :
                new ObjectParameter("pivchBranchName", typeof(string));
    
            var piintBranchTypeParameter = piintBranchType.HasValue ?
                new ObjectParameter("piintBranchType", piintBranchType) :
                new ObjectParameter("piintBranchType", typeof(int));
    
            var piintBranchParentParameter = piintBranchParent.HasValue ?
                new ObjectParameter("piintBranchParent", piintBranchParent) :
                new ObjectParameter("piintBranchParent", typeof(int));
    
            var pivchBranchAddressParameter = pivchBranchAddress != null ?
                new ObjectParameter("pivchBranchAddress", pivchBranchAddress) :
                new ObjectParameter("pivchBranchAddress", typeof(string));
    
            var pivchBranchPhoneParameter = pivchBranchPhone != null ?
                new ObjectParameter("pivchBranchPhone", pivchBranchPhone) :
                new ObjectParameter("pivchBranchPhone", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBranchUpdate", piintBranchIdParameter, pivchBranchCodeParameter, pivchBranchNameParameter, piintBranchTypeParameter, piintBranchParentParameter, pivchBranchAddressParameter, pivchBranchPhoneParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spBranchView_Result> spBranchView(Nullable<int> piintBranchId)
        {
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBranchView_Result>("spBranchView", piintBranchIdParameter);
        }
    
        public virtual int spConditionInsert(Nullable<int> piintConditionCode, string pivchConditionName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var piintConditionCodeParameter = piintConditionCode.HasValue ?
                new ObjectParameter("piintConditionCode", piintConditionCode) :
                new ObjectParameter("piintConditionCode", typeof(int));
    
            var pivchConditionNameParameter = pivchConditionName != null ?
                new ObjectParameter("pivchConditionName", pivchConditionName) :
                new ObjectParameter("pivchConditionName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spConditionInsert", piintConditionCodeParameter, pivchConditionNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spConditionList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spConditionList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spConditionUpdate(Nullable<int> piintConditionCode, string pivchConditionName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var piintConditionCodeParameter = piintConditionCode.HasValue ?
                new ObjectParameter("piintConditionCode", piintConditionCode) :
                new ObjectParameter("piintConditionCode", typeof(int));
    
            var pivchConditionNameParameter = pivchConditionName != null ?
                new ObjectParameter("pivchConditionName", pivchConditionName) :
                new ObjectParameter("pivchConditionName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spConditionUpdate", piintConditionCodeParameter, pivchConditionNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spConditionView(Nullable<int> piintConditionCode)
        {
            var piintConditionCodeParameter = piintConditionCode.HasValue ?
                new ObjectParameter("piintConditionCode", piintConditionCode) :
                new ObjectParameter("piintConditionCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spConditionView", piintConditionCodeParameter);
        }
    
        public virtual int spCurrencyInsert(string pivchCurrencyCode, string pivchCurrencyName, string pivchCurrencySymbol, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchCurrencyCodeParameter = pivchCurrencyCode != null ?
                new ObjectParameter("pivchCurrencyCode", pivchCurrencyCode) :
                new ObjectParameter("pivchCurrencyCode", typeof(string));
    
            var pivchCurrencyNameParameter = pivchCurrencyName != null ?
                new ObjectParameter("pivchCurrencyName", pivchCurrencyName) :
                new ObjectParameter("pivchCurrencyName", typeof(string));
    
            var pivchCurrencySymbolParameter = pivchCurrencySymbol != null ?
                new ObjectParameter("pivchCurrencySymbol", pivchCurrencySymbol) :
                new ObjectParameter("pivchCurrencySymbol", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCurrencyInsert", pivchCurrencyCodeParameter, pivchCurrencyNameParameter, pivchCurrencySymbolParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spCurrencyList_Result> spCurrencyList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCurrencyList_Result>("spCurrencyList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spCurrencyUpdate(string pivchCurrencyCode, string pivchCurrencyName, string pivchCurrencySymbol, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchCurrencyCodeParameter = pivchCurrencyCode != null ?
                new ObjectParameter("pivchCurrencyCode", pivchCurrencyCode) :
                new ObjectParameter("pivchCurrencyCode", typeof(string));
    
            var pivchCurrencyNameParameter = pivchCurrencyName != null ?
                new ObjectParameter("pivchCurrencyName", pivchCurrencyName) :
                new ObjectParameter("pivchCurrencyName", typeof(string));
    
            var pivchCurrencySymbolParameter = pivchCurrencySymbol != null ?
                new ObjectParameter("pivchCurrencySymbol", pivchCurrencySymbol) :
                new ObjectParameter("pivchCurrencySymbol", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCurrencyUpdate", pivchCurrencyCodeParameter, pivchCurrencyNameParameter, pivchCurrencySymbolParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spCurrencyView_Result> spCurrencyView(string pivchCurrencyCode)
        {
            var pivchCurrencyCodeParameter = pivchCurrencyCode != null ?
                new ObjectParameter("pivchCurrencyCode", pivchCurrencyCode) :
                new ObjectParameter("pivchCurrencyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCurrencyView_Result>("spCurrencyView", pivchCurrencyCodeParameter);
        }
    
        public virtual int spDepartementInsert(string pivchDepartementCode, string pivchDepartementName, string pivchCodeName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchDepartementNameParameter = pivchDepartementName != null ?
                new ObjectParameter("pivchDepartementName", pivchDepartementName) :
                new ObjectParameter("pivchDepartementName", typeof(string));
    
            var pivchCodeNameParameter = pivchCodeName != null ?
                new ObjectParameter("pivchCodeName", pivchCodeName) :
                new ObjectParameter("pivchCodeName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDepartementInsert", pivchDepartementCodeParameter, pivchDepartementNameParameter, pivchCodeNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spDeptList_Result> spDepartementList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDeptList_Result>("spDepartementList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spDepartementUpdate(string pivchDepartementCode, string pivchDepartementName, string pivchCodeName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchDepartementNameParameter = pivchDepartementName != null ?
                new ObjectParameter("pivchDepartementName", pivchDepartementName) :
                new ObjectParameter("pivchDepartementName", typeof(string));
    
            var pivchCodeNameParameter = pivchCodeName != null ?
                new ObjectParameter("pivchCodeName", pivchCodeName) :
                new ObjectParameter("pivchCodeName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDepartementUpdate", pivchDepartementCodeParameter, pivchDepartementNameParameter, pivchCodeNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spDepartementView_Result> spDepartementView(string pivchDepartementCode)
        {
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDepartementView_Result>("spDepartementView", pivchDepartementCodeParameter);
        }
    
        public virtual int spGABankAccountInsert(string pivchBankGroupCode, string pivchBankBranchName, string pivchBankAccNo, string pivchBankAccName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchBankGroupCodeParameter = pivchBankGroupCode != null ?
                new ObjectParameter("pivchBankGroupCode", pivchBankGroupCode) :
                new ObjectParameter("pivchBankGroupCode", typeof(string));
    
            var pivchBankBranchNameParameter = pivchBankBranchName != null ?
                new ObjectParameter("pivchBankBranchName", pivchBankBranchName) :
                new ObjectParameter("pivchBankBranchName", typeof(string));
    
            var pivchBankAccNoParameter = pivchBankAccNo != null ?
                new ObjectParameter("pivchBankAccNo", pivchBankAccNo) :
                new ObjectParameter("pivchBankAccNo", typeof(string));
    
            var pivchBankAccNameParameter = pivchBankAccName != null ?
                new ObjectParameter("pivchBankAccName", pivchBankAccName) :
                new ObjectParameter("pivchBankAccName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGABankAccountInsert", pivchBankGroupCodeParameter, pivchBankBranchNameParameter, pivchBankAccNoParameter, pivchBankAccNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spGABankAccountList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGABankAccountList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGABankAccountUpdate(Nullable<int> piintBankAccId, string pivchBankGroupCode, string pivchBankBranchName, string pivchBankAccNo, string pivchBankAccName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var piintBankAccIdParameter = piintBankAccId.HasValue ?
                new ObjectParameter("piintBankAccId", piintBankAccId) :
                new ObjectParameter("piintBankAccId", typeof(int));
    
            var pivchBankGroupCodeParameter = pivchBankGroupCode != null ?
                new ObjectParameter("pivchBankGroupCode", pivchBankGroupCode) :
                new ObjectParameter("pivchBankGroupCode", typeof(string));
    
            var pivchBankBranchNameParameter = pivchBankBranchName != null ?
                new ObjectParameter("pivchBankBranchName", pivchBankBranchName) :
                new ObjectParameter("pivchBankBranchName", typeof(string));
    
            var pivchBankAccNoParameter = pivchBankAccNo != null ?
                new ObjectParameter("pivchBankAccNo", pivchBankAccNo) :
                new ObjectParameter("pivchBankAccNo", typeof(string));
    
            var pivchBankAccNameParameter = pivchBankAccName != null ?
                new ObjectParameter("pivchBankAccName", pivchBankAccName) :
                new ObjectParameter("pivchBankAccName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGABankAccountUpdate", piintBankAccIdParameter, pivchBankGroupCodeParameter, pivchBankBranchNameParameter, pivchBankAccNoParameter, pivchBankAccNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spGABankAccountView(Nullable<int> piintBankAccId)
        {
            var piintBankAccIdParameter = piintBankAccId.HasValue ?
                new ObjectParameter("piintBankAccId", piintBankAccId) :
                new ObjectParameter("piintBankAccId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGABankAccountView", piintBankAccIdParameter);
        }
    
        public virtual int spGAFuelInsert(string pivchName, Nullable<decimal> pimonPrice, Nullable<bool> pibitIsCanUpdate, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchNameParameter = pivchName != null ?
                new ObjectParameter("pivchName", pivchName) :
                new ObjectParameter("pivchName", typeof(string));
    
            var pimonPriceParameter = pimonPrice.HasValue ?
                new ObjectParameter("pimonPrice", pimonPrice) :
                new ObjectParameter("pimonPrice", typeof(decimal));
    
            var pibitIsCanUpdateParameter = pibitIsCanUpdate.HasValue ?
                new ObjectParameter("pibitIsCanUpdate", pibitIsCanUpdate) :
                new ObjectParameter("pibitIsCanUpdate", typeof(bool));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAFuelInsert", pivchNameParameter, pimonPriceParameter, pibitIsCanUpdateParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAFuelList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAFuelList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAFuelUpdate(Nullable<int> piintFuelId, string pivchName, Nullable<decimal> pimonPrice, Nullable<bool> pibitIsCanUpdate, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var piintFuelIdParameter = piintFuelId.HasValue ?
                new ObjectParameter("piintFuelId", piintFuelId) :
                new ObjectParameter("piintFuelId", typeof(int));
    
            var pivchNameParameter = pivchName != null ?
                new ObjectParameter("pivchName", pivchName) :
                new ObjectParameter("pivchName", typeof(string));
    
            var pimonPriceParameter = pimonPrice.HasValue ?
                new ObjectParameter("pimonPrice", pimonPrice) :
                new ObjectParameter("pimonPrice", typeof(decimal));
    
            var pibitIsCanUpdateParameter = pibitIsCanUpdate.HasValue ?
                new ObjectParameter("pibitIsCanUpdate", pibitIsCanUpdate) :
                new ObjectParameter("pibitIsCanUpdate", typeof(bool));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAFuelUpdate", piintFuelIdParameter, pivchNameParameter, pimonPriceParameter, pibitIsCanUpdateParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAFuelView(Nullable<int> piintFuelId)
        {
            var piintFuelIdParameter = piintFuelId.HasValue ?
                new ObjectParameter("piintFuelId", piintFuelId) :
                new ObjectParameter("piintFuelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAFuelView", piintFuelIdParameter);
        }
    
        public virtual int spGAItemAdjustmentApprovalList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemAdjustmentApprovalList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAItemAdjustmentDetailDelete(string pivchItemAdjustDetailID, string pivchItemAdjustID)
        {
            var pivchItemAdjustDetailIDParameter = pivchItemAdjustDetailID != null ?
                new ObjectParameter("pivchItemAdjustDetailID", pivchItemAdjustDetailID) :
                new ObjectParameter("pivchItemAdjustDetailID", typeof(string));
    
            var pivchItemAdjustIDParameter = pivchItemAdjustID != null ?
                new ObjectParameter("pivchItemAdjustID", pivchItemAdjustID) :
                new ObjectParameter("pivchItemAdjustID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemAdjustmentDetailDelete", pivchItemAdjustDetailIDParameter, pivchItemAdjustIDParameter);
        }
    
        public virtual int spGAItemAdjustmentDetailInsert(string pivchItemAdjustID, string pivchItemTypeCode, string pivchInputID)
        {
            var pivchItemAdjustIDParameter = pivchItemAdjustID != null ?
                new ObjectParameter("pivchItemAdjustID", pivchItemAdjustID) :
                new ObjectParameter("pivchItemAdjustID", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemAdjustmentDetailInsert", pivchItemAdjustIDParameter, pivchItemTypeCodeParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAItemAdjustmentDetailList(string pivchItemAdjustID, string pivchWhereBy)
        {
            var pivchItemAdjustIDParameter = pivchItemAdjustID != null ?
                new ObjectParameter("pivchItemAdjustID", pivchItemAdjustID) :
                new ObjectParameter("pivchItemAdjustID", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemAdjustmentDetailList", pivchItemAdjustIDParameter, pivchWhereByParameter);
        }
    
        public virtual int spGAItemAdjustmentDetailUpdate(string pivchItemAdjustID, string pivchItemAdjustDetailID, Nullable<double> pidblQuantity, string pivchRemark, string pivchInputID)
        {
            var pivchItemAdjustIDParameter = pivchItemAdjustID != null ?
                new ObjectParameter("pivchItemAdjustID", pivchItemAdjustID) :
                new ObjectParameter("pivchItemAdjustID", typeof(string));
    
            var pivchItemAdjustDetailIDParameter = pivchItemAdjustDetailID != null ?
                new ObjectParameter("pivchItemAdjustDetailID", pivchItemAdjustDetailID) :
                new ObjectParameter("pivchItemAdjustDetailID", typeof(string));
    
            var pidblQuantityParameter = pidblQuantity.HasValue ?
                new ObjectParameter("pidblQuantity", pidblQuantity) :
                new ObjectParameter("pidblQuantity", typeof(double));
    
            var pivchRemarkParameter = pivchRemark != null ?
                new ObjectParameter("pivchRemark", pivchRemark) :
                new ObjectParameter("pivchRemark", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemAdjustmentDetailUpdate", pivchItemAdjustIDParameter, pivchItemAdjustDetailIDParameter, pidblQuantityParameter, pivchRemarkParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAItemAdjustmentDetailView_Result> spGAItemAdjustmentDetailView(string pivchItemAdjustDetailID, string pivchItemAdjustID)
        {
            var pivchItemAdjustDetailIDParameter = pivchItemAdjustDetailID != null ?
                new ObjectParameter("pivchItemAdjustDetailID", pivchItemAdjustDetailID) :
                new ObjectParameter("pivchItemAdjustDetailID", typeof(string));
    
            var pivchItemAdjustIDParameter = pivchItemAdjustID != null ?
                new ObjectParameter("pivchItemAdjustID", pivchItemAdjustID) :
                new ObjectParameter("pivchItemAdjustID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAItemAdjustmentDetailView_Result>("spGAItemAdjustmentDetailView", pivchItemAdjustDetailIDParameter, pivchItemAdjustIDParameter);
        }
    
        public virtual int spGAItemAdjustmentInsert(ObjectParameter povchItemAdjustID, string pivchDescription, Nullable<bool> pibitIsStock, string pivchInputID)
        {
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pibitIsStockParameter = pibitIsStock.HasValue ?
                new ObjectParameter("pibitIsStock", pibitIsStock) :
                new ObjectParameter("pibitIsStock", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemAdjustmentInsert", povchItemAdjustID, pivchDescriptionParameter, pibitIsStockParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAItemAdjustmentList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemAdjustmentList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAItemAdjustmentUpdate(string pivchItemAdjustID, string pivchDescription, Nullable<bool> pibitIsStock, string pivchInputID)
        {
            var pivchItemAdjustIDParameter = pivchItemAdjustID != null ?
                new ObjectParameter("pivchItemAdjustID", pivchItemAdjustID) :
                new ObjectParameter("pivchItemAdjustID", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pibitIsStockParameter = pibitIsStock.HasValue ?
                new ObjectParameter("pibitIsStock", pibitIsStock) :
                new ObjectParameter("pibitIsStock", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemAdjustmentUpdate", pivchItemAdjustIDParameter, pivchDescriptionParameter, pibitIsStockParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAItemAdjustmentUpdateStatus(string pivchItemAdjustID, string pivchStatus, string pivchDescription, Nullable<int> piintApprovalState, Nullable<int> piintToState, string pivchInputID)
        {
            var pivchItemAdjustIDParameter = pivchItemAdjustID != null ?
                new ObjectParameter("pivchItemAdjustID", pivchItemAdjustID) :
                new ObjectParameter("pivchItemAdjustID", typeof(string));
    
            var pivchStatusParameter = pivchStatus != null ?
                new ObjectParameter("pivchStatus", pivchStatus) :
                new ObjectParameter("pivchStatus", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var piintApprovalStateParameter = piintApprovalState.HasValue ?
                new ObjectParameter("piintApprovalState", piintApprovalState) :
                new ObjectParameter("piintApprovalState", typeof(int));
    
            var piintToStateParameter = piintToState.HasValue ?
                new ObjectParameter("piintToState", piintToState) :
                new ObjectParameter("piintToState", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemAdjustmentUpdateStatus", pivchItemAdjustIDParameter, pivchStatusParameter, pivchDescriptionParameter, piintApprovalStateParameter, piintToStateParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAItemAdjustmentView_Result> spGAItemAdjustmentView(string pivchItemAdjustID)
        {
            var pivchItemAdjustIDParameter = pivchItemAdjustID != null ?
                new ObjectParameter("pivchItemAdjustID", pivchItemAdjustID) :
                new ObjectParameter("pivchItemAdjustID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAItemAdjustmentView_Result>("spGAItemAdjustmentView", pivchItemAdjustIDParameter);
        }
    
        public virtual int spGAItemBarcodeDelete(Nullable<int> piintItemDetailNo, Nullable<int> piintBarcodeId, string pivchInputID)
        {
            var piintItemDetailNoParameter = piintItemDetailNo.HasValue ?
                new ObjectParameter("piintItemDetailNo", piintItemDetailNo) :
                new ObjectParameter("piintItemDetailNo", typeof(int));
    
            var piintBarcodeIdParameter = piintBarcodeId.HasValue ?
                new ObjectParameter("piintBarcodeId", piintBarcodeId) :
                new ObjectParameter("piintBarcodeId", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemBarcodeDelete", piintItemDetailNoParameter, piintBarcodeIdParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAItemBarcodeInsert(Nullable<int> piintItemDetailNo, string pivchItemBarcode, string pivchAssetNo, string pivchSerialNo, string pivchItemUser, Nullable<int> piintStatus, string pivchLocation, string pivchDescription, string pivchInputID)
        {
            var piintItemDetailNoParameter = piintItemDetailNo.HasValue ?
                new ObjectParameter("piintItemDetailNo", piintItemDetailNo) :
                new ObjectParameter("piintItemDetailNo", typeof(int));
    
            var pivchItemBarcodeParameter = pivchItemBarcode != null ?
                new ObjectParameter("pivchItemBarcode", pivchItemBarcode) :
                new ObjectParameter("pivchItemBarcode", typeof(string));
    
            var pivchAssetNoParameter = pivchAssetNo != null ?
                new ObjectParameter("pivchAssetNo", pivchAssetNo) :
                new ObjectParameter("pivchAssetNo", typeof(string));
    
            var pivchSerialNoParameter = pivchSerialNo != null ?
                new ObjectParameter("pivchSerialNo", pivchSerialNo) :
                new ObjectParameter("pivchSerialNo", typeof(string));
    
            var pivchItemUserParameter = pivchItemUser != null ?
                new ObjectParameter("pivchItemUser", pivchItemUser) :
                new ObjectParameter("pivchItemUser", typeof(string));
    
            var piintStatusParameter = piintStatus.HasValue ?
                new ObjectParameter("piintStatus", piintStatus) :
                new ObjectParameter("piintStatus", typeof(int));
    
            var pivchLocationParameter = pivchLocation != null ?
                new ObjectParameter("pivchLocation", pivchLocation) :
                new ObjectParameter("pivchLocation", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemBarcodeInsert", piintItemDetailNoParameter, pivchItemBarcodeParameter, pivchAssetNoParameter, pivchSerialNoParameter, pivchItemUserParameter, piintStatusParameter, pivchLocationParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAItemBarcodeList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemBarcodeList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAItemBarcodeUpdate(Nullable<int> piintBarcodeId, Nullable<int> piintItemDetailNo, string pivchItemBarcode, string pivchAssetNo, string pivchSerialNo, string pivchItemUser, Nullable<int> piintStatus, string pivchDescription, Nullable<int> piintBranchId, string pivchDepartementCode, string pivchLocation, string pivchInputID)
        {
            var piintBarcodeIdParameter = piintBarcodeId.HasValue ?
                new ObjectParameter("piintBarcodeId", piintBarcodeId) :
                new ObjectParameter("piintBarcodeId", typeof(int));
    
            var piintItemDetailNoParameter = piintItemDetailNo.HasValue ?
                new ObjectParameter("piintItemDetailNo", piintItemDetailNo) :
                new ObjectParameter("piintItemDetailNo", typeof(int));
    
            var pivchItemBarcodeParameter = pivchItemBarcode != null ?
                new ObjectParameter("pivchItemBarcode", pivchItemBarcode) :
                new ObjectParameter("pivchItemBarcode", typeof(string));
    
            var pivchAssetNoParameter = pivchAssetNo != null ?
                new ObjectParameter("pivchAssetNo", pivchAssetNo) :
                new ObjectParameter("pivchAssetNo", typeof(string));
    
            var pivchSerialNoParameter = pivchSerialNo != null ?
                new ObjectParameter("pivchSerialNo", pivchSerialNo) :
                new ObjectParameter("pivchSerialNo", typeof(string));
    
            var pivchItemUserParameter = pivchItemUser != null ?
                new ObjectParameter("pivchItemUser", pivchItemUser) :
                new ObjectParameter("pivchItemUser", typeof(string));
    
            var piintStatusParameter = piintStatus.HasValue ?
                new ObjectParameter("piintStatus", piintStatus) :
                new ObjectParameter("piintStatus", typeof(int));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchLocationParameter = pivchLocation != null ?
                new ObjectParameter("pivchLocation", pivchLocation) :
                new ObjectParameter("pivchLocation", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemBarcodeUpdate", piintBarcodeIdParameter, piintItemDetailNoParameter, pivchItemBarcodeParameter, pivchAssetNoParameter, pivchSerialNoParameter, pivchItemUserParameter, piintStatusParameter, pivchDescriptionParameter, piintBranchIdParameter, pivchDepartementCodeParameter, pivchLocationParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAItemBarcodeView_Result> spGAItemBarcodeView(Nullable<int> piintItemDetailNo, Nullable<int> piintBarcodeId)
        {
            var piintItemDetailNoParameter = piintItemDetailNo.HasValue ?
                new ObjectParameter("piintItemDetailNo", piintItemDetailNo) :
                new ObjectParameter("piintItemDetailNo", typeof(int));
    
            var piintBarcodeIdParameter = piintBarcodeId.HasValue ?
                new ObjectParameter("piintBarcodeId", piintBarcodeId) :
                new ObjectParameter("piintBarcodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAItemBarcodeView_Result>("spGAItemBarcodeView", piintItemDetailNoParameter, piintBarcodeIdParameter);
        }
    
        public virtual int spGAItemCategoryInsert(ObjectParameter povchItemCategoryCode, string pivchItemCategoryName, Nullable<bool> pibitIsAsset, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchItemCategoryNameParameter = pivchItemCategoryName != null ?
                new ObjectParameter("pivchItemCategoryName", pivchItemCategoryName) :
                new ObjectParameter("pivchItemCategoryName", typeof(string));
    
            var pibitIsAssetParameter = pibitIsAsset.HasValue ?
                new ObjectParameter("pibitIsAsset", pibitIsAsset) :
                new ObjectParameter("pibitIsAsset", typeof(bool));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemCategoryInsert", povchItemCategoryCode, pivchItemCategoryNameParameter, pibitIsAssetParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAItemCategoryList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemCategoryList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAItemCategoryUpdate(string pivchItemCategoryCode, string pivchItemCategoryName, Nullable<bool> pibitIsAsset, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchItemCategoryCodeParameter = pivchItemCategoryCode != null ?
                new ObjectParameter("pivchItemCategoryCode", pivchItemCategoryCode) :
                new ObjectParameter("pivchItemCategoryCode", typeof(string));
    
            var pivchItemCategoryNameParameter = pivchItemCategoryName != null ?
                new ObjectParameter("pivchItemCategoryName", pivchItemCategoryName) :
                new ObjectParameter("pivchItemCategoryName", typeof(string));
    
            var pibitIsAssetParameter = pibitIsAsset.HasValue ?
                new ObjectParameter("pibitIsAsset", pibitIsAsset) :
                new ObjectParameter("pibitIsAsset", typeof(bool));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemCategoryUpdate", pivchItemCategoryCodeParameter, pivchItemCategoryNameParameter, pibitIsAssetParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAItemCategoryView_Result> spGAItemCategoryView(string pivchItemCategoryCode)
        {
            var pivchItemCategoryCodeParameter = pivchItemCategoryCode != null ?
                new ObjectParameter("pivchItemCategoryCode", pivchItemCategoryCode) :
                new ObjectParameter("pivchItemCategoryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAItemCategoryView_Result>("spGAItemCategoryView", pivchItemCategoryCodeParameter);
        }
    
        public virtual int spGAItemDetailInsert(Nullable<int> piintBranchId, string pivchDepartementCode, string pivchItemTypeCode, string pivchInputID)
        {
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemDetailInsert", piintBranchIdParameter, pivchDepartementCodeParameter, pivchItemTypeCodeParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAItemForAdjustmentList(string pivchItemAdjustID, string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchItemAdjustIDParameter = pivchItemAdjustID != null ?
                new ObjectParameter("pivchItemAdjustID", pivchItemAdjustID) :
                new ObjectParameter("pivchItemAdjustID", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemForAdjustmentList", pivchItemAdjustIDParameter, pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAItemForPurchaseList(string pivchRequestID, string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemForPurchaseList", pivchRequestIDParameter, pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAItemForRequestList(string pivchItemRequestID, string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchItemRequestIDParameter = pivchItemRequestID != null ?
                new ObjectParameter("pivchItemRequestID", pivchItemRequestID) :
                new ObjectParameter("pivchItemRequestID", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemForRequestList", pivchItemRequestIDParameter, pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAItemGroupInsert(ObjectParameter povchItemGroupCode, string pivchItemGroupName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchItemGroupNameParameter = pivchItemGroupName != null ?
                new ObjectParameter("pivchItemGroupName", pivchItemGroupName) :
                new ObjectParameter("pivchItemGroupName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemGroupInsert", povchItemGroupCode, pivchItemGroupNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAItemGroupList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemGroupList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAItemGroupUpdate(string pivchItemGroupCode, string pivchItemGroupName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchItemGroupCodeParameter = pivchItemGroupCode != null ?
                new ObjectParameter("pivchItemGroupCode", pivchItemGroupCode) :
                new ObjectParameter("pivchItemGroupCode", typeof(string));
    
            var pivchItemGroupNameParameter = pivchItemGroupName != null ?
                new ObjectParameter("pivchItemGroupName", pivchItemGroupName) :
                new ObjectParameter("pivchItemGroupName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemGroupUpdate", pivchItemGroupCodeParameter, pivchItemGroupNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAItemGroupView_Result> spGAItemGroupView(string pivchItemGroupCode)
        {
            var pivchItemGroupCodeParameter = pivchItemGroupCode != null ?
                new ObjectParameter("pivchItemGroupCode", pivchItemGroupCode) :
                new ObjectParameter("pivchItemGroupCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAItemGroupView_Result>("spGAItemGroupView", pivchItemGroupCodeParameter);
        }
    
        public virtual int spGAItemHistoryList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemHistoryList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAItemList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAItemPurchaseRequestDetailList(Nullable<int> piintItemDetailNo, string pivchWhereBy)
        {
            var piintItemDetailNoParameter = piintItemDetailNo.HasValue ?
                new ObjectParameter("piintItemDetailNo", piintItemDetailNo) :
                new ObjectParameter("piintItemDetailNo", typeof(int));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemPurchaseRequestDetailList", piintItemDetailNoParameter, pivchWhereByParameter);
        }
    
        public virtual int spGAItemRequestApprovalList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemRequestApprovalList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAItemRequestDetailDelete(string pivchItemRequestDetailID, string pivchItemRequestID)
        {
            var pivchItemRequestDetailIDParameter = pivchItemRequestDetailID != null ?
                new ObjectParameter("pivchItemRequestDetailID", pivchItemRequestDetailID) :
                new ObjectParameter("pivchItemRequestDetailID", typeof(string));
    
            var pivchItemRequestIDParameter = pivchItemRequestID != null ?
                new ObjectParameter("pivchItemRequestID", pivchItemRequestID) :
                new ObjectParameter("pivchItemRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemRequestDetailDelete", pivchItemRequestDetailIDParameter, pivchItemRequestIDParameter);
        }
    
        public virtual int spGAItemRequestDetailInsert(string pivchItemRequestID, Nullable<int> piintItemDetailNo, string pivchInputID)
        {
            var pivchItemRequestIDParameter = pivchItemRequestID != null ?
                new ObjectParameter("pivchItemRequestID", pivchItemRequestID) :
                new ObjectParameter("pivchItemRequestID", typeof(string));
    
            var piintItemDetailNoParameter = piintItemDetailNo.HasValue ?
                new ObjectParameter("piintItemDetailNo", piintItemDetailNo) :
                new ObjectParameter("piintItemDetailNo", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemRequestDetailInsert", pivchItemRequestIDParameter, piintItemDetailNoParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAItemRequestDetailList(string pivchItemRequestID, string pivchWhereBy)
        {
            var pivchItemRequestIDParameter = pivchItemRequestID != null ?
                new ObjectParameter("pivchItemRequestID", pivchItemRequestID) :
                new ObjectParameter("pivchItemRequestID", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemRequestDetailList", pivchItemRequestIDParameter, pivchWhereByParameter);
        }
    
        public virtual int spGAItemRequestDetailUpdate(string pivchItemRequestID, string pivchItemRequestDetailID, Nullable<double> pidblQuantity, string pivchRemark, string pivchInputID)
        {
            var pivchItemRequestIDParameter = pivchItemRequestID != null ?
                new ObjectParameter("pivchItemRequestID", pivchItemRequestID) :
                new ObjectParameter("pivchItemRequestID", typeof(string));
    
            var pivchItemRequestDetailIDParameter = pivchItemRequestDetailID != null ?
                new ObjectParameter("pivchItemRequestDetailID", pivchItemRequestDetailID) :
                new ObjectParameter("pivchItemRequestDetailID", typeof(string));
    
            var pidblQuantityParameter = pidblQuantity.HasValue ?
                new ObjectParameter("pidblQuantity", pidblQuantity) :
                new ObjectParameter("pidblQuantity", typeof(double));
    
            var pivchRemarkParameter = pivchRemark != null ?
                new ObjectParameter("pivchRemark", pivchRemark) :
                new ObjectParameter("pivchRemark", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemRequestDetailUpdate", pivchItemRequestIDParameter, pivchItemRequestDetailIDParameter, pidblQuantityParameter, pivchRemarkParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAItemRequestDetailView_Result> spGAItemRequestDetailView(string pivchItemRequestDetailID, string pivchItemRequestID)
        {
            var pivchItemRequestDetailIDParameter = pivchItemRequestDetailID != null ?
                new ObjectParameter("pivchItemRequestDetailID", pivchItemRequestDetailID) :
                new ObjectParameter("pivchItemRequestDetailID", typeof(string));
    
            var pivchItemRequestIDParameter = pivchItemRequestID != null ?
                new ObjectParameter("pivchItemRequestID", pivchItemRequestID) :
                new ObjectParameter("pivchItemRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAItemRequestDetailView_Result>("spGAItemRequestDetailView", pivchItemRequestDetailIDParameter, pivchItemRequestIDParameter);
        }
    
        public virtual int spGAItemRequestInsert(ObjectParameter povchItemRequestID, Nullable<bool> pibitIsRequestHO, string pivchDescription, string pivchInputID)
        {
            var pibitIsRequestHOParameter = pibitIsRequestHO.HasValue ?
                new ObjectParameter("pibitIsRequestHO", pibitIsRequestHO) :
                new ObjectParameter("pibitIsRequestHO", typeof(bool));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemRequestInsert", povchItemRequestID, pibitIsRequestHOParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAItemRequestList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemRequestList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAItemRequestUpdate(string pivchItemRequestID, Nullable<bool> pibitIsRequestHO, string pivchDescription, string pivchInputID)
        {
            var pivchItemRequestIDParameter = pivchItemRequestID != null ?
                new ObjectParameter("pivchItemRequestID", pivchItemRequestID) :
                new ObjectParameter("pivchItemRequestID", typeof(string));
    
            var pibitIsRequestHOParameter = pibitIsRequestHO.HasValue ?
                new ObjectParameter("pibitIsRequestHO", pibitIsRequestHO) :
                new ObjectParameter("pibitIsRequestHO", typeof(bool));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemRequestUpdate", pivchItemRequestIDParameter, pibitIsRequestHOParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAItemRequestUpdateStatus(string pivchItemRequestID, string pivchStatus, string pivchDescription, Nullable<int> piintApprovalState, Nullable<int> piintToState, Nullable<int> piintMaxState, string pivchInputID)
        {
            var pivchItemRequestIDParameter = pivchItemRequestID != null ?
                new ObjectParameter("pivchItemRequestID", pivchItemRequestID) :
                new ObjectParameter("pivchItemRequestID", typeof(string));
    
            var pivchStatusParameter = pivchStatus != null ?
                new ObjectParameter("pivchStatus", pivchStatus) :
                new ObjectParameter("pivchStatus", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var piintApprovalStateParameter = piintApprovalState.HasValue ?
                new ObjectParameter("piintApprovalState", piintApprovalState) :
                new ObjectParameter("piintApprovalState", typeof(int));
    
            var piintToStateParameter = piintToState.HasValue ?
                new ObjectParameter("piintToState", piintToState) :
                new ObjectParameter("piintToState", typeof(int));
    
            var piintMaxStateParameter = piintMaxState.HasValue ?
                new ObjectParameter("piintMaxState", piintMaxState) :
                new ObjectParameter("piintMaxState", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemRequestUpdateStatus", pivchItemRequestIDParameter, pivchStatusParameter, pivchDescriptionParameter, piintApprovalStateParameter, piintToStateParameter, piintMaxStateParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAItemRequestView_Result> spGAItemRequestView(string pivchItemRequestID)
        {
            var pivchItemRequestIDParameter = pivchItemRequestID != null ?
                new ObjectParameter("pivchItemRequestID", pivchItemRequestID) :
                new ObjectParameter("pivchItemRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAItemRequestView_Result>("spGAItemRequestView", pivchItemRequestIDParameter);
        }
    
        public virtual int spGAItemTypeInsert(ObjectParameter povchItemTypeCode, string pivchItemTypeName, string pivchItemCategoryCode, string pivchItemGroupCode, string pivchMeasurementCode, Nullable<decimal> pimonPrice, string pivchDescription, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchItemTypeNameParameter = pivchItemTypeName != null ?
                new ObjectParameter("pivchItemTypeName", pivchItemTypeName) :
                new ObjectParameter("pivchItemTypeName", typeof(string));
    
            var pivchItemCategoryCodeParameter = pivchItemCategoryCode != null ?
                new ObjectParameter("pivchItemCategoryCode", pivchItemCategoryCode) :
                new ObjectParameter("pivchItemCategoryCode", typeof(string));
    
            var pivchItemGroupCodeParameter = pivchItemGroupCode != null ?
                new ObjectParameter("pivchItemGroupCode", pivchItemGroupCode) :
                new ObjectParameter("pivchItemGroupCode", typeof(string));
    
            var pivchMeasurementCodeParameter = pivchMeasurementCode != null ?
                new ObjectParameter("pivchMeasurementCode", pivchMeasurementCode) :
                new ObjectParameter("pivchMeasurementCode", typeof(string));
    
            var pimonPriceParameter = pimonPrice.HasValue ?
                new ObjectParameter("pimonPrice", pimonPrice) :
                new ObjectParameter("pimonPrice", typeof(decimal));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemTypeInsert", povchItemTypeCode, pivchItemTypeNameParameter, pivchItemCategoryCodeParameter, pivchItemGroupCodeParameter, pivchMeasurementCodeParameter, pimonPriceParameter, pivchDescriptionParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAItemTypeList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemTypeList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAItemTypeUpdate(string pivchItemTypeCode, string pivchItemTypeName, string pivchItemCategoryCode, string pivchItemGroupCode, string pivchMeasurementCode, Nullable<decimal> pimonPrice, string pivchDescription, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pivchItemTypeNameParameter = pivchItemTypeName != null ?
                new ObjectParameter("pivchItemTypeName", pivchItemTypeName) :
                new ObjectParameter("pivchItemTypeName", typeof(string));
    
            var pivchItemCategoryCodeParameter = pivchItemCategoryCode != null ?
                new ObjectParameter("pivchItemCategoryCode", pivchItemCategoryCode) :
                new ObjectParameter("pivchItemCategoryCode", typeof(string));
    
            var pivchItemGroupCodeParameter = pivchItemGroupCode != null ?
                new ObjectParameter("pivchItemGroupCode", pivchItemGroupCode) :
                new ObjectParameter("pivchItemGroupCode", typeof(string));
    
            var pivchMeasurementCodeParameter = pivchMeasurementCode != null ?
                new ObjectParameter("pivchMeasurementCode", pivchMeasurementCode) :
                new ObjectParameter("pivchMeasurementCode", typeof(string));
    
            var pimonPriceParameter = pimonPrice.HasValue ?
                new ObjectParameter("pimonPrice", pimonPrice) :
                new ObjectParameter("pimonPrice", typeof(decimal));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemTypeUpdate", pivchItemTypeCodeParameter, pivchItemTypeNameParameter, pivchItemCategoryCodeParameter, pivchItemGroupCodeParameter, pivchMeasurementCodeParameter, pimonPriceParameter, pivchDescriptionParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAItemTypeView_Result> spGAItemTypeView(string pivchItemTypeCode)
        {
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAItemTypeView_Result>("spGAItemTypeView", pivchItemTypeCodeParameter);
        }
    
        public virtual ObjectResult<spGAItemView_Result> spGAItemView(Nullable<int> piintItemDetailNo)
        {
            var piintItemDetailNoParameter = piintItemDetailNo.HasValue ?
                new ObjectParameter("piintItemDetailNo", piintItemDetailNo) :
                new ObjectParameter("piintItemDetailNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAItemView_Result>("spGAItemView", piintItemDetailNoParameter);
        }
    
        public virtual ObjectResult<spGAPurchaseApprovalLog_Result> spGAPurchaseApprovalLog(Nullable<int> piintState, string pivchIDNumber)
        {
            var piintStateParameter = piintState.HasValue ?
                new ObjectParameter("piintState", piintState) :
                new ObjectParameter("piintState", typeof(int));
    
            var pivchIDNumberParameter = pivchIDNumber != null ?
                new ObjectParameter("pivchIDNumber", pivchIDNumber) :
                new ObjectParameter("pivchIDNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAPurchaseApprovalLog_Result>("spGAPurchaseApprovalLog", piintStateParameter, pivchIDNumberParameter);
        }
    
        public virtual int spGAPurchaseDeliveryRequestDetailList(string pivchRequestID, string pivchWhereBy)
        {
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseDeliveryRequestDetailList", pivchRequestIDParameter, pivchWhereByParameter);
        }
    
        public virtual int spGAPurchaseOrderDetailDelete(string pivchOrderDetailID, string pivchOrderID)
        {
            var pivchOrderDetailIDParameter = pivchOrderDetailID != null ?
                new ObjectParameter("pivchOrderDetailID", pivchOrderDetailID) :
                new ObjectParameter("pivchOrderDetailID", typeof(string));
    
            var pivchOrderIDParameter = pivchOrderID != null ?
                new ObjectParameter("pivchOrderID", pivchOrderID) :
                new ObjectParameter("pivchOrderID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseOrderDetailDelete", pivchOrderDetailIDParameter, pivchOrderIDParameter);
        }
    
        public virtual int spGAPurchaseOrderDetailInsert(string pivchOrderID, string pivchRequestID, string pivchInputID)
        {
            var pivchOrderIDParameter = pivchOrderID != null ?
                new ObjectParameter("pivchOrderID", pivchOrderID) :
                new ObjectParameter("pivchOrderID", typeof(string));
    
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseOrderDetailInsert", pivchOrderIDParameter, pivchRequestIDParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAPurchaseOrderDetailList(string pivchOrderID, string pivchWhereBy)
        {
            var pivchOrderIDParameter = pivchOrderID != null ?
                new ObjectParameter("pivchOrderID", pivchOrderID) :
                new ObjectParameter("pivchOrderID", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseOrderDetailList", pivchOrderIDParameter, pivchWhereByParameter);
        }
    
        public virtual int spGAPurchaseOrderInsert(ObjectParameter povchOrderID, string pivchSupplierCode, string pivchSupplierPIC, string pivchCurrencyCode, Nullable<decimal> pimonExchangeRate, Nullable<bool> pibitIsTaxPPN, string pivchPIC, Nullable<System.DateTime> pidtmDeliveryDate, Nullable<int> piintDeliveryTo, string pivchDeliveryCP, string pivchOfferNo, Nullable<System.DateTime> pidtmOfferDate, string pivchPaymentMethod, string pivchDescription, string pivchSignedBy, string pivchInputID)
        {
            var pivchSupplierCodeParameter = pivchSupplierCode != null ?
                new ObjectParameter("pivchSupplierCode", pivchSupplierCode) :
                new ObjectParameter("pivchSupplierCode", typeof(string));
    
            var pivchSupplierPICParameter = pivchSupplierPIC != null ?
                new ObjectParameter("pivchSupplierPIC", pivchSupplierPIC) :
                new ObjectParameter("pivchSupplierPIC", typeof(string));
    
            var pivchCurrencyCodeParameter = pivchCurrencyCode != null ?
                new ObjectParameter("pivchCurrencyCode", pivchCurrencyCode) :
                new ObjectParameter("pivchCurrencyCode", typeof(string));
    
            var pimonExchangeRateParameter = pimonExchangeRate.HasValue ?
                new ObjectParameter("pimonExchangeRate", pimonExchangeRate) :
                new ObjectParameter("pimonExchangeRate", typeof(decimal));
    
            var pibitIsTaxPPNParameter = pibitIsTaxPPN.HasValue ?
                new ObjectParameter("pibitIsTaxPPN", pibitIsTaxPPN) :
                new ObjectParameter("pibitIsTaxPPN", typeof(bool));
    
            var pivchPICParameter = pivchPIC != null ?
                new ObjectParameter("pivchPIC", pivchPIC) :
                new ObjectParameter("pivchPIC", typeof(string));
    
            var pidtmDeliveryDateParameter = pidtmDeliveryDate.HasValue ?
                new ObjectParameter("pidtmDeliveryDate", pidtmDeliveryDate) :
                new ObjectParameter("pidtmDeliveryDate", typeof(System.DateTime));
    
            var piintDeliveryToParameter = piintDeliveryTo.HasValue ?
                new ObjectParameter("piintDeliveryTo", piintDeliveryTo) :
                new ObjectParameter("piintDeliveryTo", typeof(int));
    
            var pivchDeliveryCPParameter = pivchDeliveryCP != null ?
                new ObjectParameter("pivchDeliveryCP", pivchDeliveryCP) :
                new ObjectParameter("pivchDeliveryCP", typeof(string));
    
            var pivchOfferNoParameter = pivchOfferNo != null ?
                new ObjectParameter("pivchOfferNo", pivchOfferNo) :
                new ObjectParameter("pivchOfferNo", typeof(string));
    
            var pidtmOfferDateParameter = pidtmOfferDate.HasValue ?
                new ObjectParameter("pidtmOfferDate", pidtmOfferDate) :
                new ObjectParameter("pidtmOfferDate", typeof(System.DateTime));
    
            var pivchPaymentMethodParameter = pivchPaymentMethod != null ?
                new ObjectParameter("pivchPaymentMethod", pivchPaymentMethod) :
                new ObjectParameter("pivchPaymentMethod", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchSignedByParameter = pivchSignedBy != null ?
                new ObjectParameter("pivchSignedBy", pivchSignedBy) :
                new ObjectParameter("pivchSignedBy", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseOrderInsert", povchOrderID, pivchSupplierCodeParameter, pivchSupplierPICParameter, pivchCurrencyCodeParameter, pimonExchangeRateParameter, pibitIsTaxPPNParameter, pivchPICParameter, pidtmDeliveryDateParameter, piintDeliveryToParameter, pivchDeliveryCPParameter, pivchOfferNoParameter, pidtmOfferDateParameter, pivchPaymentMethodParameter, pivchDescriptionParameter, pivchSignedByParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAPurchaseOrderList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseOrderList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAPurchaseOrderRequestDetailList(string pivchRequestID, string pivchWhereBy)
        {
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseOrderRequestDetailList", pivchRequestIDParameter, pivchWhereByParameter);
        }
    
        public virtual int spGAPurchaseOrderUpdate(string pivchOrderID, string pivchSupplierCode, string pivchSupplierPIC, string pivchCurrencyCode, Nullable<decimal> pimonExchangeRate, Nullable<bool> pibitIsTaxPPN, string pivchPIC, Nullable<System.DateTime> pidtmDeliveryDate, Nullable<int> piintDeliveryTo, string pivchDeliveryCP, string pivchOfferNo, Nullable<System.DateTime> pidtmOfferDate, string pivchPaymentMethod, string pivchDescription, string pivchSignedBy, string pivchInputID)
        {
            var pivchOrderIDParameter = pivchOrderID != null ?
                new ObjectParameter("pivchOrderID", pivchOrderID) :
                new ObjectParameter("pivchOrderID", typeof(string));
    
            var pivchSupplierCodeParameter = pivchSupplierCode != null ?
                new ObjectParameter("pivchSupplierCode", pivchSupplierCode) :
                new ObjectParameter("pivchSupplierCode", typeof(string));
    
            var pivchSupplierPICParameter = pivchSupplierPIC != null ?
                new ObjectParameter("pivchSupplierPIC", pivchSupplierPIC) :
                new ObjectParameter("pivchSupplierPIC", typeof(string));
    
            var pivchCurrencyCodeParameter = pivchCurrencyCode != null ?
                new ObjectParameter("pivchCurrencyCode", pivchCurrencyCode) :
                new ObjectParameter("pivchCurrencyCode", typeof(string));
    
            var pimonExchangeRateParameter = pimonExchangeRate.HasValue ?
                new ObjectParameter("pimonExchangeRate", pimonExchangeRate) :
                new ObjectParameter("pimonExchangeRate", typeof(decimal));
    
            var pibitIsTaxPPNParameter = pibitIsTaxPPN.HasValue ?
                new ObjectParameter("pibitIsTaxPPN", pibitIsTaxPPN) :
                new ObjectParameter("pibitIsTaxPPN", typeof(bool));
    
            var pivchPICParameter = pivchPIC != null ?
                new ObjectParameter("pivchPIC", pivchPIC) :
                new ObjectParameter("pivchPIC", typeof(string));
    
            var pidtmDeliveryDateParameter = pidtmDeliveryDate.HasValue ?
                new ObjectParameter("pidtmDeliveryDate", pidtmDeliveryDate) :
                new ObjectParameter("pidtmDeliveryDate", typeof(System.DateTime));
    
            var piintDeliveryToParameter = piintDeliveryTo.HasValue ?
                new ObjectParameter("piintDeliveryTo", piintDeliveryTo) :
                new ObjectParameter("piintDeliveryTo", typeof(int));
    
            var pivchDeliveryCPParameter = pivchDeliveryCP != null ?
                new ObjectParameter("pivchDeliveryCP", pivchDeliveryCP) :
                new ObjectParameter("pivchDeliveryCP", typeof(string));
    
            var pivchOfferNoParameter = pivchOfferNo != null ?
                new ObjectParameter("pivchOfferNo", pivchOfferNo) :
                new ObjectParameter("pivchOfferNo", typeof(string));
    
            var pidtmOfferDateParameter = pidtmOfferDate.HasValue ?
                new ObjectParameter("pidtmOfferDate", pidtmOfferDate) :
                new ObjectParameter("pidtmOfferDate", typeof(System.DateTime));
    
            var pivchPaymentMethodParameter = pivchPaymentMethod != null ?
                new ObjectParameter("pivchPaymentMethod", pivchPaymentMethod) :
                new ObjectParameter("pivchPaymentMethod", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchSignedByParameter = pivchSignedBy != null ?
                new ObjectParameter("pivchSignedBy", pivchSignedBy) :
                new ObjectParameter("pivchSignedBy", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseOrderUpdate", pivchOrderIDParameter, pivchSupplierCodeParameter, pivchSupplierPICParameter, pivchCurrencyCodeParameter, pimonExchangeRateParameter, pibitIsTaxPPNParameter, pivchPICParameter, pidtmDeliveryDateParameter, piintDeliveryToParameter, pivchDeliveryCPParameter, pivchOfferNoParameter, pidtmOfferDateParameter, pivchPaymentMethodParameter, pivchDescriptionParameter, pivchSignedByParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAPurchaseOrderUpdateStatus(string pivchOrderID, string pivchStatus, string pivchDescription, Nullable<int> piintApprovalState, Nullable<int> piintToState, string pivchInputID)
        {
            var pivchOrderIDParameter = pivchOrderID != null ?
                new ObjectParameter("pivchOrderID", pivchOrderID) :
                new ObjectParameter("pivchOrderID", typeof(string));
    
            var pivchStatusParameter = pivchStatus != null ?
                new ObjectParameter("pivchStatus", pivchStatus) :
                new ObjectParameter("pivchStatus", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var piintApprovalStateParameter = piintApprovalState.HasValue ?
                new ObjectParameter("piintApprovalState", piintApprovalState) :
                new ObjectParameter("piintApprovalState", typeof(int));
    
            var piintToStateParameter = piintToState.HasValue ?
                new ObjectParameter("piintToState", piintToState) :
                new ObjectParameter("piintToState", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseOrderUpdateStatus", pivchOrderIDParameter, pivchStatusParameter, pivchDescriptionParameter, piintApprovalStateParameter, piintToStateParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAPurchaseOrderView_Result> spGAPurchaseOrderView(string pivchOrderID)
        {
            var pivchOrderIDParameter = pivchOrderID != null ?
                new ObjectParameter("pivchOrderID", pivchOrderID) :
                new ObjectParameter("pivchOrderID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAPurchaseOrderView_Result>("spGAPurchaseOrderView", pivchOrderIDParameter);
        }
    
        public virtual int spGAPurchaseReceivedApprovalList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseReceivedApprovalList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAPurchaseReceivedBarcodeDelete(string pivchReceivedDetailId, Nullable<int> piintReceivedBarcodeId)
        {
            var pivchReceivedDetailIdParameter = pivchReceivedDetailId != null ?
                new ObjectParameter("pivchReceivedDetailId", pivchReceivedDetailId) :
                new ObjectParameter("pivchReceivedDetailId", typeof(string));
    
            var piintReceivedBarcodeIdParameter = piintReceivedBarcodeId.HasValue ?
                new ObjectParameter("piintReceivedBarcodeId", piintReceivedBarcodeId) :
                new ObjectParameter("piintReceivedBarcodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseReceivedBarcodeDelete", pivchReceivedDetailIdParameter, piintReceivedBarcodeIdParameter);
        }
    
        public virtual int spGAPurchaseReceivedBarcodeInsert(string pivchReceivedDetailId, string pivchItemBarcode, string pivchAssetNo, string pivchSerialNo, string pivchInputID)
        {
            var pivchReceivedDetailIdParameter = pivchReceivedDetailId != null ?
                new ObjectParameter("pivchReceivedDetailId", pivchReceivedDetailId) :
                new ObjectParameter("pivchReceivedDetailId", typeof(string));
    
            var pivchItemBarcodeParameter = pivchItemBarcode != null ?
                new ObjectParameter("pivchItemBarcode", pivchItemBarcode) :
                new ObjectParameter("pivchItemBarcode", typeof(string));
    
            var pivchAssetNoParameter = pivchAssetNo != null ?
                new ObjectParameter("pivchAssetNo", pivchAssetNo) :
                new ObjectParameter("pivchAssetNo", typeof(string));
    
            var pivchSerialNoParameter = pivchSerialNo != null ?
                new ObjectParameter("pivchSerialNo", pivchSerialNo) :
                new ObjectParameter("pivchSerialNo", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseReceivedBarcodeInsert", pivchReceivedDetailIdParameter, pivchItemBarcodeParameter, pivchAssetNoParameter, pivchSerialNoParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAPurchaseReceivedBarcodeList(string pivchReceivedDetailID, string pivchWhereBy)
        {
            var pivchReceivedDetailIDParameter = pivchReceivedDetailID != null ?
                new ObjectParameter("pivchReceivedDetailID", pivchReceivedDetailID) :
                new ObjectParameter("pivchReceivedDetailID", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseReceivedBarcodeList", pivchReceivedDetailIDParameter, pivchWhereByParameter);
        }
    
        public virtual int spGAPurchaseReceivedBarcodeUpdate(Nullable<int> piintReceivedBarcodeId, string pivchReceivedDetailId, string pivchItemBarcode, string pivchAssetNo, string pivchSerialNo, string pivchInputID)
        {
            var piintReceivedBarcodeIdParameter = piintReceivedBarcodeId.HasValue ?
                new ObjectParameter("piintReceivedBarcodeId", piintReceivedBarcodeId) :
                new ObjectParameter("piintReceivedBarcodeId", typeof(int));
    
            var pivchReceivedDetailIdParameter = pivchReceivedDetailId != null ?
                new ObjectParameter("pivchReceivedDetailId", pivchReceivedDetailId) :
                new ObjectParameter("pivchReceivedDetailId", typeof(string));
    
            var pivchItemBarcodeParameter = pivchItemBarcode != null ?
                new ObjectParameter("pivchItemBarcode", pivchItemBarcode) :
                new ObjectParameter("pivchItemBarcode", typeof(string));
    
            var pivchAssetNoParameter = pivchAssetNo != null ?
                new ObjectParameter("pivchAssetNo", pivchAssetNo) :
                new ObjectParameter("pivchAssetNo", typeof(string));
    
            var pivchSerialNoParameter = pivchSerialNo != null ?
                new ObjectParameter("pivchSerialNo", pivchSerialNo) :
                new ObjectParameter("pivchSerialNo", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseReceivedBarcodeUpdate", piintReceivedBarcodeIdParameter, pivchReceivedDetailIdParameter, pivchItemBarcodeParameter, pivchAssetNoParameter, pivchSerialNoParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAPurchaseReceivedBarcodeView_Result> spGAPurchaseReceivedBarcodeView(string pivchReceivedDetailId, Nullable<int> piintReceivedBarcodeId)
        {
            var pivchReceivedDetailIdParameter = pivchReceivedDetailId != null ?
                new ObjectParameter("pivchReceivedDetailId", pivchReceivedDetailId) :
                new ObjectParameter("pivchReceivedDetailId", typeof(string));
    
            var piintReceivedBarcodeIdParameter = piintReceivedBarcodeId.HasValue ?
                new ObjectParameter("piintReceivedBarcodeId", piintReceivedBarcodeId) :
                new ObjectParameter("piintReceivedBarcodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAPurchaseReceivedBarcodeView_Result>("spGAPurchaseReceivedBarcodeView", pivchReceivedDetailIdParameter, piintReceivedBarcodeIdParameter);
        }
    
        public virtual int spGAPurchaseReceivedDetailDelete(string pivchReceivedDetailID, string pivchReceivedID)
        {
            var pivchReceivedDetailIDParameter = pivchReceivedDetailID != null ?
                new ObjectParameter("pivchReceivedDetailID", pivchReceivedDetailID) :
                new ObjectParameter("pivchReceivedDetailID", typeof(string));
    
            var pivchReceivedIDParameter = pivchReceivedID != null ?
                new ObjectParameter("pivchReceivedID", pivchReceivedID) :
                new ObjectParameter("pivchReceivedID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseReceivedDetailDelete", pivchReceivedDetailIDParameter, pivchReceivedIDParameter);
        }
    
        public virtual int spGAPurchaseReceivedDetailInsert(string pivchReceivedID, string pivchRequestDetailID, string pivchInputID)
        {
            var pivchReceivedIDParameter = pivchReceivedID != null ?
                new ObjectParameter("pivchReceivedID", pivchReceivedID) :
                new ObjectParameter("pivchReceivedID", typeof(string));
    
            var pivchRequestDetailIDParameter = pivchRequestDetailID != null ?
                new ObjectParameter("pivchRequestDetailID", pivchRequestDetailID) :
                new ObjectParameter("pivchRequestDetailID", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseReceivedDetailInsert", pivchReceivedIDParameter, pivchRequestDetailIDParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAPurchaseReceivedDetailList(string pivchReceivedID, string pivchWhereBy)
        {
            var pivchReceivedIDParameter = pivchReceivedID != null ?
                new ObjectParameter("pivchReceivedID", pivchReceivedID) :
                new ObjectParameter("pivchReceivedID", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseReceivedDetailList", pivchReceivedIDParameter, pivchWhereByParameter);
        }
    
        public virtual int spGAPurchaseReceivedDetailUpdate(string pivchReceivedID, string pivchReceivedDetailID, Nullable<double> pidblQuantity, string pivchInputID)
        {
            var pivchReceivedIDParameter = pivchReceivedID != null ?
                new ObjectParameter("pivchReceivedID", pivchReceivedID) :
                new ObjectParameter("pivchReceivedID", typeof(string));
    
            var pivchReceivedDetailIDParameter = pivchReceivedDetailID != null ?
                new ObjectParameter("pivchReceivedDetailID", pivchReceivedDetailID) :
                new ObjectParameter("pivchReceivedDetailID", typeof(string));
    
            var pidblQuantityParameter = pidblQuantity.HasValue ?
                new ObjectParameter("pidblQuantity", pidblQuantity) :
                new ObjectParameter("pidblQuantity", typeof(double));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseReceivedDetailUpdate", pivchReceivedIDParameter, pivchReceivedDetailIDParameter, pidblQuantityParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAPurchaseReceivedDetailView_Result> spGAPurchaseReceivedDetailView(string pivchReceivedDetailID, string pivchReceivedID)
        {
            var pivchReceivedDetailIDParameter = pivchReceivedDetailID != null ?
                new ObjectParameter("pivchReceivedDetailID", pivchReceivedDetailID) :
                new ObjectParameter("pivchReceivedDetailID", typeof(string));
    
            var pivchReceivedIDParameter = pivchReceivedID != null ?
                new ObjectParameter("pivchReceivedID", pivchReceivedID) :
                new ObjectParameter("pivchReceivedID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAPurchaseReceivedDetailView_Result>("spGAPurchaseReceivedDetailView", pivchReceivedDetailIDParameter, pivchReceivedIDParameter);
        }
    
        public virtual int spGAPurchaseReceivedInsert(ObjectParameter povchReceivedID, string pivchOrderID, string pivchSupplierPIC, string pivchPIC, string pivchDescription, string pivchInputID)
        {
            var pivchOrderIDParameter = pivchOrderID != null ?
                new ObjectParameter("pivchOrderID", pivchOrderID) :
                new ObjectParameter("pivchOrderID", typeof(string));
    
            var pivchSupplierPICParameter = pivchSupplierPIC != null ?
                new ObjectParameter("pivchSupplierPIC", pivchSupplierPIC) :
                new ObjectParameter("pivchSupplierPIC", typeof(string));
    
            var pivchPICParameter = pivchPIC != null ?
                new ObjectParameter("pivchPIC", pivchPIC) :
                new ObjectParameter("pivchPIC", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseReceivedInsert", povchReceivedID, pivchOrderIDParameter, pivchSupplierPICParameter, pivchPICParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAPurchaseReceivedList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseReceivedList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAPurchaseReceivedRequestDetailList(string pivchRequestID, string pivchWhereBy)
        {
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseReceivedRequestDetailList", pivchRequestIDParameter, pivchWhereByParameter);
        }
    
        public virtual int spGAPurchaseReceivedUpdate(string pivchReceivedID, string pivchOrderID, string pivchSupplierPIC, string pivchPIC, string pivchDescription, string pivchInputID)
        {
            var pivchReceivedIDParameter = pivchReceivedID != null ?
                new ObjectParameter("pivchReceivedID", pivchReceivedID) :
                new ObjectParameter("pivchReceivedID", typeof(string));
    
            var pivchOrderIDParameter = pivchOrderID != null ?
                new ObjectParameter("pivchOrderID", pivchOrderID) :
                new ObjectParameter("pivchOrderID", typeof(string));
    
            var pivchSupplierPICParameter = pivchSupplierPIC != null ?
                new ObjectParameter("pivchSupplierPIC", pivchSupplierPIC) :
                new ObjectParameter("pivchSupplierPIC", typeof(string));
    
            var pivchPICParameter = pivchPIC != null ?
                new ObjectParameter("pivchPIC", pivchPIC) :
                new ObjectParameter("pivchPIC", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseReceivedUpdate", pivchReceivedIDParameter, pivchOrderIDParameter, pivchSupplierPICParameter, pivchPICParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAPurchaseReceivedUpdateStatus(string pivchReceivedID, string pivchStatus, string pivchDescription, Nullable<int> piintApprovalState, Nullable<int> piintToState, string pivchInputID)
        {
            var pivchReceivedIDParameter = pivchReceivedID != null ?
                new ObjectParameter("pivchReceivedID", pivchReceivedID) :
                new ObjectParameter("pivchReceivedID", typeof(string));
    
            var pivchStatusParameter = pivchStatus != null ?
                new ObjectParameter("pivchStatus", pivchStatus) :
                new ObjectParameter("pivchStatus", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var piintApprovalStateParameter = piintApprovalState.HasValue ?
                new ObjectParameter("piintApprovalState", piintApprovalState) :
                new ObjectParameter("piintApprovalState", typeof(int));
    
            var piintToStateParameter = piintToState.HasValue ?
                new ObjectParameter("piintToState", piintToState) :
                new ObjectParameter("piintToState", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseReceivedUpdateStatus", pivchReceivedIDParameter, pivchStatusParameter, pivchDescriptionParameter, piintApprovalStateParameter, piintToStateParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAPurchaseReceivedView_Result> spGAPurchaseReceivedView(string pivchReceivedID)
        {
            var pivchReceivedIDParameter = pivchReceivedID != null ?
                new ObjectParameter("pivchReceivedID", pivchReceivedID) :
                new ObjectParameter("pivchReceivedID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAPurchaseReceivedView_Result>("spGAPurchaseReceivedView", pivchReceivedIDParameter);
        }
    
        public virtual int spGAPurchaseRequestApprovalList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestApprovalList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAPurchaseRequestDeliveryBarcodeUpdate(Nullable<int> piintDeliveryBarcodeId, string pivchDeliveryDetailId, string pivchItemUser, string pivchInputID)
        {
            var piintDeliveryBarcodeIdParameter = piintDeliveryBarcodeId.HasValue ?
                new ObjectParameter("piintDeliveryBarcodeId", piintDeliveryBarcodeId) :
                new ObjectParameter("piintDeliveryBarcodeId", typeof(int));
    
            var pivchDeliveryDetailIdParameter = pivchDeliveryDetailId != null ?
                new ObjectParameter("pivchDeliveryDetailId", pivchDeliveryDetailId) :
                new ObjectParameter("pivchDeliveryDetailId", typeof(string));
    
            var pivchItemUserParameter = pivchItemUser != null ?
                new ObjectParameter("pivchItemUser", pivchItemUser) :
                new ObjectParameter("pivchItemUser", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDeliveryBarcodeUpdate", piintDeliveryBarcodeIdParameter, pivchDeliveryDetailIdParameter, pivchItemUserParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAPurchaseRequestDeliveryBarcodeView_Result> spGAPurchaseRequestDeliveryBarcodeView(string pivchDeliveryDetailId, Nullable<int> piintDeliveryBarcodeId)
        {
            var pivchDeliveryDetailIdParameter = pivchDeliveryDetailId != null ?
                new ObjectParameter("pivchDeliveryDetailId", pivchDeliveryDetailId) :
                new ObjectParameter("pivchDeliveryDetailId", typeof(string));
    
            var piintDeliveryBarcodeIdParameter = piintDeliveryBarcodeId.HasValue ?
                new ObjectParameter("piintDeliveryBarcodeId", piintDeliveryBarcodeId) :
                new ObjectParameter("piintDeliveryBarcodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAPurchaseRequestDeliveryBarcodeView_Result>("spGAPurchaseRequestDeliveryBarcodeView", pivchDeliveryDetailIdParameter, piintDeliveryBarcodeIdParameter);
        }
    
        public virtual int spGAPurchaseRequestDeliveryDetailBarcodeDelete(string pivchDeliveryDetailId, Nullable<int> piintDeliveryBarcodeId)
        {
            var pivchDeliveryDetailIdParameter = pivchDeliveryDetailId != null ?
                new ObjectParameter("pivchDeliveryDetailId", pivchDeliveryDetailId) :
                new ObjectParameter("pivchDeliveryDetailId", typeof(string));
    
            var piintDeliveryBarcodeIdParameter = piintDeliveryBarcodeId.HasValue ?
                new ObjectParameter("piintDeliveryBarcodeId", piintDeliveryBarcodeId) :
                new ObjectParameter("piintDeliveryBarcodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDeliveryDetailBarcodeDelete", pivchDeliveryDetailIdParameter, piintDeliveryBarcodeIdParameter);
        }
    
        public virtual int spGAPurchaseRequestDeliveryDetailBarcodeInsert(string pivchDeliveryDetailId, string pivchItemBarcode, string pivchInputID)
        {
            var pivchDeliveryDetailIdParameter = pivchDeliveryDetailId != null ?
                new ObjectParameter("pivchDeliveryDetailId", pivchDeliveryDetailId) :
                new ObjectParameter("pivchDeliveryDetailId", typeof(string));
    
            var pivchItemBarcodeParameter = pivchItemBarcode != null ?
                new ObjectParameter("pivchItemBarcode", pivchItemBarcode) :
                new ObjectParameter("pivchItemBarcode", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDeliveryDetailBarcodeInsert", pivchDeliveryDetailIdParameter, pivchItemBarcodeParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAPurchaseRequestDeliveryDetailBarcodeList(string pivchDeliveryId, string pivchDeliveryDetailId, string pivchWhereBy)
        {
            var pivchDeliveryIdParameter = pivchDeliveryId != null ?
                new ObjectParameter("pivchDeliveryId", pivchDeliveryId) :
                new ObjectParameter("pivchDeliveryId", typeof(string));
    
            var pivchDeliveryDetailIdParameter = pivchDeliveryDetailId != null ?
                new ObjectParameter("pivchDeliveryDetailId", pivchDeliveryDetailId) :
                new ObjectParameter("pivchDeliveryDetailId", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDeliveryDetailBarcodeList", pivchDeliveryIdParameter, pivchDeliveryDetailIdParameter, pivchWhereByParameter);
        }
    
        public virtual int spGAPurchaseRequestDeliveryDetailDelete(string pivchDeliveryDetailID, string pivchDeliveryID)
        {
            var pivchDeliveryDetailIDParameter = pivchDeliveryDetailID != null ?
                new ObjectParameter("pivchDeliveryDetailID", pivchDeliveryDetailID) :
                new ObjectParameter("pivchDeliveryDetailID", typeof(string));
    
            var pivchDeliveryIDParameter = pivchDeliveryID != null ?
                new ObjectParameter("pivchDeliveryID", pivchDeliveryID) :
                new ObjectParameter("pivchDeliveryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDeliveryDetailDelete", pivchDeliveryDetailIDParameter, pivchDeliveryIDParameter);
        }
    
        public virtual int spGAPurchaseRequestDeliveryDetailInsert(string pivchDeliveryID, string pivchRequestDetailID, string pivchInputID)
        {
            var pivchDeliveryIDParameter = pivchDeliveryID != null ?
                new ObjectParameter("pivchDeliveryID", pivchDeliveryID) :
                new ObjectParameter("pivchDeliveryID", typeof(string));
    
            var pivchRequestDetailIDParameter = pivchRequestDetailID != null ?
                new ObjectParameter("pivchRequestDetailID", pivchRequestDetailID) :
                new ObjectParameter("pivchRequestDetailID", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDeliveryDetailInsert", pivchDeliveryIDParameter, pivchRequestDetailIDParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAPurchaseRequestDeliveryDetailList(string pivchDeliveryID, string pivchWhereBy)
        {
            var pivchDeliveryIDParameter = pivchDeliveryID != null ?
                new ObjectParameter("pivchDeliveryID", pivchDeliveryID) :
                new ObjectParameter("pivchDeliveryID", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDeliveryDetailList", pivchDeliveryIDParameter, pivchWhereByParameter);
        }
    
        public virtual int spGAPurchaseRequestDeliveryDetailUpdate(string pivchDeliveryID, string pivchDeliveryDetailID, Nullable<double> pidblQuantity, string pivchInputID)
        {
            var pivchDeliveryIDParameter = pivchDeliveryID != null ?
                new ObjectParameter("pivchDeliveryID", pivchDeliveryID) :
                new ObjectParameter("pivchDeliveryID", typeof(string));
    
            var pivchDeliveryDetailIDParameter = pivchDeliveryDetailID != null ?
                new ObjectParameter("pivchDeliveryDetailID", pivchDeliveryDetailID) :
                new ObjectParameter("pivchDeliveryDetailID", typeof(string));
    
            var pidblQuantityParameter = pidblQuantity.HasValue ?
                new ObjectParameter("pidblQuantity", pidblQuantity) :
                new ObjectParameter("pidblQuantity", typeof(double));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDeliveryDetailUpdate", pivchDeliveryIDParameter, pivchDeliveryDetailIDParameter, pidblQuantityParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAPurchaseRequestDeliveryDetailView_Result> spGAPurchaseRequestDeliveryDetailView(string pivchDeliveryDetailID, string pivchDeliveryID)
        {
            var pivchDeliveryDetailIDParameter = pivchDeliveryDetailID != null ?
                new ObjectParameter("pivchDeliveryDetailID", pivchDeliveryDetailID) :
                new ObjectParameter("pivchDeliveryDetailID", typeof(string));
    
            var pivchDeliveryIDParameter = pivchDeliveryID != null ?
                new ObjectParameter("pivchDeliveryID", pivchDeliveryID) :
                new ObjectParameter("pivchDeliveryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAPurchaseRequestDeliveryDetailView_Result>("spGAPurchaseRequestDeliveryDetailView", pivchDeliveryDetailIDParameter, pivchDeliveryIDParameter);
        }
    
        public virtual int spGAPurchaseRequestDeliveryInsert(ObjectParameter povchDeliveryID, string pivchRequestID, string pivchDescription, string pivchInputID)
        {
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDeliveryInsert", povchDeliveryID, pivchRequestIDParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAPurchaseRequestDeliveryItemBarcodeList(string pivchDeliveryDetailId, string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchDeliveryDetailIdParameter = pivchDeliveryDetailId != null ?
                new ObjectParameter("pivchDeliveryDetailId", pivchDeliveryDetailId) :
                new ObjectParameter("pivchDeliveryDetailId", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDeliveryItemBarcodeList", pivchDeliveryDetailIdParameter, pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAPurchaseRequestDeliveryList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDeliveryList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAPurchaseRequestDeliveryUpdate(string pivchDeliveryID, string pivchRequestID, string pivchDescription, string pivchInputID)
        {
            var pivchDeliveryIDParameter = pivchDeliveryID != null ?
                new ObjectParameter("pivchDeliveryID", pivchDeliveryID) :
                new ObjectParameter("pivchDeliveryID", typeof(string));
    
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDeliveryUpdate", pivchDeliveryIDParameter, pivchRequestIDParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAPurchaseRequestDeliveryUpdateStatus(string pivchDeliveryID, string pivchStatus, string pivchDescription, Nullable<int> piintApprovalState, Nullable<int> piintToState, string pivchInputID)
        {
            var pivchDeliveryIDParameter = pivchDeliveryID != null ?
                new ObjectParameter("pivchDeliveryID", pivchDeliveryID) :
                new ObjectParameter("pivchDeliveryID", typeof(string));
    
            var pivchStatusParameter = pivchStatus != null ?
                new ObjectParameter("pivchStatus", pivchStatus) :
                new ObjectParameter("pivchStatus", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var piintApprovalStateParameter = piintApprovalState.HasValue ?
                new ObjectParameter("piintApprovalState", piintApprovalState) :
                new ObjectParameter("piintApprovalState", typeof(int));
    
            var piintToStateParameter = piintToState.HasValue ?
                new ObjectParameter("piintToState", piintToState) :
                new ObjectParameter("piintToState", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDeliveryUpdateStatus", pivchDeliveryIDParameter, pivchStatusParameter, pivchDescriptionParameter, piintApprovalStateParameter, piintToStateParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAPurchaseRequestDeliveryView_Result> spGAPurchaseRequestDeliveryView(string pivchDeliveryID)
        {
            var pivchDeliveryIDParameter = pivchDeliveryID != null ?
                new ObjectParameter("pivchDeliveryID", pivchDeliveryID) :
                new ObjectParameter("pivchDeliveryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAPurchaseRequestDeliveryView_Result>("spGAPurchaseRequestDeliveryView", pivchDeliveryIDParameter);
        }
    
        public virtual int spGAPurchaseRequestDetailDelete(string pivchRequestDetailID, string pivchRequestID)
        {
            var pivchRequestDetailIDParameter = pivchRequestDetailID != null ?
                new ObjectParameter("pivchRequestDetailID", pivchRequestDetailID) :
                new ObjectParameter("pivchRequestDetailID", typeof(string));
    
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDetailDelete", pivchRequestDetailIDParameter, pivchRequestIDParameter);
        }
    
        public virtual int spGAPurchaseRequestDetailInsert(string pivchRequestID, string pivchItemTypeCode, Nullable<double> pidblQuantity, Nullable<decimal> pimonPrice, string pivchInputID)
        {
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pidblQuantityParameter = pidblQuantity.HasValue ?
                new ObjectParameter("pidblQuantity", pidblQuantity) :
                new ObjectParameter("pidblQuantity", typeof(double));
    
            var pimonPriceParameter = pimonPrice.HasValue ?
                new ObjectParameter("pimonPrice", pimonPrice) :
                new ObjectParameter("pimonPrice", typeof(decimal));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDetailInsert", pivchRequestIDParameter, pivchItemTypeCodeParameter, pidblQuantityParameter, pimonPriceParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAPurchaseRequestDetailList(string pivchRequestID, string pivchWhereBy)
        {
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDetailList", pivchRequestIDParameter, pivchWhereByParameter);
        }
    
        public virtual int spGAPurchaseRequestDetailUpdate(string pivchRequestDetailID, string pivchRequestID, string pivchItemTypeCode, Nullable<double> pidblQuantity, Nullable<decimal> pimonPrice, string pivchInputID)
        {
            var pivchRequestDetailIDParameter = pivchRequestDetailID != null ?
                new ObjectParameter("pivchRequestDetailID", pivchRequestDetailID) :
                new ObjectParameter("pivchRequestDetailID", typeof(string));
    
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pidblQuantityParameter = pidblQuantity.HasValue ?
                new ObjectParameter("pidblQuantity", pidblQuantity) :
                new ObjectParameter("pidblQuantity", typeof(double));
    
            var pimonPriceParameter = pimonPrice.HasValue ?
                new ObjectParameter("pimonPrice", pimonPrice) :
                new ObjectParameter("pimonPrice", typeof(decimal));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestDetailUpdate", pivchRequestDetailIDParameter, pivchRequestIDParameter, pivchItemTypeCodeParameter, pidblQuantityParameter, pimonPriceParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAPurchaseRequestDetailView_Result> spGAPurchaseRequestDetailView(string pivchRequestDetailID, string pivchRequestID)
        {
            var pivchRequestDetailIDParameter = pivchRequestDetailID != null ?
                new ObjectParameter("pivchRequestDetailID", pivchRequestDetailID) :
                new ObjectParameter("pivchRequestDetailID", typeof(string));
    
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAPurchaseRequestDetailView_Result>("spGAPurchaseRequestDetailView", pivchRequestDetailIDParameter, pivchRequestIDParameter);
        }
    
        public virtual int spGAPurchaseRequestInsert(ObjectParameter povchRequestID, Nullable<bool> pibitIsAsset, Nullable<bool> pibitIsTaxPPN, string pivchName, string pichrType, string pivchReason, string pivchSupplierCode, string pivchCurrencyCode, string pivchExistingCondition, string pivchRecommendation, string pivchDescription, Nullable<bool> pibitIsStock, string pivchInputID)
        {
            var pibitIsAssetParameter = pibitIsAsset.HasValue ?
                new ObjectParameter("pibitIsAsset", pibitIsAsset) :
                new ObjectParameter("pibitIsAsset", typeof(bool));
    
            var pibitIsTaxPPNParameter = pibitIsTaxPPN.HasValue ?
                new ObjectParameter("pibitIsTaxPPN", pibitIsTaxPPN) :
                new ObjectParameter("pibitIsTaxPPN", typeof(bool));
    
            var pivchNameParameter = pivchName != null ?
                new ObjectParameter("pivchName", pivchName) :
                new ObjectParameter("pivchName", typeof(string));
    
            var pichrTypeParameter = pichrType != null ?
                new ObjectParameter("pichrType", pichrType) :
                new ObjectParameter("pichrType", typeof(string));
    
            var pivchReasonParameter = pivchReason != null ?
                new ObjectParameter("pivchReason", pivchReason) :
                new ObjectParameter("pivchReason", typeof(string));
    
            var pivchSupplierCodeParameter = pivchSupplierCode != null ?
                new ObjectParameter("pivchSupplierCode", pivchSupplierCode) :
                new ObjectParameter("pivchSupplierCode", typeof(string));
    
            var pivchCurrencyCodeParameter = pivchCurrencyCode != null ?
                new ObjectParameter("pivchCurrencyCode", pivchCurrencyCode) :
                new ObjectParameter("pivchCurrencyCode", typeof(string));
    
            var pivchExistingConditionParameter = pivchExistingCondition != null ?
                new ObjectParameter("pivchExistingCondition", pivchExistingCondition) :
                new ObjectParameter("pivchExistingCondition", typeof(string));
    
            var pivchRecommendationParameter = pivchRecommendation != null ?
                new ObjectParameter("pivchRecommendation", pivchRecommendation) :
                new ObjectParameter("pivchRecommendation", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pibitIsStockParameter = pibitIsStock.HasValue ?
                new ObjectParameter("pibitIsStock", pibitIsStock) :
                new ObjectParameter("pibitIsStock", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestInsert", povchRequestID, pibitIsAssetParameter, pibitIsTaxPPNParameter, pivchNameParameter, pichrTypeParameter, pivchReasonParameter, pivchSupplierCodeParameter, pivchCurrencyCodeParameter, pivchExistingConditionParameter, pivchRecommendationParameter, pivchDescriptionParameter, pibitIsStockParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAPurchaseRequestList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAPurchaseRequestUpdate(string pivchRequestID, Nullable<bool> pibitIsAsset, Nullable<bool> pibitIsTaxPPN, string pivchName, string pichrType, string pivchReason, string pivchSupplierCode, string pivchCurrencyCode, string pivchExistingCondition, string pivchRecommendation, string pivchDescription, Nullable<bool> pibitIsStock, string pivchInputID)
        {
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            var pibitIsAssetParameter = pibitIsAsset.HasValue ?
                new ObjectParameter("pibitIsAsset", pibitIsAsset) :
                new ObjectParameter("pibitIsAsset", typeof(bool));
    
            var pibitIsTaxPPNParameter = pibitIsTaxPPN.HasValue ?
                new ObjectParameter("pibitIsTaxPPN", pibitIsTaxPPN) :
                new ObjectParameter("pibitIsTaxPPN", typeof(bool));
    
            var pivchNameParameter = pivchName != null ?
                new ObjectParameter("pivchName", pivchName) :
                new ObjectParameter("pivchName", typeof(string));
    
            var pichrTypeParameter = pichrType != null ?
                new ObjectParameter("pichrType", pichrType) :
                new ObjectParameter("pichrType", typeof(string));
    
            var pivchReasonParameter = pivchReason != null ?
                new ObjectParameter("pivchReason", pivchReason) :
                new ObjectParameter("pivchReason", typeof(string));
    
            var pivchSupplierCodeParameter = pivchSupplierCode != null ?
                new ObjectParameter("pivchSupplierCode", pivchSupplierCode) :
                new ObjectParameter("pivchSupplierCode", typeof(string));
    
            var pivchCurrencyCodeParameter = pivchCurrencyCode != null ?
                new ObjectParameter("pivchCurrencyCode", pivchCurrencyCode) :
                new ObjectParameter("pivchCurrencyCode", typeof(string));
    
            var pivchExistingConditionParameter = pivchExistingCondition != null ?
                new ObjectParameter("pivchExistingCondition", pivchExistingCondition) :
                new ObjectParameter("pivchExistingCondition", typeof(string));
    
            var pivchRecommendationParameter = pivchRecommendation != null ?
                new ObjectParameter("pivchRecommendation", pivchRecommendation) :
                new ObjectParameter("pivchRecommendation", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pibitIsStockParameter = pibitIsStock.HasValue ?
                new ObjectParameter("pibitIsStock", pibitIsStock) :
                new ObjectParameter("pibitIsStock", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestUpdate", pivchRequestIDParameter, pibitIsAssetParameter, pibitIsTaxPPNParameter, pivchNameParameter, pichrTypeParameter, pivchReasonParameter, pivchSupplierCodeParameter, pivchCurrencyCodeParameter, pivchExistingConditionParameter, pivchRecommendationParameter, pivchDescriptionParameter, pibitIsStockParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAPurchaseRequestUpdateStatus(string pivchRequestID, string pivchStatus, string pivchDescription, Nullable<int> piintApprovalState, Nullable<int> piintToState, string pivchInputID)
        {
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            var pivchStatusParameter = pivchStatus != null ?
                new ObjectParameter("pivchStatus", pivchStatus) :
                new ObjectParameter("pivchStatus", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var piintApprovalStateParameter = piintApprovalState.HasValue ?
                new ObjectParameter("piintApprovalState", piintApprovalState) :
                new ObjectParameter("piintApprovalState", typeof(int));
    
            var piintToStateParameter = piintToState.HasValue ?
                new ObjectParameter("piintToState", piintToState) :
                new ObjectParameter("piintToState", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseRequestUpdateStatus", pivchRequestIDParameter, pivchStatusParameter, pivchDescriptionParameter, piintApprovalStateParameter, piintToStateParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGAPurchaseRequestView_Result> spGAPurchaseRequestView(string pivchRequestID)
        {
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGAPurchaseRequestView_Result>("spGAPurchaseRequestView", pivchRequestIDParameter);
        }
    
        public virtual int spGASupplierInsert(ObjectParameter povchSupplierCode, string pivchSupplierName, string pivchAddress, string pivchCity, string pivchZipCode, string pivchPhone, string pivchFax, string pivchNPWP, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchSupplierNameParameter = pivchSupplierName != null ?
                new ObjectParameter("pivchSupplierName", pivchSupplierName) :
                new ObjectParameter("pivchSupplierName", typeof(string));
    
            var pivchAddressParameter = pivchAddress != null ?
                new ObjectParameter("pivchAddress", pivchAddress) :
                new ObjectParameter("pivchAddress", typeof(string));
    
            var pivchCityParameter = pivchCity != null ?
                new ObjectParameter("pivchCity", pivchCity) :
                new ObjectParameter("pivchCity", typeof(string));
    
            var pivchZipCodeParameter = pivchZipCode != null ?
                new ObjectParameter("pivchZipCode", pivchZipCode) :
                new ObjectParameter("pivchZipCode", typeof(string));
    
            var pivchPhoneParameter = pivchPhone != null ?
                new ObjectParameter("pivchPhone", pivchPhone) :
                new ObjectParameter("pivchPhone", typeof(string));
    
            var pivchFaxParameter = pivchFax != null ?
                new ObjectParameter("pivchFax", pivchFax) :
                new ObjectParameter("pivchFax", typeof(string));
    
            var pivchNPWPParameter = pivchNPWP != null ?
                new ObjectParameter("pivchNPWP", pivchNPWP) :
                new ObjectParameter("pivchNPWP", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGASupplierInsert", povchSupplierCode, pivchSupplierNameParameter, pivchAddressParameter, pivchCityParameter, pivchZipCodeParameter, pivchPhoneParameter, pivchFaxParameter, pivchNPWPParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spGASupplierList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGASupplierList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGASupplierUpdate(string pivchSupplierCode, string pivchSupplierName, string pivchAddress, string pivchCity, string pivchZipCode, string pivchPhone, string pivchFax, string pivchNPWP, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchSupplierCodeParameter = pivchSupplierCode != null ?
                new ObjectParameter("pivchSupplierCode", pivchSupplierCode) :
                new ObjectParameter("pivchSupplierCode", typeof(string));
    
            var pivchSupplierNameParameter = pivchSupplierName != null ?
                new ObjectParameter("pivchSupplierName", pivchSupplierName) :
                new ObjectParameter("pivchSupplierName", typeof(string));
    
            var pivchAddressParameter = pivchAddress != null ?
                new ObjectParameter("pivchAddress", pivchAddress) :
                new ObjectParameter("pivchAddress", typeof(string));
    
            var pivchCityParameter = pivchCity != null ?
                new ObjectParameter("pivchCity", pivchCity) :
                new ObjectParameter("pivchCity", typeof(string));
    
            var pivchZipCodeParameter = pivchZipCode != null ?
                new ObjectParameter("pivchZipCode", pivchZipCode) :
                new ObjectParameter("pivchZipCode", typeof(string));
    
            var pivchPhoneParameter = pivchPhone != null ?
                new ObjectParameter("pivchPhone", pivchPhone) :
                new ObjectParameter("pivchPhone", typeof(string));
    
            var pivchFaxParameter = pivchFax != null ?
                new ObjectParameter("pivchFax", pivchFax) :
                new ObjectParameter("pivchFax", typeof(string));
    
            var pivchNPWPParameter = pivchNPWP != null ?
                new ObjectParameter("pivchNPWP", pivchNPWP) :
                new ObjectParameter("pivchNPWP", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGASupplierUpdate", pivchSupplierCodeParameter, pivchSupplierNameParameter, pivchAddressParameter, pivchCityParameter, pivchZipCodeParameter, pivchPhoneParameter, pivchFaxParameter, pivchNPWPParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGASupplierView_Result> spGASupplierView(string pivchSupplierCode)
        {
            var pivchSupplierCodeParameter = pivchSupplierCode != null ?
                new ObjectParameter("pivchSupplierCode", pivchSupplierCode) :
                new ObjectParameter("pivchSupplierCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGASupplierView_Result>("spGASupplierView", pivchSupplierCodeParameter);
        }
    
        public virtual int spGAVehicleApprovalLog(Nullable<int> piintState, string pivchIDNumber)
        {
            var piintStateParameter = piintState.HasValue ?
                new ObjectParameter("piintState", piintState) :
                new ObjectParameter("piintState", typeof(int));
    
            var pivchIDNumberParameter = pivchIDNumber != null ?
                new ObjectParameter("pivchIDNumber", pivchIDNumber) :
                new ObjectParameter("pivchIDNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleApprovalLog", piintStateParameter, pivchIDNumberParameter);
        }
    
        public virtual int spGAVehicleFuelClaim(Nullable<int> piintTripFuelId, string pivchInputID)
        {
            var piintTripFuelIdParameter = piintTripFuelId.HasValue ?
                new ObjectParameter("piintTripFuelId", piintTripFuelId) :
                new ObjectParameter("piintTripFuelId", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleFuelClaim", piintTripFuelIdParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAVehicleFuelClaimList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleFuelClaimList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAVehicleInsert(string pivchVehicleCode, string pivchGPSCode, string pivchVehicleTypeCode, Nullable<int> piintYear, Nullable<double> pidblKM, Nullable<int> piintFuelId, Nullable<double> pidblFuelCapacity, Nullable<double> pidblFuelRemain, Nullable<int> piintStatus, Nullable<int> piintBranchId, string pivchUsers, string pivchDescription, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            var pivchGPSCodeParameter = pivchGPSCode != null ?
                new ObjectParameter("pivchGPSCode", pivchGPSCode) :
                new ObjectParameter("pivchGPSCode", typeof(string));
    
            var pivchVehicleTypeCodeParameter = pivchVehicleTypeCode != null ?
                new ObjectParameter("pivchVehicleTypeCode", pivchVehicleTypeCode) :
                new ObjectParameter("pivchVehicleTypeCode", typeof(string));
    
            var piintYearParameter = piintYear.HasValue ?
                new ObjectParameter("piintYear", piintYear) :
                new ObjectParameter("piintYear", typeof(int));
    
            var pidblKMParameter = pidblKM.HasValue ?
                new ObjectParameter("pidblKM", pidblKM) :
                new ObjectParameter("pidblKM", typeof(double));
    
            var piintFuelIdParameter = piintFuelId.HasValue ?
                new ObjectParameter("piintFuelId", piintFuelId) :
                new ObjectParameter("piintFuelId", typeof(int));
    
            var pidblFuelCapacityParameter = pidblFuelCapacity.HasValue ?
                new ObjectParameter("pidblFuelCapacity", pidblFuelCapacity) :
                new ObjectParameter("pidblFuelCapacity", typeof(double));
    
            var pidblFuelRemainParameter = pidblFuelRemain.HasValue ?
                new ObjectParameter("pidblFuelRemain", pidblFuelRemain) :
                new ObjectParameter("pidblFuelRemain", typeof(double));
    
            var piintStatusParameter = piintStatus.HasValue ?
                new ObjectParameter("piintStatus", piintStatus) :
                new ObjectParameter("piintStatus", typeof(int));
    
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchUsersParameter = pivchUsers != null ?
                new ObjectParameter("pivchUsers", pivchUsers) :
                new ObjectParameter("pivchUsers", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleInsert", pivchVehicleCodeParameter, pivchGPSCodeParameter, pivchVehicleTypeCodeParameter, piintYearParameter, pidblKMParameter, piintFuelIdParameter, pidblFuelCapacityParameter, pidblFuelRemainParameter, piintStatusParameter, piintBranchIdParameter, pivchUsersParameter, pivchDescriptionParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAVehicleList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAVehicleTripFuelDetailDelete(Nullable<int> piintTripFuelID, string pivchTripCode)
        {
            var piintTripFuelIDParameter = piintTripFuelID.HasValue ?
                new ObjectParameter("piintTripFuelID", piintTripFuelID) :
                new ObjectParameter("piintTripFuelID", typeof(int));
    
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripFuelDetailDelete", piintTripFuelIDParameter, pivchTripCodeParameter);
        }
    
        public virtual int spGAVehicleTripFuelDetailInsert(string pivchTripCode, Nullable<System.DateTime> pidtmBuyDate, Nullable<int> piintFuelId, Nullable<decimal> pidblPrice, Nullable<decimal> pidblTotalExpense, string pivchReceiptNo, string pivchDescription, string pivchInputID)
        {
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            var pidtmBuyDateParameter = pidtmBuyDate.HasValue ?
                new ObjectParameter("pidtmBuyDate", pidtmBuyDate) :
                new ObjectParameter("pidtmBuyDate", typeof(System.DateTime));
    
            var piintFuelIdParameter = piintFuelId.HasValue ?
                new ObjectParameter("piintFuelId", piintFuelId) :
                new ObjectParameter("piintFuelId", typeof(int));
    
            var pidblPriceParameter = pidblPrice.HasValue ?
                new ObjectParameter("pidblPrice", pidblPrice) :
                new ObjectParameter("pidblPrice", typeof(decimal));
    
            var pidblTotalExpenseParameter = pidblTotalExpense.HasValue ?
                new ObjectParameter("pidblTotalExpense", pidblTotalExpense) :
                new ObjectParameter("pidblTotalExpense", typeof(decimal));
    
            var pivchReceiptNoParameter = pivchReceiptNo != null ?
                new ObjectParameter("pivchReceiptNo", pivchReceiptNo) :
                new ObjectParameter("pivchReceiptNo", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripFuelDetailInsert", pivchTripCodeParameter, pidtmBuyDateParameter, piintFuelIdParameter, pidblPriceParameter, pidblTotalExpenseParameter, pivchReceiptNoParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAVehicleTripFuelDetailList(string pivchTripCode, string pivchWhereBy)
        {
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripFuelDetailList", pivchTripCodeParameter, pivchWhereByParameter);
        }
    
        public virtual int spGAVehicleTripFuelDetailUpdate(Nullable<int> piintTripFuelId, string pivchTripCode, Nullable<System.DateTime> pidtmBuyDate, Nullable<int> piintFuelId, Nullable<decimal> pidblPrice, Nullable<decimal> pidblTotalExpense, string pivchReceiptNo, string pivchDescription, string pivchInputID)
        {
            var piintTripFuelIdParameter = piintTripFuelId.HasValue ?
                new ObjectParameter("piintTripFuelId", piintTripFuelId) :
                new ObjectParameter("piintTripFuelId", typeof(int));
    
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            var pidtmBuyDateParameter = pidtmBuyDate.HasValue ?
                new ObjectParameter("pidtmBuyDate", pidtmBuyDate) :
                new ObjectParameter("pidtmBuyDate", typeof(System.DateTime));
    
            var piintFuelIdParameter = piintFuelId.HasValue ?
                new ObjectParameter("piintFuelId", piintFuelId) :
                new ObjectParameter("piintFuelId", typeof(int));
    
            var pidblPriceParameter = pidblPrice.HasValue ?
                new ObjectParameter("pidblPrice", pidblPrice) :
                new ObjectParameter("pidblPrice", typeof(decimal));
    
            var pidblTotalExpenseParameter = pidblTotalExpense.HasValue ?
                new ObjectParameter("pidblTotalExpense", pidblTotalExpense) :
                new ObjectParameter("pidblTotalExpense", typeof(decimal));
    
            var pivchReceiptNoParameter = pivchReceiptNo != null ?
                new ObjectParameter("pivchReceiptNo", pivchReceiptNo) :
                new ObjectParameter("pivchReceiptNo", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripFuelDetailUpdate", piintTripFuelIdParameter, pivchTripCodeParameter, pidtmBuyDateParameter, piintFuelIdParameter, pidblPriceParameter, pidblTotalExpenseParameter, pivchReceiptNoParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAVehicleTripFuelDetailView(Nullable<int> piintTripFuelId, string pivchTripCode)
        {
            var piintTripFuelIdParameter = piintTripFuelId.HasValue ?
                new ObjectParameter("piintTripFuelId", piintTripFuelId) :
                new ObjectParameter("piintTripFuelId", typeof(int));
    
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripFuelDetailView", piintTripFuelIdParameter, pivchTripCodeParameter);
        }
    
        public virtual int spGAVehicleTripGPSClear(string pivchVehicleCode, string pivchInputID)
        {
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripGPSClear", pivchVehicleCodeParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAVehicleTripGPSClearEmpty(Nullable<int> piintUploadId)
        {
            var piintUploadIdParameter = piintUploadId.HasValue ?
                new ObjectParameter("piintUploadId", piintUploadId) :
                new ObjectParameter("piintUploadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripGPSClearEmpty", piintUploadIdParameter);
        }
    
        public virtual int spGAVehicleTripGPSCommit(string pivchVehicleCode, string pivchInputID)
        {
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripGPSCommit", pivchVehicleCodeParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAVehicleTripGPSInsert(ObjectParameter pointUploadId, string pivchVehicleCode, string pivchFileName, string pivchNewFileName, string pivchInputID)
        {
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            var pivchFileNameParameter = pivchFileName != null ?
                new ObjectParameter("pivchFileName", pivchFileName) :
                new ObjectParameter("pivchFileName", typeof(string));
    
            var pivchNewFileNameParameter = pivchNewFileName != null ?
                new ObjectParameter("pivchNewFileName", pivchNewFileName) :
                new ObjectParameter("pivchNewFileName", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripGPSInsert", pointUploadId, pivchVehicleCodeParameter, pivchFileNameParameter, pivchNewFileNameParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAVehicleTripGPSList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripGPSList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAVehicleTripGPSTempList(string pivchVehicleCode, string pivchInputID, string pivchWhereBy)
        {
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripGPSTempList", pivchVehicleCodeParameter, pivchInputIDParameter, pivchWhereByParameter);
        }
    
        public virtual int spGAVehicleTripInsert(ObjectParameter povchTripCode, string pivchTripPIC, Nullable<System.DateTime> pidtmTripDate, string pivchTripTime, string pivchVehicleCode, string pivchStartSite, string pivchDescription, string pivchInputID)
        {
            var pivchTripPICParameter = pivchTripPIC != null ?
                new ObjectParameter("pivchTripPIC", pivchTripPIC) :
                new ObjectParameter("pivchTripPIC", typeof(string));
    
            var pidtmTripDateParameter = pidtmTripDate.HasValue ?
                new ObjectParameter("pidtmTripDate", pidtmTripDate) :
                new ObjectParameter("pidtmTripDate", typeof(System.DateTime));
    
            var pivchTripTimeParameter = pivchTripTime != null ?
                new ObjectParameter("pivchTripTime", pivchTripTime) :
                new ObjectParameter("pivchTripTime", typeof(string));
    
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            var pivchStartSiteParameter = pivchStartSite != null ?
                new ObjectParameter("pivchStartSite", pivchStartSite) :
                new ObjectParameter("pivchStartSite", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripInsert", povchTripCode, pivchTripPICParameter, pidtmTripDateParameter, pivchTripTimeParameter, pivchVehicleCodeParameter, pivchStartSiteParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAVehicleTripList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAVehicleTripSiteDetailDelete(Nullable<int> piintTripSiteID, string pivchTripCode)
        {
            var piintTripSiteIDParameter = piintTripSiteID.HasValue ?
                new ObjectParameter("piintTripSiteID", piintTripSiteID) :
                new ObjectParameter("piintTripSiteID", typeof(int));
    
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripSiteDetailDelete", piintTripSiteIDParameter, pivchTripCodeParameter);
        }
    
        public virtual int spGAVehicleTripSiteDetailInsert(string pivchTripCode, string pivchName, string pivchLocation, string pivchCity, string pivchPhone, Nullable<int> piintSiteStatus, Nullable<double> pidblSiteKM, Nullable<System.DateTime> pidtmSiteDate, string pivchSiteTime, string pivchDescription, string pivchInputID)
        {
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            var pivchNameParameter = pivchName != null ?
                new ObjectParameter("pivchName", pivchName) :
                new ObjectParameter("pivchName", typeof(string));
    
            var pivchLocationParameter = pivchLocation != null ?
                new ObjectParameter("pivchLocation", pivchLocation) :
                new ObjectParameter("pivchLocation", typeof(string));
    
            var pivchCityParameter = pivchCity != null ?
                new ObjectParameter("pivchCity", pivchCity) :
                new ObjectParameter("pivchCity", typeof(string));
    
            var pivchPhoneParameter = pivchPhone != null ?
                new ObjectParameter("pivchPhone", pivchPhone) :
                new ObjectParameter("pivchPhone", typeof(string));
    
            var piintSiteStatusParameter = piintSiteStatus.HasValue ?
                new ObjectParameter("piintSiteStatus", piintSiteStatus) :
                new ObjectParameter("piintSiteStatus", typeof(int));
    
            var pidblSiteKMParameter = pidblSiteKM.HasValue ?
                new ObjectParameter("pidblSiteKM", pidblSiteKM) :
                new ObjectParameter("pidblSiteKM", typeof(double));
    
            var pidtmSiteDateParameter = pidtmSiteDate.HasValue ?
                new ObjectParameter("pidtmSiteDate", pidtmSiteDate) :
                new ObjectParameter("pidtmSiteDate", typeof(System.DateTime));
    
            var pivchSiteTimeParameter = pivchSiteTime != null ?
                new ObjectParameter("pivchSiteTime", pivchSiteTime) :
                new ObjectParameter("pivchSiteTime", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripSiteDetailInsert", pivchTripCodeParameter, pivchNameParameter, pivchLocationParameter, pivchCityParameter, pivchPhoneParameter, piintSiteStatusParameter, pidblSiteKMParameter, pidtmSiteDateParameter, pivchSiteTimeParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAVehicleTripSiteDetailList(string pivchTripCode, string pivchWhereBy)
        {
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripSiteDetailList", pivchTripCodeParameter, pivchWhereByParameter);
        }
    
        public virtual int spGAVehicleTripSiteDetailUpdate(Nullable<int> piintTripSiteId, string pivchTripCode, string pivchName, string pivchLocation, string pivchCity, string pivchPhone, Nullable<int> piintSiteStatus, Nullable<double> pidblSiteKM, Nullable<System.DateTime> pidtmSiteDate, string pivchSiteTime, string pivchDescription, string pivchInputID)
        {
            var piintTripSiteIdParameter = piintTripSiteId.HasValue ?
                new ObjectParameter("piintTripSiteId", piintTripSiteId) :
                new ObjectParameter("piintTripSiteId", typeof(int));
    
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            var pivchNameParameter = pivchName != null ?
                new ObjectParameter("pivchName", pivchName) :
                new ObjectParameter("pivchName", typeof(string));
    
            var pivchLocationParameter = pivchLocation != null ?
                new ObjectParameter("pivchLocation", pivchLocation) :
                new ObjectParameter("pivchLocation", typeof(string));
    
            var pivchCityParameter = pivchCity != null ?
                new ObjectParameter("pivchCity", pivchCity) :
                new ObjectParameter("pivchCity", typeof(string));
    
            var pivchPhoneParameter = pivchPhone != null ?
                new ObjectParameter("pivchPhone", pivchPhone) :
                new ObjectParameter("pivchPhone", typeof(string));
    
            var piintSiteStatusParameter = piintSiteStatus.HasValue ?
                new ObjectParameter("piintSiteStatus", piintSiteStatus) :
                new ObjectParameter("piintSiteStatus", typeof(int));
    
            var pidblSiteKMParameter = pidblSiteKM.HasValue ?
                new ObjectParameter("pidblSiteKM", pidblSiteKM) :
                new ObjectParameter("pidblSiteKM", typeof(double));
    
            var pidtmSiteDateParameter = pidtmSiteDate.HasValue ?
                new ObjectParameter("pidtmSiteDate", pidtmSiteDate) :
                new ObjectParameter("pidtmSiteDate", typeof(System.DateTime));
    
            var pivchSiteTimeParameter = pivchSiteTime != null ?
                new ObjectParameter("pivchSiteTime", pivchSiteTime) :
                new ObjectParameter("pivchSiteTime", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripSiteDetailUpdate", piintTripSiteIdParameter, pivchTripCodeParameter, pivchNameParameter, pivchLocationParameter, pivchCityParameter, pivchPhoneParameter, piintSiteStatusParameter, pidblSiteKMParameter, pidtmSiteDateParameter, pivchSiteTimeParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAVehicleTripSiteDetailView(Nullable<int> piintTripSiteId, string pivchTripCode)
        {
            var piintTripSiteIdParameter = piintTripSiteId.HasValue ?
                new ObjectParameter("piintTripSiteId", piintTripSiteId) :
                new ObjectParameter("piintTripSiteId", typeof(int));
    
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripSiteDetailView", piintTripSiteIdParameter, pivchTripCodeParameter);
        }
    
        public virtual int spGAVehicleTripSiteViewBefore(string pivchTripCode, Nullable<int> piintTripSiteId)
        {
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            var piintTripSiteIdParameter = piintTripSiteId.HasValue ?
                new ObjectParameter("piintTripSiteId", piintTripSiteId) :
                new ObjectParameter("piintTripSiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripSiteViewBefore", pivchTripCodeParameter, piintTripSiteIdParameter);
        }
    
        public virtual int spGAVehicleTripUpdate(string pivchTripCode, string pivchTripPIC, Nullable<System.DateTime> pidtmTripDate, string pivchTripTime, string pivchVehicleCode, string pivchStartSite, string pivchDescription, string pivchInputID)
        {
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            var pivchTripPICParameter = pivchTripPIC != null ?
                new ObjectParameter("pivchTripPIC", pivchTripPIC) :
                new ObjectParameter("pivchTripPIC", typeof(string));
    
            var pidtmTripDateParameter = pidtmTripDate.HasValue ?
                new ObjectParameter("pidtmTripDate", pidtmTripDate) :
                new ObjectParameter("pidtmTripDate", typeof(System.DateTime));
    
            var pivchTripTimeParameter = pivchTripTime != null ?
                new ObjectParameter("pivchTripTime", pivchTripTime) :
                new ObjectParameter("pivchTripTime", typeof(string));
    
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            var pivchStartSiteParameter = pivchStartSite != null ?
                new ObjectParameter("pivchStartSite", pivchStartSite) :
                new ObjectParameter("pivchStartSite", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripUpdate", pivchTripCodeParameter, pivchTripPICParameter, pidtmTripDateParameter, pivchTripTimeParameter, pivchVehicleCodeParameter, pivchStartSiteParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAVehicleTripUpdateStatus(string pivchTripCode, string pivchStatus, Nullable<double> pidblEndFuel, string pivchDescription, Nullable<int> piintApprovalState, Nullable<int> piintToState, string pivchInputID)
        {
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            var pivchStatusParameter = pivchStatus != null ?
                new ObjectParameter("pivchStatus", pivchStatus) :
                new ObjectParameter("pivchStatus", typeof(string));
    
            var pidblEndFuelParameter = pidblEndFuel.HasValue ?
                new ObjectParameter("pidblEndFuel", pidblEndFuel) :
                new ObjectParameter("pidblEndFuel", typeof(double));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var piintApprovalStateParameter = piintApprovalState.HasValue ?
                new ObjectParameter("piintApprovalState", piintApprovalState) :
                new ObjectParameter("piintApprovalState", typeof(int));
    
            var piintToStateParameter = piintToState.HasValue ?
                new ObjectParameter("piintToState", piintToState) :
                new ObjectParameter("piintToState", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripUpdateStatus", pivchTripCodeParameter, pivchStatusParameter, pidblEndFuelParameter, pivchDescriptionParameter, piintApprovalStateParameter, piintToStateParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAVehicleTripView(string pivchTripCode)
        {
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTripView", pivchTripCodeParameter);
        }
    
        public virtual int spGAVehicleTypeInsert(string pivchVehicleTypeCode, string pivchTypeName, Nullable<int> piintCategory, Nullable<double> pidblRatioInefficient, Nullable<double> pidblRatioNormalMin, Nullable<double> pidblRatioNormalMax, Nullable<double> pidblRatioEfficient, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchVehicleTypeCodeParameter = pivchVehicleTypeCode != null ?
                new ObjectParameter("pivchVehicleTypeCode", pivchVehicleTypeCode) :
                new ObjectParameter("pivchVehicleTypeCode", typeof(string));
    
            var pivchTypeNameParameter = pivchTypeName != null ?
                new ObjectParameter("pivchTypeName", pivchTypeName) :
                new ObjectParameter("pivchTypeName", typeof(string));
    
            var piintCategoryParameter = piintCategory.HasValue ?
                new ObjectParameter("piintCategory", piintCategory) :
                new ObjectParameter("piintCategory", typeof(int));
    
            var pidblRatioInefficientParameter = pidblRatioInefficient.HasValue ?
                new ObjectParameter("pidblRatioInefficient", pidblRatioInefficient) :
                new ObjectParameter("pidblRatioInefficient", typeof(double));
    
            var pidblRatioNormalMinParameter = pidblRatioNormalMin.HasValue ?
                new ObjectParameter("pidblRatioNormalMin", pidblRatioNormalMin) :
                new ObjectParameter("pidblRatioNormalMin", typeof(double));
    
            var pidblRatioNormalMaxParameter = pidblRatioNormalMax.HasValue ?
                new ObjectParameter("pidblRatioNormalMax", pidblRatioNormalMax) :
                new ObjectParameter("pidblRatioNormalMax", typeof(double));
    
            var pidblRatioEfficientParameter = pidblRatioEfficient.HasValue ?
                new ObjectParameter("pidblRatioEfficient", pidblRatioEfficient) :
                new ObjectParameter("pidblRatioEfficient", typeof(double));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTypeInsert", pivchVehicleTypeCodeParameter, pivchTypeNameParameter, piintCategoryParameter, pidblRatioInefficientParameter, pidblRatioNormalMinParameter, pidblRatioNormalMaxParameter, pidblRatioEfficientParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAVehicleTypeList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTypeList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spGAVehicleTypeUpdate(string pivchVehicleTypeCode, string pivchTypeName, Nullable<int> piintCategory, Nullable<double> pidblRatioInefficient, Nullable<double> pidblRatioNormalMin, Nullable<double> pidblRatioNormalMax, Nullable<double> pidblRatioEfficient, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchVehicleTypeCodeParameter = pivchVehicleTypeCode != null ?
                new ObjectParameter("pivchVehicleTypeCode", pivchVehicleTypeCode) :
                new ObjectParameter("pivchVehicleTypeCode", typeof(string));
    
            var pivchTypeNameParameter = pivchTypeName != null ?
                new ObjectParameter("pivchTypeName", pivchTypeName) :
                new ObjectParameter("pivchTypeName", typeof(string));
    
            var piintCategoryParameter = piintCategory.HasValue ?
                new ObjectParameter("piintCategory", piintCategory) :
                new ObjectParameter("piintCategory", typeof(int));
    
            var pidblRatioInefficientParameter = pidblRatioInefficient.HasValue ?
                new ObjectParameter("pidblRatioInefficient", pidblRatioInefficient) :
                new ObjectParameter("pidblRatioInefficient", typeof(double));
    
            var pidblRatioNormalMinParameter = pidblRatioNormalMin.HasValue ?
                new ObjectParameter("pidblRatioNormalMin", pidblRatioNormalMin) :
                new ObjectParameter("pidblRatioNormalMin", typeof(double));
    
            var pidblRatioNormalMaxParameter = pidblRatioNormalMax.HasValue ?
                new ObjectParameter("pidblRatioNormalMax", pidblRatioNormalMax) :
                new ObjectParameter("pidblRatioNormalMax", typeof(double));
    
            var pidblRatioEfficientParameter = pidblRatioEfficient.HasValue ?
                new ObjectParameter("pidblRatioEfficient", pidblRatioEfficient) :
                new ObjectParameter("pidblRatioEfficient", typeof(double));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTypeUpdate", pivchVehicleTypeCodeParameter, pivchTypeNameParameter, piintCategoryParameter, pidblRatioInefficientParameter, pidblRatioNormalMinParameter, pidblRatioNormalMaxParameter, pidblRatioEfficientParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAVehicleTypeView(string pivchVehicleTypeCode)
        {
            var pivchVehicleTypeCodeParameter = pivchVehicleTypeCode != null ?
                new ObjectParameter("pivchVehicleTypeCode", pivchVehicleTypeCode) :
                new ObjectParameter("pivchVehicleTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleTypeView", pivchVehicleTypeCodeParameter);
        }
    
        public virtual int spGAVehicleUpdate(string pivchVehicleCode, string pivchGPSCode, string pivchVehicleTypeCode, Nullable<int> piintYear, Nullable<double> pidblKM, Nullable<int> piintFuelId, Nullable<double> pidblFuelCapacity, Nullable<double> pidblFuelRemain, Nullable<int> piintStatus, Nullable<int> piintBranchId, string pivchUsers, string pivchDescription, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            var pivchGPSCodeParameter = pivchGPSCode != null ?
                new ObjectParameter("pivchGPSCode", pivchGPSCode) :
                new ObjectParameter("pivchGPSCode", typeof(string));
    
            var pivchVehicleTypeCodeParameter = pivchVehicleTypeCode != null ?
                new ObjectParameter("pivchVehicleTypeCode", pivchVehicleTypeCode) :
                new ObjectParameter("pivchVehicleTypeCode", typeof(string));
    
            var piintYearParameter = piintYear.HasValue ?
                new ObjectParameter("piintYear", piintYear) :
                new ObjectParameter("piintYear", typeof(int));
    
            var pidblKMParameter = pidblKM.HasValue ?
                new ObjectParameter("pidblKM", pidblKM) :
                new ObjectParameter("pidblKM", typeof(double));
    
            var piintFuelIdParameter = piintFuelId.HasValue ?
                new ObjectParameter("piintFuelId", piintFuelId) :
                new ObjectParameter("piintFuelId", typeof(int));
    
            var pidblFuelCapacityParameter = pidblFuelCapacity.HasValue ?
                new ObjectParameter("pidblFuelCapacity", pidblFuelCapacity) :
                new ObjectParameter("pidblFuelCapacity", typeof(double));
    
            var pidblFuelRemainParameter = pidblFuelRemain.HasValue ?
                new ObjectParameter("pidblFuelRemain", pidblFuelRemain) :
                new ObjectParameter("pidblFuelRemain", typeof(double));
    
            var piintStatusParameter = piintStatus.HasValue ?
                new ObjectParameter("piintStatus", piintStatus) :
                new ObjectParameter("piintStatus", typeof(int));
    
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchUsersParameter = pivchUsers != null ?
                new ObjectParameter("pivchUsers", pivchUsers) :
                new ObjectParameter("pivchUsers", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleUpdate", pivchVehicleCodeParameter, pivchGPSCodeParameter, pivchVehicleTypeCodeParameter, piintYearParameter, pidblKMParameter, piintFuelIdParameter, pidblFuelCapacityParameter, pidblFuelRemainParameter, piintStatusParameter, piintBranchIdParameter, pivchUsersParameter, pivchDescriptionParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual int spGAVehicleView(string pivchVehicleCode)
        {
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAVehicleView", pivchVehicleCodeParameter);
        }
    
        public virtual ObjectResult<spGetApprovalState_Result> spGetApprovalState(Nullable<int> piintMenuId, Nullable<int> piintState, string pivchUserId, Nullable<int> piintDataBranchId)
        {
            var piintMenuIdParameter = piintMenuId.HasValue ?
                new ObjectParameter("piintMenuId", piintMenuId) :
                new ObjectParameter("piintMenuId", typeof(int));
    
            var piintStateParameter = piintState.HasValue ?
                new ObjectParameter("piintState", piintState) :
                new ObjectParameter("piintState", typeof(int));
    
            var pivchUserIdParameter = pivchUserId != null ?
                new ObjectParameter("pivchUserId", pivchUserId) :
                new ObjectParameter("pivchUserId", typeof(string));
    
            var piintDataBranchIdParameter = piintDataBranchId.HasValue ?
                new ObjectParameter("piintDataBranchId", piintDataBranchId) :
                new ObjectParameter("piintDataBranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetApprovalState_Result>("spGetApprovalState", piintMenuIdParameter, piintStateParameter, pivchUserIdParameter, piintDataBranchIdParameter);
        }
    
        public virtual int spGetBankGroupToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetBankGroupToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<spGetBranch_Result> spGetBranch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetBranch_Result>("spGetBranch");
        }
    
        public virtual int spGetBranchDomainToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetBranchDomainToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spGetBranchTipe(Nullable<int> piintBranchId)
        {
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetBranchTipe", piintBranchIdParameter);
        }
    
        public virtual ObjectResult<GetBranchToCombo> spGetBranchToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBranchToCombo>("spGetBranchToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetBranchWithType(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetBranchWithType", pivchWhereParameter);
        }
    
        public virtual int spGetCurrencyToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetCurrencyToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<GetDepartmentToCombo_Result> spGetDepartementToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDepartmentToCombo_Result>("spGetDepartementToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetGABranchDeliveryToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetGABranchDeliveryToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetGAFuelToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetGAFuelToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetGAItemCategoryToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetGAItemCategoryToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetGAItemGroupToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetGAItemGroupToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetGAItemTypeToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetGAItemTypeToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetGAPurchaseOrderToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetGAPurchaseOrderToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetGAPurchaseRequestOrderToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetGAPurchaseRequestOrderToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetGASupplierRequestToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetGASupplierRequestToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetGASupplierToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetGASupplierToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetGAVehicleToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetGAVehicleToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetGAVehicleTypeToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetGAVehicleTypeToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetHRCurrentJobEmployee(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetHRCurrentJobEmployee", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<spGetHRJobType_Result> spGetHRJobType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetHRJobType_Result>("spGetHRJobType");
        }
    
        public virtual ObjectResult<spGetJobTypeToCombo_Result> spGetHRJobTypeToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetJobTypeToCombo_Result>("spGetHRJobTypeToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<spGetHRMsApplicationToCombo_Result> spGetHRMsApplicationToCombo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetHRMsApplicationToCombo_Result>("spGetHRMsApplicationToCombo");
        }
    
        public virtual ObjectResult<spGetHRMsAutoloanDBToCombo_Result> spGetHRMsAutoloanDBToCombo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetHRMsAutoloanDBToCombo_Result>("spGetHRMsAutoloanDBToCombo");
        }
    
        public virtual ObjectResult<spGetHRMsLocationToCombo_Result> spGetHRMsLocationToCombo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetHRMsLocationToCombo_Result>("spGetHRMsLocationToCombo");
        }
    
        public virtual int spGetHROldJobEmployee(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetHROldJobEmployee", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<spGetHRPrivilege_Result> spGetHRPrivilege()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetHRPrivilege_Result>("spGetHRPrivilege");
        }
    
        public virtual ObjectResult<spGetHRPrivilegeToCombo_Result> spGetHRPrivilegeToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetHRPrivilegeToCombo_Result>("spGetHRPrivilegeToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<spGetITConditionToCombo> spGetITConditionToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetITConditionToCombo>("spGetITConditionToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<spGetITItemByBranchTypeToCombo_Result> spGetITItemByBranchTypeToCombo(Nullable<int> piintBranchId, string pivchItemTypeCode)
        {
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetITItemByBranchTypeToCombo_Result>("spGetITItemByBranchTypeToCombo", piintBranchIdParameter, pivchItemTypeCodeParameter);
        }
    
        public virtual int spGetITItemRepairByOutCodeToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetITItemRepairByOutCodeToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<spGetITItemTransByBranchTypeToCombo_Result> spGetITItemTransByBranchTypeToCombo(string pivchITItemTransCode, string pivchItemTypeCode, string pivchITItemCode)
        {
            var pivchITItemTransCodeParameter = pivchITItemTransCode != null ?
                new ObjectParameter("pivchITItemTransCode", pivchITItemTransCode) :
                new ObjectParameter("pivchITItemTransCode", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pivchITItemCodeParameter = pivchITItemCode != null ?
                new ObjectParameter("pivchITItemCode", pivchITItemCode) :
                new ObjectParameter("pivchITItemCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetITItemTransByBranchTypeToCombo_Result>("spGetITItemTransByBranchTypeToCombo", pivchITItemTransCodeParameter, pivchItemTypeCodeParameter, pivchITItemCodeParameter);
        }
    
        public virtual ObjectResult<GetITItemTypeToCombo> spGetITItemTypeToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetITItemTypeToCombo>("spGetITItemTypeToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<GetITProblemTypeToCombo> spGetITProblemTypeToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetITProblemTypeToCombo>("spGetITProblemTypeToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<spGetITSupplierToCombo_Result> spGetITSupplierToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetITSupplierToCombo_Result>("spGetITSupplierToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<spGetLookupDetailInfo_Result> spGetLookupDetailInfo(string pivchLookupId)
        {
            var pivchLookupIdParameter = pivchLookupId != null ?
                new ObjectParameter("pivchLookupId", pivchLookupId) :
                new ObjectParameter("pivchLookupId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetLookupDetailInfo_Result>("spGetLookupDetailInfo", pivchLookupIdParameter);
        }
    
        public virtual ObjectResult<spGetLookupInfo_Result> spGetLookupInfo(string pivchLookupId)
        {
            var pivchLookupIdParameter = pivchLookupId != null ?
                new ObjectParameter("pivchLookupId", pivchLookupId) :
                new ObjectParameter("pivchLookupId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetLookupInfo_Result>("spGetLookupInfo", pivchLookupIdParameter);
        }
    
        public virtual ObjectResult<spGetMappingApprovalEmailCC_Result> spGetMappingApprovalEmailCC(Nullable<int> piintMenuId, Nullable<int> piintState, Nullable<int> piintBranchId, string pivchDepartementCode)
        {
            var piintMenuIdParameter = piintMenuId.HasValue ?
                new ObjectParameter("piintMenuId", piintMenuId) :
                new ObjectParameter("piintMenuId", typeof(int));
    
            var piintStateParameter = piintState.HasValue ?
                new ObjectParameter("piintState", piintState) :
                new ObjectParameter("piintState", typeof(int));
    
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetMappingApprovalEmailCC_Result>("spGetMappingApprovalEmailCC", piintMenuIdParameter, piintStateParameter, piintBranchIdParameter, pivchDepartementCodeParameter);
        }
    
        public virtual ObjectResult<spGetMappingApprovalEmailTo_Result> spGetMappingApprovalEmailTo(Nullable<int> piintMenuId, Nullable<int> piintState, Nullable<int> piintBranchId, string pivchDepartementCode)
        {
            var piintMenuIdParameter = piintMenuId.HasValue ?
                new ObjectParameter("piintMenuId", piintMenuId) :
                new ObjectParameter("piintMenuId", typeof(int));
    
            var piintStateParameter = piintState.HasValue ?
                new ObjectParameter("piintState", piintState) :
                new ObjectParameter("piintState", typeof(int));
    
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetMappingApprovalEmailTo_Result>("spGetMappingApprovalEmailTo", piintMenuIdParameter, piintStateParameter, piintBranchIdParameter, pivchDepartementCodeParameter);
        }
    
        public virtual ObjectResult<GetMappingUserToCombo> spGetMappingUsersToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMappingUserToCombo>("spGetMappingUsersToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetMeasurementToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetMeasurementToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetMenuPrivilegeAll(string privCode)
        {
            var privCodeParameter = privCode != null ?
                new ObjectParameter("PrivCode", privCode) :
                new ObjectParameter("PrivCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetMenuPrivilegeAll", privCodeParameter);
        }
    
        public virtual int spGetMenuToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetMenuToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<spGetMenuUsers_Result> spGetMenuUsers(string pivchUserId)
        {
            var pivchUserIdParameter = pivchUserId != null ?
                new ObjectParameter("pivchUserId", pivchUserId) :
                new ObjectParameter("pivchUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetMenuUsers_Result>("spGetMenuUsers", pivchUserIdParameter);
        }
    
        public virtual ObjectResult<GetMenuResult> spGetParamFieldToCombo(string pivchMenuID, string pivchState)
        {
            var pivchMenuIDParameter = pivchMenuID != null ?
                new ObjectParameter("pivchMenuID", pivchMenuID) :
                new ObjectParameter("pivchMenuID", typeof(string));
    
            var pivchStateParameter = pivchState != null ?
                new ObjectParameter("pivchState", pivchState) :
                new ObjectParameter("pivchState", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMenuResult>("spGetParamFieldToCombo", pivchMenuIDParameter, pivchStateParameter);
        }
    
        public virtual ObjectResult<spGetParamValue_Result> spGetParamValue(string pivchPrmCode, string pivchPrmCondition)
        {
            var pivchPrmCodeParameter = pivchPrmCode != null ?
                new ObjectParameter("pivchPrmCode", pivchPrmCode) :
                new ObjectParameter("pivchPrmCode", typeof(string));
    
            var pivchPrmConditionParameter = pivchPrmCondition != null ?
                new ObjectParameter("pivchPrmCondition", pivchPrmCondition) :
                new ObjectParameter("pivchPrmCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetParamValue_Result>("spGetParamValue", pivchPrmCodeParameter, pivchPrmConditionParameter);
        }
    
        public virtual ObjectResult<spGetParamValueByGroup_Result> spGetParamValueByGroup(string pivchPrmCode, string pivchPrmGroup)
        {
            var pivchPrmCodeParameter = pivchPrmCode != null ?
                new ObjectParameter("pivchPrmCode", pivchPrmCode) :
                new ObjectParameter("pivchPrmCode", typeof(string));
    
            var pivchPrmGroupParameter = pivchPrmGroup != null ?
                new ObjectParameter("pivchPrmGroup", pivchPrmGroup) :
                new ObjectParameter("pivchPrmGroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetParamValueByGroup_Result>("spGetParamValueByGroup", pivchPrmCodeParameter, pivchPrmGroupParameter);
        }
    
        public virtual int spGetPKPSetting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetPKPSetting");
        }
    
        public virtual ObjectResult<GetPrevilegeToCombo> spGetPrivilegeToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPrevilegeToCombo>("spGetPrivilegeToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetRefundRecipientsSupplierToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetRefundRecipientsSupplierToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<spGetSbp_Result> spGetSbp(string branchParent)
        {
            var branchParentParameter = branchParent != null ?
                new ObjectParameter("BranchParent", branchParent) :
                new ObjectParameter("BranchParent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSbp_Result>("spGetSbp", branchParentParameter);
        }
    
        public virtual ObjectResult<spGetSbpAll_Result> spGetSbpAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSbpAll_Result>("spGetSbpAll");
        }
    
        public virtual ObjectResult<spGetTaxSetting_Result> spGetTaxSetting(string wHType)
        {
            var wHTypeParameter = wHType != null ?
                new ObjectParameter("WHType", wHType) :
                new ObjectParameter("WHType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetTaxSetting_Result>("spGetTaxSetting", wHTypeParameter);
        }
    
        public virtual int spGetUserByPrivilegeToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetUserByPrivilegeToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<spGetUserEmail_Result> spGetUserEmail(string pivchUserId)
        {
            var pivchUserIdParameter = pivchUserId != null ?
                new ObjectParameter("pivchUserId", pivchUserId) :
                new ObjectParameter("pivchUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUserEmail_Result>("spGetUserEmail", pivchUserIdParameter);
        }
    
        public virtual ObjectResult<spGetUserId_Result> spGetUserId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUserId_Result>("spGetUserId");
        }
    
        public virtual ObjectResult<spGetUserInfo_Result> spGetUserInfo(string pivchUserId, Nullable<int> piintMenuId)
        {
            var pivchUserIdParameter = pivchUserId != null ?
                new ObjectParameter("pivchUserId", pivchUserId) :
                new ObjectParameter("pivchUserId", typeof(string));
    
            var piintMenuIdParameter = piintMenuId.HasValue ?
                new ObjectParameter("piintMenuId", piintMenuId) :
                new ObjectParameter("piintMenuId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUserInfo_Result>("spGetUserInfo", pivchUserIdParameter, piintMenuIdParameter);
        }
    
        public virtual ObjectResult<spGetUserLogon_Result> spGetUserLogon(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUserLogon_Result>("spGetUserLogon", userIdParameter);
        }
    
        public virtual int spGetUserToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetUserToCombo", pivchWhereParameter);
        }
    
        public virtual int spGetWorkflowModulToCombo(string pivchWhere)
        {
            var pivchWhereParameter = pivchWhere != null ?
                new ObjectParameter("pivchWhere", pivchWhere) :
                new ObjectParameter("pivchWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetWorkflowModulToCombo", pivchWhereParameter);
        }
    
        public virtual ObjectResult<spHRAccessIdAppForRequestList_Result> spHRAccessIdAppForRequestList(string pivchDeleteRequestID)
        {
            var pivchDeleteRequestIDParameter = pivchDeleteRequestID != null ?
                new ObjectParameter("pivchDeleteRequestID", pivchDeleteRequestID) :
                new ObjectParameter("pivchDeleteRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHRAccessIdAppForRequestList_Result>("spHRAccessIdAppForRequestList", pivchDeleteRequestIDParameter);
        }
    
        public virtual int spHRAddUserRequestDetailDelete(string pivchAddRequestDetailID, string pivchAddRequestID)
        {
            var pivchAddRequestDetailIDParameter = pivchAddRequestDetailID != null ?
                new ObjectParameter("pivchAddRequestDetailID", pivchAddRequestDetailID) :
                new ObjectParameter("pivchAddRequestDetailID", typeof(string));
    
            var pivchAddRequestIDParameter = pivchAddRequestID != null ?
                new ObjectParameter("pivchAddRequestID", pivchAddRequestID) :
                new ObjectParameter("pivchAddRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRAddUserRequestDetailDelete", pivchAddRequestDetailIDParameter, pivchAddRequestIDParameter);
        }
    
        public virtual int spHRAddUserRequestDetailInsert(string pivchAddRequestID, string pivchAppCode, string pivchLocationCode, Nullable<int> piintAutoDBId, string pivchInputID)
        {
            var pivchAddRequestIDParameter = pivchAddRequestID != null ?
                new ObjectParameter("pivchAddRequestID", pivchAddRequestID) :
                new ObjectParameter("pivchAddRequestID", typeof(string));
    
            var pivchAppCodeParameter = pivchAppCode != null ?
                new ObjectParameter("pivchAppCode", pivchAppCode) :
                new ObjectParameter("pivchAppCode", typeof(string));
    
            var pivchLocationCodeParameter = pivchLocationCode != null ?
                new ObjectParameter("pivchLocationCode", pivchLocationCode) :
                new ObjectParameter("pivchLocationCode", typeof(string));
    
            var piintAutoDBIdParameter = piintAutoDBId.HasValue ?
                new ObjectParameter("piintAutoDBId", piintAutoDBId) :
                new ObjectParameter("piintAutoDBId", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRAddUserRequestDetailInsert", pivchAddRequestIDParameter, pivchAppCodeParameter, pivchLocationCodeParameter, piintAutoDBIdParameter, pivchInputIDParameter);
        }
    
        public virtual int spHRAddUserRequestDetailList(string pivchAddRequestID)
        {
            var pivchAddRequestIDParameter = pivchAddRequestID != null ?
                new ObjectParameter("pivchAddRequestID", pivchAddRequestID) :
                new ObjectParameter("pivchAddRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRAddUserRequestDetailList", pivchAddRequestIDParameter);
        }
    
        public virtual int spHRAddUserRequestDetailSaveAccessId(string pivchAddRequestDetailID, string pivchAddRequestID, string pivchAccessId, string pivchInputID)
        {
            var pivchAddRequestDetailIDParameter = pivchAddRequestDetailID != null ?
                new ObjectParameter("pivchAddRequestDetailID", pivchAddRequestDetailID) :
                new ObjectParameter("pivchAddRequestDetailID", typeof(string));
    
            var pivchAddRequestIDParameter = pivchAddRequestID != null ?
                new ObjectParameter("pivchAddRequestID", pivchAddRequestID) :
                new ObjectParameter("pivchAddRequestID", typeof(string));
    
            var pivchAccessIdParameter = pivchAccessId != null ?
                new ObjectParameter("pivchAccessId", pivchAccessId) :
                new ObjectParameter("pivchAccessId", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRAddUserRequestDetailSaveAccessId", pivchAddRequestDetailIDParameter, pivchAddRequestIDParameter, pivchAccessIdParameter, pivchInputIDParameter);
        }
    
        public virtual int spHRAddUserRequestDetailUpdate(string pivchAddRequestDetailID, string pivchAddRequestID, string pivchAppCode, string pivchLocationCode, Nullable<int> piintAutoDBId, string pivchInputID)
        {
            var pivchAddRequestDetailIDParameter = pivchAddRequestDetailID != null ?
                new ObjectParameter("pivchAddRequestDetailID", pivchAddRequestDetailID) :
                new ObjectParameter("pivchAddRequestDetailID", typeof(string));
    
            var pivchAddRequestIDParameter = pivchAddRequestID != null ?
                new ObjectParameter("pivchAddRequestID", pivchAddRequestID) :
                new ObjectParameter("pivchAddRequestID", typeof(string));
    
            var pivchAppCodeParameter = pivchAppCode != null ?
                new ObjectParameter("pivchAppCode", pivchAppCode) :
                new ObjectParameter("pivchAppCode", typeof(string));
    
            var pivchLocationCodeParameter = pivchLocationCode != null ?
                new ObjectParameter("pivchLocationCode", pivchLocationCode) :
                new ObjectParameter("pivchLocationCode", typeof(string));
    
            var piintAutoDBIdParameter = piintAutoDBId.HasValue ?
                new ObjectParameter("piintAutoDBId", piintAutoDBId) :
                new ObjectParameter("piintAutoDBId", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRAddUserRequestDetailUpdate", pivchAddRequestDetailIDParameter, pivchAddRequestIDParameter, pivchAppCodeParameter, pivchLocationCodeParameter, piintAutoDBIdParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spHRAddUserRequestDetailView_Result> spHRAddUserRequestDetailView(string pivchAddRequestDetailID, string pivchAddRequestID)
        {
            var pivchAddRequestDetailIDParameter = pivchAddRequestDetailID != null ?
                new ObjectParameter("pivchAddRequestDetailID", pivchAddRequestDetailID) :
                new ObjectParameter("pivchAddRequestDetailID", typeof(string));
    
            var pivchAddRequestIDParameter = pivchAddRequestID != null ?
                new ObjectParameter("pivchAddRequestID", pivchAddRequestID) :
                new ObjectParameter("pivchAddRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHRAddUserRequestDetailView_Result>("spHRAddUserRequestDetailView", pivchAddRequestDetailIDParameter, pivchAddRequestIDParameter);
        }
    
        public virtual int spHRAddUserRequestInsert(ObjectParameter povchAddRequestID, Nullable<System.DateTime> pidtmAddRequestDate, string pivchJobEmployeeId, string pivchReason, string pivchInputID)
        {
            var pidtmAddRequestDateParameter = pidtmAddRequestDate.HasValue ?
                new ObjectParameter("pidtmAddRequestDate", pidtmAddRequestDate) :
                new ObjectParameter("pidtmAddRequestDate", typeof(System.DateTime));
    
            var pivchJobEmployeeIdParameter = pivchJobEmployeeId != null ?
                new ObjectParameter("pivchJobEmployeeId", pivchJobEmployeeId) :
                new ObjectParameter("pivchJobEmployeeId", typeof(string));
    
            var pivchReasonParameter = pivchReason != null ?
                new ObjectParameter("pivchReason", pivchReason) :
                new ObjectParameter("pivchReason", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRAddUserRequestInsert", povchAddRequestID, pidtmAddRequestDateParameter, pivchJobEmployeeIdParameter, pivchReasonParameter, pivchInputIDParameter);
        }
    
        public virtual int spHRAddUserRequestList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRAddUserRequestList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spHRAddUserRequestUpdate(string pivchAddRequestID, Nullable<System.DateTime> pidtmAddRequestDate, string pivchJobEmployeeId, string pivchReason, string pivchInputID)
        {
            var pivchAddRequestIDParameter = pivchAddRequestID != null ?
                new ObjectParameter("pivchAddRequestID", pivchAddRequestID) :
                new ObjectParameter("pivchAddRequestID", typeof(string));
    
            var pidtmAddRequestDateParameter = pidtmAddRequestDate.HasValue ?
                new ObjectParameter("pidtmAddRequestDate", pidtmAddRequestDate) :
                new ObjectParameter("pidtmAddRequestDate", typeof(System.DateTime));
    
            var pivchJobEmployeeIdParameter = pivchJobEmployeeId != null ?
                new ObjectParameter("pivchJobEmployeeId", pivchJobEmployeeId) :
                new ObjectParameter("pivchJobEmployeeId", typeof(string));
    
            var pivchReasonParameter = pivchReason != null ?
                new ObjectParameter("pivchReason", pivchReason) :
                new ObjectParameter("pivchReason", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRAddUserRequestUpdate", pivchAddRequestIDParameter, pidtmAddRequestDateParameter, pivchJobEmployeeIdParameter, pivchReasonParameter, pivchInputIDParameter);
        }
    
        public virtual int spHRAddUserRequestUpdateProcessStatus(string pivchFormState, string pivchAddRequestID, string pivchProcessStatus, string pivchCancelReason, string pivchInputID)
        {
            var pivchFormStateParameter = pivchFormState != null ?
                new ObjectParameter("pivchFormState", pivchFormState) :
                new ObjectParameter("pivchFormState", typeof(string));
    
            var pivchAddRequestIDParameter = pivchAddRequestID != null ?
                new ObjectParameter("pivchAddRequestID", pivchAddRequestID) :
                new ObjectParameter("pivchAddRequestID", typeof(string));
    
            var pivchProcessStatusParameter = pivchProcessStatus != null ?
                new ObjectParameter("pivchProcessStatus", pivchProcessStatus) :
                new ObjectParameter("pivchProcessStatus", typeof(string));
    
            var pivchCancelReasonParameter = pivchCancelReason != null ?
                new ObjectParameter("pivchCancelReason", pivchCancelReason) :
                new ObjectParameter("pivchCancelReason", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRAddUserRequestUpdateProcessStatus", pivchFormStateParameter, pivchAddRequestIDParameter, pivchProcessStatusParameter, pivchCancelReasonParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spHRAddUserRequestView_Result> spHRAddUserRequestView(string pivchAddRequestID)
        {
            var pivchAddRequestIDParameter = pivchAddRequestID != null ?
                new ObjectParameter("pivchAddRequestID", pivchAddRequestID) :
                new ObjectParameter("pivchAddRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHRAddUserRequestView_Result>("spHRAddUserRequestView", pivchAddRequestIDParameter);
        }
    
        public virtual int spHRDeleteUserRequestDetailDelete(string pivchDeleteRequestDetailID, string pivchDeleteRequestID)
        {
            var pivchDeleteRequestDetailIDParameter = pivchDeleteRequestDetailID != null ?
                new ObjectParameter("pivchDeleteRequestDetailID", pivchDeleteRequestDetailID) :
                new ObjectParameter("pivchDeleteRequestDetailID", typeof(string));
    
            var pivchDeleteRequestIDParameter = pivchDeleteRequestID != null ?
                new ObjectParameter("pivchDeleteRequestID", pivchDeleteRequestID) :
                new ObjectParameter("pivchDeleteRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRDeleteUserRequestDetailDelete", pivchDeleteRequestDetailIDParameter, pivchDeleteRequestIDParameter);
        }
    
        public virtual int spHRDeleteUserRequestDetailInsert(string pivchDeleteRequestID, string pivchAddRequestDetailId, string pivchInputID)
        {
            var pivchDeleteRequestIDParameter = pivchDeleteRequestID != null ?
                new ObjectParameter("pivchDeleteRequestID", pivchDeleteRequestID) :
                new ObjectParameter("pivchDeleteRequestID", typeof(string));
    
            var pivchAddRequestDetailIdParameter = pivchAddRequestDetailId != null ?
                new ObjectParameter("pivchAddRequestDetailId", pivchAddRequestDetailId) :
                new ObjectParameter("pivchAddRequestDetailId", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRDeleteUserRequestDetailInsert", pivchDeleteRequestIDParameter, pivchAddRequestDetailIdParameter, pivchInputIDParameter);
        }
    
        public virtual int spHRDeleteUserRequestDetailList(string pivchDeleteRequestID)
        {
            var pivchDeleteRequestIDParameter = pivchDeleteRequestID != null ?
                new ObjectParameter("pivchDeleteRequestID", pivchDeleteRequestID) :
                new ObjectParameter("pivchDeleteRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRDeleteUserRequestDetailList", pivchDeleteRequestIDParameter);
        }
    
        public virtual int spHRDeleteUserRequestDetailMarkingCheck(string pivchDeleteRequestDetailID, string pivchDeleteRequestID, string pivchInputID)
        {
            var pivchDeleteRequestDetailIDParameter = pivchDeleteRequestDetailID != null ?
                new ObjectParameter("pivchDeleteRequestDetailID", pivchDeleteRequestDetailID) :
                new ObjectParameter("pivchDeleteRequestDetailID", typeof(string));
    
            var pivchDeleteRequestIDParameter = pivchDeleteRequestID != null ?
                new ObjectParameter("pivchDeleteRequestID", pivchDeleteRequestID) :
                new ObjectParameter("pivchDeleteRequestID", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRDeleteUserRequestDetailMarkingCheck", pivchDeleteRequestDetailIDParameter, pivchDeleteRequestIDParameter, pivchInputIDParameter);
        }
    
        public virtual int spHRDeleteUserRequestDetailMarkingDelete(string pivchDeleteRequestDetailID, string pivchDeleteRequestID, string pivchInputID)
        {
            var pivchDeleteRequestDetailIDParameter = pivchDeleteRequestDetailID != null ?
                new ObjectParameter("pivchDeleteRequestDetailID", pivchDeleteRequestDetailID) :
                new ObjectParameter("pivchDeleteRequestDetailID", typeof(string));
    
            var pivchDeleteRequestIDParameter = pivchDeleteRequestID != null ?
                new ObjectParameter("pivchDeleteRequestID", pivchDeleteRequestID) :
                new ObjectParameter("pivchDeleteRequestID", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRDeleteUserRequestDetailMarkingDelete", pivchDeleteRequestDetailIDParameter, pivchDeleteRequestIDParameter, pivchInputIDParameter);
        }
    
        public virtual int spHRDeleteUserRequestDetailUpdate(string pivchDeleteRequestDetailID, string pivchDeleteRequestID, string pivchInputID)
        {
            var pivchDeleteRequestDetailIDParameter = pivchDeleteRequestDetailID != null ?
                new ObjectParameter("pivchDeleteRequestDetailID", pivchDeleteRequestDetailID) :
                new ObjectParameter("pivchDeleteRequestDetailID", typeof(string));
    
            var pivchDeleteRequestIDParameter = pivchDeleteRequestID != null ?
                new ObjectParameter("pivchDeleteRequestID", pivchDeleteRequestID) :
                new ObjectParameter("pivchDeleteRequestID", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRDeleteUserRequestDetailUpdate", pivchDeleteRequestDetailIDParameter, pivchDeleteRequestIDParameter, pivchInputIDParameter);
        }
    
        public virtual int spHRDeleteUserRequestInsert(ObjectParameter povchDeleteRequestID, Nullable<System.DateTime> pidtmDeleteRequestDate, string pivchJobEmployeeId, Nullable<int> piintReasonDelete, string pivchReasonDesc, Nullable<System.DateTime> pidtmResignDate, Nullable<System.DateTime> pidtmResignEffectiveDate, string pivchInputID)
        {
            var pidtmDeleteRequestDateParameter = pidtmDeleteRequestDate.HasValue ?
                new ObjectParameter("pidtmDeleteRequestDate", pidtmDeleteRequestDate) :
                new ObjectParameter("pidtmDeleteRequestDate", typeof(System.DateTime));
    
            var pivchJobEmployeeIdParameter = pivchJobEmployeeId != null ?
                new ObjectParameter("pivchJobEmployeeId", pivchJobEmployeeId) :
                new ObjectParameter("pivchJobEmployeeId", typeof(string));
    
            var piintReasonDeleteParameter = piintReasonDelete.HasValue ?
                new ObjectParameter("piintReasonDelete", piintReasonDelete) :
                new ObjectParameter("piintReasonDelete", typeof(int));
    
            var pivchReasonDescParameter = pivchReasonDesc != null ?
                new ObjectParameter("pivchReasonDesc", pivchReasonDesc) :
                new ObjectParameter("pivchReasonDesc", typeof(string));
    
            var pidtmResignDateParameter = pidtmResignDate.HasValue ?
                new ObjectParameter("pidtmResignDate", pidtmResignDate) :
                new ObjectParameter("pidtmResignDate", typeof(System.DateTime));
    
            var pidtmResignEffectiveDateParameter = pidtmResignEffectiveDate.HasValue ?
                new ObjectParameter("pidtmResignEffectiveDate", pidtmResignEffectiveDate) :
                new ObjectParameter("pidtmResignEffectiveDate", typeof(System.DateTime));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRDeleteUserRequestInsert", povchDeleteRequestID, pidtmDeleteRequestDateParameter, pivchJobEmployeeIdParameter, piintReasonDeleteParameter, pivchReasonDescParameter, pidtmResignDateParameter, pidtmResignEffectiveDateParameter, pivchInputIDParameter);
        }
    
        public virtual int spHRDeleteUserRequestList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRDeleteUserRequestList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spHRDeleteUserRequestUpdate(string pivchDeleteRequestID, Nullable<System.DateTime> pidtmDeleteRequestDate, string pivchJobEmployeeId, Nullable<int> piintReasonDelete, string pivchReasonDesc, Nullable<System.DateTime> pidtmResignDate, Nullable<System.DateTime> pidtmResignEffectiveDate, string pivchInputID)
        {
            var pivchDeleteRequestIDParameter = pivchDeleteRequestID != null ?
                new ObjectParameter("pivchDeleteRequestID", pivchDeleteRequestID) :
                new ObjectParameter("pivchDeleteRequestID", typeof(string));
    
            var pidtmDeleteRequestDateParameter = pidtmDeleteRequestDate.HasValue ?
                new ObjectParameter("pidtmDeleteRequestDate", pidtmDeleteRequestDate) :
                new ObjectParameter("pidtmDeleteRequestDate", typeof(System.DateTime));
    
            var pivchJobEmployeeIdParameter = pivchJobEmployeeId != null ?
                new ObjectParameter("pivchJobEmployeeId", pivchJobEmployeeId) :
                new ObjectParameter("pivchJobEmployeeId", typeof(string));
    
            var piintReasonDeleteParameter = piintReasonDelete.HasValue ?
                new ObjectParameter("piintReasonDelete", piintReasonDelete) :
                new ObjectParameter("piintReasonDelete", typeof(int));
    
            var pivchReasonDescParameter = pivchReasonDesc != null ?
                new ObjectParameter("pivchReasonDesc", pivchReasonDesc) :
                new ObjectParameter("pivchReasonDesc", typeof(string));
    
            var pidtmResignDateParameter = pidtmResignDate.HasValue ?
                new ObjectParameter("pidtmResignDate", pidtmResignDate) :
                new ObjectParameter("pidtmResignDate", typeof(System.DateTime));
    
            var pidtmResignEffectiveDateParameter = pidtmResignEffectiveDate.HasValue ?
                new ObjectParameter("pidtmResignEffectiveDate", pidtmResignEffectiveDate) :
                new ObjectParameter("pidtmResignEffectiveDate", typeof(System.DateTime));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRDeleteUserRequestUpdate", pivchDeleteRequestIDParameter, pidtmDeleteRequestDateParameter, pivchJobEmployeeIdParameter, piintReasonDeleteParameter, pivchReasonDescParameter, pidtmResignDateParameter, pidtmResignEffectiveDateParameter, pivchInputIDParameter);
        }
    
        public virtual int spHRDeleteUserRequestUpdateProcessStatus(string pivchFormState, string pivchDeleteRequestID, string pivchProcessStatus, string pivchCancelReason, string pivchInputID)
        {
            var pivchFormStateParameter = pivchFormState != null ?
                new ObjectParameter("pivchFormState", pivchFormState) :
                new ObjectParameter("pivchFormState", typeof(string));
    
            var pivchDeleteRequestIDParameter = pivchDeleteRequestID != null ?
                new ObjectParameter("pivchDeleteRequestID", pivchDeleteRequestID) :
                new ObjectParameter("pivchDeleteRequestID", typeof(string));
    
            var pivchProcessStatusParameter = pivchProcessStatus != null ?
                new ObjectParameter("pivchProcessStatus", pivchProcessStatus) :
                new ObjectParameter("pivchProcessStatus", typeof(string));
    
            var pivchCancelReasonParameter = pivchCancelReason != null ?
                new ObjectParameter("pivchCancelReason", pivchCancelReason) :
                new ObjectParameter("pivchCancelReason", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRDeleteUserRequestUpdateProcessStatus", pivchFormStateParameter, pivchDeleteRequestIDParameter, pivchProcessStatusParameter, pivchCancelReasonParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spHRDeleteUserRequestView_Result> spHRDeleteUserRequestView(string pivchDeleteRequestID)
        {
            var pivchDeleteRequestIDParameter = pivchDeleteRequestID != null ?
                new ObjectParameter("pivchDeleteRequestID", pivchDeleteRequestID) :
                new ObjectParameter("pivchDeleteRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHRDeleteUserRequestView_Result>("spHRDeleteUserRequestView", pivchDeleteRequestIDParameter);
        }
    
        public virtual int spHREmployeeDelete(string pivchNIK)
        {
            var pivchNIKParameter = pivchNIK != null ?
                new ObjectParameter("pivchNIK", pivchNIK) :
                new ObjectParameter("pivchNIK", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHREmployeeDelete", pivchNIKParameter);
        }
    
        public virtual int spHREmployeeDetailDelete(string pivchJobEmployeeId)
        {
            var pivchJobEmployeeIdParameter = pivchJobEmployeeId != null ?
                new ObjectParameter("pivchJobEmployeeId", pivchJobEmployeeId) :
                new ObjectParameter("pivchJobEmployeeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHREmployeeDetailDelete", pivchJobEmployeeIdParameter);
        }
    
        public virtual int spHREmployeeDetailInsert(ObjectParameter povchJobEmployeeId, string pivchNIK, Nullable<int> piintJobType, Nullable<int> piintBranchId, string pivchDepartementCode, string pivchPrivilegeCode, Nullable<System.DateTime> pidtmEffectiveDateFrom, Nullable<System.DateTime> pidtmEffectiveDateTo, Nullable<int> piintBranchIdFrom, string pivchDepartementCodeFrom, string pivchPrivilegeCodeFrom, string pivchInputID)
        {
            var pivchNIKParameter = pivchNIK != null ?
                new ObjectParameter("pivchNIK", pivchNIK) :
                new ObjectParameter("pivchNIK", typeof(string));
    
            var piintJobTypeParameter = piintJobType.HasValue ?
                new ObjectParameter("piintJobType", piintJobType) :
                new ObjectParameter("piintJobType", typeof(int));
    
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchPrivilegeCodeParameter = pivchPrivilegeCode != null ?
                new ObjectParameter("pivchPrivilegeCode", pivchPrivilegeCode) :
                new ObjectParameter("pivchPrivilegeCode", typeof(string));
    
            var pidtmEffectiveDateFromParameter = pidtmEffectiveDateFrom.HasValue ?
                new ObjectParameter("pidtmEffectiveDateFrom", pidtmEffectiveDateFrom) :
                new ObjectParameter("pidtmEffectiveDateFrom", typeof(System.DateTime));
    
            var pidtmEffectiveDateToParameter = pidtmEffectiveDateTo.HasValue ?
                new ObjectParameter("pidtmEffectiveDateTo", pidtmEffectiveDateTo) :
                new ObjectParameter("pidtmEffectiveDateTo", typeof(System.DateTime));
    
            var piintBranchIdFromParameter = piintBranchIdFrom.HasValue ?
                new ObjectParameter("piintBranchIdFrom", piintBranchIdFrom) :
                new ObjectParameter("piintBranchIdFrom", typeof(int));
    
            var pivchDepartementCodeFromParameter = pivchDepartementCodeFrom != null ?
                new ObjectParameter("pivchDepartementCodeFrom", pivchDepartementCodeFrom) :
                new ObjectParameter("pivchDepartementCodeFrom", typeof(string));
    
            var pivchPrivilegeCodeFromParameter = pivchPrivilegeCodeFrom != null ?
                new ObjectParameter("pivchPrivilegeCodeFrom", pivchPrivilegeCodeFrom) :
                new ObjectParameter("pivchPrivilegeCodeFrom", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHREmployeeDetailInsert", povchJobEmployeeId, pivchNIKParameter, piintJobTypeParameter, piintBranchIdParameter, pivchDepartementCodeParameter, pivchPrivilegeCodeParameter, pidtmEffectiveDateFromParameter, pidtmEffectiveDateToParameter, piintBranchIdFromParameter, pivchDepartementCodeFromParameter, pivchPrivilegeCodeFromParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spHREmployeeDetailList_Result> spHREmployeeDetailList(string pivchNIK)
        {
            var pivchNIKParameter = pivchNIK != null ?
                new ObjectParameter("pivchNIK", pivchNIK) :
                new ObjectParameter("pivchNIK", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHREmployeeDetailList_Result>("spHREmployeeDetailList", pivchNIKParameter);
        }
    
        public virtual int spHREmployeeDetailUpdate(string pivchJobEmployeeId, string pivchNIK, Nullable<int> piintJobType, Nullable<int> piintBranchId, string pivchDepartementCode, string pivchPrivilegeCode, Nullable<System.DateTime> pidtmEffectiveDateFrom, Nullable<System.DateTime> pidtmEffectiveDateTo, Nullable<int> piintBranchIdFrom, string pivchDepartementCodeFrom, string pivchPrivilegeCodeFrom, string pivchInputID)
        {
            var pivchJobEmployeeIdParameter = pivchJobEmployeeId != null ?
                new ObjectParameter("pivchJobEmployeeId", pivchJobEmployeeId) :
                new ObjectParameter("pivchJobEmployeeId", typeof(string));
    
            var pivchNIKParameter = pivchNIK != null ?
                new ObjectParameter("pivchNIK", pivchNIK) :
                new ObjectParameter("pivchNIK", typeof(string));
    
            var piintJobTypeParameter = piintJobType.HasValue ?
                new ObjectParameter("piintJobType", piintJobType) :
                new ObjectParameter("piintJobType", typeof(int));
    
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchPrivilegeCodeParameter = pivchPrivilegeCode != null ?
                new ObjectParameter("pivchPrivilegeCode", pivchPrivilegeCode) :
                new ObjectParameter("pivchPrivilegeCode", typeof(string));
    
            var pidtmEffectiveDateFromParameter = pidtmEffectiveDateFrom.HasValue ?
                new ObjectParameter("pidtmEffectiveDateFrom", pidtmEffectiveDateFrom) :
                new ObjectParameter("pidtmEffectiveDateFrom", typeof(System.DateTime));
    
            var pidtmEffectiveDateToParameter = pidtmEffectiveDateTo.HasValue ?
                new ObjectParameter("pidtmEffectiveDateTo", pidtmEffectiveDateTo) :
                new ObjectParameter("pidtmEffectiveDateTo", typeof(System.DateTime));
    
            var piintBranchIdFromParameter = piintBranchIdFrom.HasValue ?
                new ObjectParameter("piintBranchIdFrom", piintBranchIdFrom) :
                new ObjectParameter("piintBranchIdFrom", typeof(int));
    
            var pivchDepartementCodeFromParameter = pivchDepartementCodeFrom != null ?
                new ObjectParameter("pivchDepartementCodeFrom", pivchDepartementCodeFrom) :
                new ObjectParameter("pivchDepartementCodeFrom", typeof(string));
    
            var pivchPrivilegeCodeFromParameter = pivchPrivilegeCodeFrom != null ?
                new ObjectParameter("pivchPrivilegeCodeFrom", pivchPrivilegeCodeFrom) :
                new ObjectParameter("pivchPrivilegeCodeFrom", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHREmployeeDetailUpdate", pivchJobEmployeeIdParameter, pivchNIKParameter, piintJobTypeParameter, piintBranchIdParameter, pivchDepartementCodeParameter, pivchPrivilegeCodeParameter, pidtmEffectiveDateFromParameter, pidtmEffectiveDateToParameter, piintBranchIdFromParameter, pivchDepartementCodeFromParameter, pivchPrivilegeCodeFromParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spHREmployeeDetailView_Result> spHREmployeeDetailView(string pivchJobEmployeeId)
        {
            var pivchJobEmployeeIdParameter = pivchJobEmployeeId != null ?
                new ObjectParameter("pivchJobEmployeeId", pivchJobEmployeeId) :
                new ObjectParameter("pivchJobEmployeeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHREmployeeDetailView_Result>("spHREmployeeDetailView", pivchJobEmployeeIdParameter);
        }
    
        public virtual int spHREmployeeInsert(string pivchNIK, string pivchEmployeeName, string pivchInputID)
        {
            var pivchNIKParameter = pivchNIK != null ?
                new ObjectParameter("pivchNIK", pivchNIK) :
                new ObjectParameter("pivchNIK", typeof(string));
    
            var pivchEmployeeNameParameter = pivchEmployeeName != null ?
                new ObjectParameter("pivchEmployeeName", pivchEmployeeName) :
                new ObjectParameter("pivchEmployeeName", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHREmployeeInsert", pivchNIKParameter, pivchEmployeeNameParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spHREmployeeList_Result> spHREmployeeList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHREmployeeList_Result>("spHREmployeeList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spHREmployeeUpdate(string pivchNIK, string pivchEmployeeName, string pivchInputID)
        {
            var pivchNIKParameter = pivchNIK != null ?
                new ObjectParameter("pivchNIK", pivchNIK) :
                new ObjectParameter("pivchNIK", typeof(string));
    
            var pivchEmployeeNameParameter = pivchEmployeeName != null ?
                new ObjectParameter("pivchEmployeeName", pivchEmployeeName) :
                new ObjectParameter("pivchEmployeeName", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHREmployeeUpdate", pivchNIKParameter, pivchEmployeeNameParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spHREmployeeView_Result> spHREmployeeView(string pivchNIK)
        {
            var pivchNIKParameter = pivchNIK != null ?
                new ObjectParameter("pivchNIK", pivchNIK) :
                new ObjectParameter("pivchNIK", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHREmployeeView_Result>("spHREmployeeView", pivchNIKParameter);
        }
    
        public virtual int spHRJobTypeInsert(string pivchJobTypeName, string pivchInputID)
        {
            var pivchJobTypeNameParameter = pivchJobTypeName != null ?
                new ObjectParameter("pivchJobTypeName", pivchJobTypeName) :
                new ObjectParameter("pivchJobTypeName", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRJobTypeInsert", pivchJobTypeNameParameter, pivchInputIDParameter);
        }
    
        public virtual int spHRJobTypeList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRJobTypeList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spHRJobTypeUpdate(Nullable<int> piintJobTypeId, string pivchJobTypeName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var piintJobTypeIdParameter = piintJobTypeId.HasValue ?
                new ObjectParameter("piintJobTypeId", piintJobTypeId) :
                new ObjectParameter("piintJobTypeId", typeof(int));
    
            var pivchJobTypeNameParameter = pivchJobTypeName != null ?
                new ObjectParameter("pivchJobTypeName", pivchJobTypeName) :
                new ObjectParameter("pivchJobTypeName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRJobTypeUpdate", piintJobTypeIdParameter, pivchJobTypeNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spHRJobTypeView_Result> spHRJobTypeView(Nullable<int> piintJobTypeId)
        {
            var piintJobTypeIdParameter = piintJobTypeId.HasValue ?
                new ObjectParameter("piintJobTypeId", piintJobTypeId) :
                new ObjectParameter("piintJobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHRJobTypeView_Result>("spHRJobTypeView", piintJobTypeIdParameter);
        }
    
        public virtual ObjectResult<spHRPendingEmployeeRegistList_Result> spHRPendingEmployeeRegisterList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHRPendingEmployeeRegistList_Result>("spHRPendingEmployeeRegisterList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<spHRPrivilegeList_Result> spHRPrivilegeList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHRPrivilegeList_Result>("spHRPrivilegeList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spHRPrivilegeUpdate(string pivchPrivilegeCode, string pivchPrivilegeName, Nullable<int> piintBranchId, string pivchDepartementCode, string pivchOrgId, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchPrivilegeCodeParameter = pivchPrivilegeCode != null ?
                new ObjectParameter("pivchPrivilegeCode", pivchPrivilegeCode) :
                new ObjectParameter("pivchPrivilegeCode", typeof(string));
    
            var pivchPrivilegeNameParameter = pivchPrivilegeName != null ?
                new ObjectParameter("pivchPrivilegeName", pivchPrivilegeName) :
                new ObjectParameter("pivchPrivilegeName", typeof(string));
    
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchOrgIdParameter = pivchOrgId != null ?
                new ObjectParameter("pivchOrgId", pivchOrgId) :
                new ObjectParameter("pivchOrgId", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRPrivilegeUpdate", pivchPrivilegeCodeParameter, pivchPrivilegeNameParameter, piintBranchIdParameter, pivchDepartementCodeParameter, pivchOrgIdParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spHRPrivilegeView_Result> spHRPrivilegeView(string pivchPrivilegeCode)
        {
            var pivchPrivilegeCodeParameter = pivchPrivilegeCode != null ?
                new ObjectParameter("pivchPrivilegeCode", pivchPrivilegeCode) :
                new ObjectParameter("pivchPrivilegeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHRPrivilegeView_Result>("spHRPrivilegeView", pivchPrivilegeCodeParameter);
        }
    
        public virtual int spHRSendMailProcessStatus(string workFlowCode, string workFlowCreatedBy, string workFlowDescription, string workFlowUpdateBy)
        {
            var workFlowCodeParameter = workFlowCode != null ?
                new ObjectParameter("WorkFlowCode", workFlowCode) :
                new ObjectParameter("WorkFlowCode", typeof(string));
    
            var workFlowCreatedByParameter = workFlowCreatedBy != null ?
                new ObjectParameter("WorkFlowCreatedBy", workFlowCreatedBy) :
                new ObjectParameter("WorkFlowCreatedBy", typeof(string));
    
            var workFlowDescriptionParameter = workFlowDescription != null ?
                new ObjectParameter("WorkFlowDescription", workFlowDescription) :
                new ObjectParameter("WorkFlowDescription", typeof(string));
    
            var workFlowUpdateByParameter = workFlowUpdateBy != null ?
                new ObjectParameter("WorkFlowUpdateBy", workFlowUpdateBy) :
                new ObjectParameter("WorkFlowUpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRSendMailProcessStatus", workFlowCodeParameter, workFlowCreatedByParameter, workFlowDescriptionParameter, workFlowUpdateByParameter);
        }
    
        public virtual int spITActivityAssignInsert(string pivchActivityNo, string pivchStatus, string pivchAssignTo, string pivchAssignDescription, string pivchInputID)
        {
            var pivchActivityNoParameter = pivchActivityNo != null ?
                new ObjectParameter("pivchActivityNo", pivchActivityNo) :
                new ObjectParameter("pivchActivityNo", typeof(string));
    
            var pivchStatusParameter = pivchStatus != null ?
                new ObjectParameter("pivchStatus", pivchStatus) :
                new ObjectParameter("pivchStatus", typeof(string));
    
            var pivchAssignToParameter = pivchAssignTo != null ?
                new ObjectParameter("pivchAssignTo", pivchAssignTo) :
                new ObjectParameter("pivchAssignTo", typeof(string));
    
            var pivchAssignDescriptionParameter = pivchAssignDescription != null ?
                new ObjectParameter("pivchAssignDescription", pivchAssignDescription) :
                new ObjectParameter("pivchAssignDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITActivityAssignInsert", pivchActivityNoParameter, pivchStatusParameter, pivchAssignToParameter, pivchAssignDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spGetAssignList_Result> spITActivityAssignList(string pivchActivityNo, string pivchWhereBy)
        {
            var pivchActivityNoParameter = pivchActivityNo != null ?
                new ObjectParameter("pivchActivityNo", pivchActivityNo) :
                new ObjectParameter("pivchActivityNo", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAssignList_Result>("spITActivityAssignList", pivchActivityNoParameter, pivchWhereByParameter);
        }
    
        public virtual int spITActivityTaskDelete(string pivchActivityNo)
        {
            var pivchActivityNoParameter = pivchActivityNo != null ?
                new ObjectParameter("pivchActivityNo", pivchActivityNo) :
                new ObjectParameter("pivchActivityNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITActivityTaskDelete", pivchActivityNoParameter);
        }
    
        public virtual int spITActivityTaskInsert(ObjectParameter povchActivityNo, Nullable<System.DateTime> pidtmActivityDate, string pivchRequestBy, Nullable<int> piintBranchId, string pivchDepartementCode, Nullable<int> piintProblemTypeCode, string pivchItemTypeCode, string pivchDescription, string pivchPriority, string pivchInputID)
        {
            var pidtmActivityDateParameter = pidtmActivityDate.HasValue ?
                new ObjectParameter("pidtmActivityDate", pidtmActivityDate) :
                new ObjectParameter("pidtmActivityDate", typeof(System.DateTime));
    
            var pivchRequestByParameter = pivchRequestBy != null ?
                new ObjectParameter("pivchRequestBy", pivchRequestBy) :
                new ObjectParameter("pivchRequestBy", typeof(string));
    
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var piintProblemTypeCodeParameter = piintProblemTypeCode.HasValue ?
                new ObjectParameter("piintProblemTypeCode", piintProblemTypeCode) :
                new ObjectParameter("piintProblemTypeCode", typeof(int));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchPriorityParameter = pivchPriority != null ?
                new ObjectParameter("pivchPriority", pivchPriority) :
                new ObjectParameter("pivchPriority", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITActivityTaskInsert", povchActivityNo, pidtmActivityDateParameter, pivchRequestByParameter, piintBranchIdParameter, pivchDepartementCodeParameter, piintProblemTypeCodeParameter, pivchItemTypeCodeParameter, pivchDescriptionParameter, pivchPriorityParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITActivityTaskList_Results> spITActivityTaskList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITActivityTaskList_Results>("spITActivityTaskList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spITActivityTaskUpdate(string pivchActivityNo, Nullable<System.DateTime> pidtmActivityDate, string pivchRequestBy, Nullable<int> piintBranchId, string pivchDepartementCode, Nullable<int> piintProblemTypeCode, string pivchItemTypeCode, string pivchDescription, string pivchPriority, string pivchInputID)
        {
            var pivchActivityNoParameter = pivchActivityNo != null ?
                new ObjectParameter("pivchActivityNo", pivchActivityNo) :
                new ObjectParameter("pivchActivityNo", typeof(string));
    
            var pidtmActivityDateParameter = pidtmActivityDate.HasValue ?
                new ObjectParameter("pidtmActivityDate", pidtmActivityDate) :
                new ObjectParameter("pidtmActivityDate", typeof(System.DateTime));
    
            var pivchRequestByParameter = pivchRequestBy != null ?
                new ObjectParameter("pivchRequestBy", pivchRequestBy) :
                new ObjectParameter("pivchRequestBy", typeof(string));
    
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var piintProblemTypeCodeParameter = piintProblemTypeCode.HasValue ?
                new ObjectParameter("piintProblemTypeCode", piintProblemTypeCode) :
                new ObjectParameter("piintProblemTypeCode", typeof(int));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchPriorityParameter = pivchPriority != null ?
                new ObjectParameter("pivchPriority", pivchPriority) :
                new ObjectParameter("pivchPriority", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITActivityTaskUpdate", pivchActivityNoParameter, pidtmActivityDateParameter, pivchRequestByParameter, piintBranchIdParameter, pivchDepartementCodeParameter, piintProblemTypeCodeParameter, pivchItemTypeCodeParameter, pivchDescriptionParameter, pivchPriorityParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITActivityTaskView_Result> spITActivityTaskView(string pivchActivityNo)
        {
            var pivchActivityNoParameter = pivchActivityNo != null ?
                new ObjectParameter("pivchActivityNo", pivchActivityNo) :
                new ObjectParameter("pivchActivityNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITActivityTaskView_Result>("spITActivityTaskView", pivchActivityNoParameter);
        }
    
        public virtual int spITConditionInsert(Nullable<int> piintConditionCode, string pivchConditionName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var piintConditionCodeParameter = piintConditionCode.HasValue ?
                new ObjectParameter("piintConditionCode", piintConditionCode) :
                new ObjectParameter("piintConditionCode", typeof(int));
    
            var pivchConditionNameParameter = pivchConditionName != null ?
                new ObjectParameter("pivchConditionName", pivchConditionName) :
                new ObjectParameter("pivchConditionName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITConditionInsert", piintConditionCodeParameter, pivchConditionNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITConditionList_Result> spITConditionList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITConditionList_Result>("spITConditionList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spITConditionUpdate(Nullable<int> piintConditionCode, string pivchConditionName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var piintConditionCodeParameter = piintConditionCode.HasValue ?
                new ObjectParameter("piintConditionCode", piintConditionCode) :
                new ObjectParameter("piintConditionCode", typeof(int));
    
            var pivchConditionNameParameter = pivchConditionName != null ?
                new ObjectParameter("pivchConditionName", pivchConditionName) :
                new ObjectParameter("pivchConditionName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITConditionUpdate", piintConditionCodeParameter, pivchConditionNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITConditionView_Result> spITConditionView(Nullable<int> piintConditionCode)
        {
            var piintConditionCodeParameter = piintConditionCode.HasValue ?
                new ObjectParameter("piintConditionCode", piintConditionCode) :
                new ObjectParameter("piintConditionCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITConditionView_Result>("spITConditionView", piintConditionCodeParameter);
        }
    
        public virtual int spITItemHistory(string pivchItemCode, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchItemCodeParameter = pivchItemCode != null ?
                new ObjectParameter("pivchItemCode", pivchItemCode) :
                new ObjectParameter("pivchItemCode", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemHistory", pivchItemCodeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spITItemInDetailDelete(string pivchItemInDetailCode, string pivchItemInCode)
        {
            var pivchItemInDetailCodeParameter = pivchItemInDetailCode != null ?
                new ObjectParameter("pivchItemInDetailCode", pivchItemInDetailCode) :
                new ObjectParameter("pivchItemInDetailCode", typeof(string));
    
            var pivchItemInCodeParameter = pivchItemInCode != null ?
                new ObjectParameter("pivchItemInCode", pivchItemInCode) :
                new ObjectParameter("pivchItemInCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemInDetailDelete", pivchItemInDetailCodeParameter, pivchItemInCodeParameter);
        }
    
        public virtual int spITItemInDetailInsert(string pivchItemInCode, Nullable<int> piintStatusIn, string pivchItemTypeCode, string pivchItemOutCode, string pivchSerialNo, string pivchBarcode, string pivchDescription, Nullable<int> piintConditionCode, string pivchInputID)
        {
            var pivchItemInCodeParameter = pivchItemInCode != null ?
                new ObjectParameter("pivchItemInCode", pivchItemInCode) :
                new ObjectParameter("pivchItemInCode", typeof(string));
    
            var piintStatusInParameter = piintStatusIn.HasValue ?
                new ObjectParameter("piintStatusIn", piintStatusIn) :
                new ObjectParameter("piintStatusIn", typeof(int));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pivchItemOutCodeParameter = pivchItemOutCode != null ?
                new ObjectParameter("pivchItemOutCode", pivchItemOutCode) :
                new ObjectParameter("pivchItemOutCode", typeof(string));
    
            var pivchSerialNoParameter = pivchSerialNo != null ?
                new ObjectParameter("pivchSerialNo", pivchSerialNo) :
                new ObjectParameter("pivchSerialNo", typeof(string));
    
            var pivchBarcodeParameter = pivchBarcode != null ?
                new ObjectParameter("pivchBarcode", pivchBarcode) :
                new ObjectParameter("pivchBarcode", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var piintConditionCodeParameter = piintConditionCode.HasValue ?
                new ObjectParameter("piintConditionCode", piintConditionCode) :
                new ObjectParameter("piintConditionCode", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemInDetailInsert", pivchItemInCodeParameter, piintStatusInParameter, pivchItemTypeCodeParameter, pivchItemOutCodeParameter, pivchSerialNoParameter, pivchBarcodeParameter, pivchDescriptionParameter, piintConditionCodeParameter, pivchInputIDParameter);
        }
    
        public virtual int spITItemInDetailList(string pivchItemInCode, string pivchWhereBy)
        {
            var pivchItemInCodeParameter = pivchItemInCode != null ?
                new ObjectParameter("pivchItemInCode", pivchItemInCode) :
                new ObjectParameter("pivchItemInCode", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemInDetailList", pivchItemInCodeParameter, pivchWhereByParameter);
        }
    
        public virtual int spITItemInDetailUpdate(string pivchItemInDetailCode, string pivchItemInCode, Nullable<int> piintStatusIn, string pivchItemTypeCode, string pivchItemOutCode, string pivchSerialNo, string pivchBarcode, string pivchDescription, Nullable<int> piintConditionCode, string pivchInputID)
        {
            var pivchItemInDetailCodeParameter = pivchItemInDetailCode != null ?
                new ObjectParameter("pivchItemInDetailCode", pivchItemInDetailCode) :
                new ObjectParameter("pivchItemInDetailCode", typeof(string));
    
            var pivchItemInCodeParameter = pivchItemInCode != null ?
                new ObjectParameter("pivchItemInCode", pivchItemInCode) :
                new ObjectParameter("pivchItemInCode", typeof(string));
    
            var piintStatusInParameter = piintStatusIn.HasValue ?
                new ObjectParameter("piintStatusIn", piintStatusIn) :
                new ObjectParameter("piintStatusIn", typeof(int));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pivchItemOutCodeParameter = pivchItemOutCode != null ?
                new ObjectParameter("pivchItemOutCode", pivchItemOutCode) :
                new ObjectParameter("pivchItemOutCode", typeof(string));
    
            var pivchSerialNoParameter = pivchSerialNo != null ?
                new ObjectParameter("pivchSerialNo", pivchSerialNo) :
                new ObjectParameter("pivchSerialNo", typeof(string));
    
            var pivchBarcodeParameter = pivchBarcode != null ?
                new ObjectParameter("pivchBarcode", pivchBarcode) :
                new ObjectParameter("pivchBarcode", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var piintConditionCodeParameter = piintConditionCode.HasValue ?
                new ObjectParameter("piintConditionCode", piintConditionCode) :
                new ObjectParameter("piintConditionCode", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemInDetailUpdate", pivchItemInDetailCodeParameter, pivchItemInCodeParameter, piintStatusInParameter, pivchItemTypeCodeParameter, pivchItemOutCodeParameter, pivchSerialNoParameter, pivchBarcodeParameter, pivchDescriptionParameter, piintConditionCodeParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITItemInDetailView_Result> spITItemInDetailView(string pivchItemInDetailCode, string pivchItemInCode)
        {
            var pivchItemInDetailCodeParameter = pivchItemInDetailCode != null ?
                new ObjectParameter("pivchItemInDetailCode", pivchItemInDetailCode) :
                new ObjectParameter("pivchItemInDetailCode", typeof(string));
    
            var pivchItemInCodeParameter = pivchItemInCode != null ?
                new ObjectParameter("pivchItemInCode", pivchItemInCode) :
                new ObjectParameter("pivchItemInCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITItemInDetailView_Result>("spITItemInDetailView", pivchItemInDetailCodeParameter, pivchItemInCodeParameter);
        }
    
        public virtual int spITItemInInsert(ObjectParameter povchItemInCode, Nullable<System.DateTime> pidtmDateIn, Nullable<int> piintBranchFrom, string pivchSupplierCode, string pivchInputID)
        {
            var pidtmDateInParameter = pidtmDateIn.HasValue ?
                new ObjectParameter("pidtmDateIn", pidtmDateIn) :
                new ObjectParameter("pidtmDateIn", typeof(System.DateTime));
    
            var piintBranchFromParameter = piintBranchFrom.HasValue ?
                new ObjectParameter("piintBranchFrom", piintBranchFrom) :
                new ObjectParameter("piintBranchFrom", typeof(int));
    
            var pivchSupplierCodeParameter = pivchSupplierCode != null ?
                new ObjectParameter("pivchSupplierCode", pivchSupplierCode) :
                new ObjectParameter("pivchSupplierCode", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemInInsert", povchItemInCode, pidtmDateInParameter, piintBranchFromParameter, pivchSupplierCodeParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITItemReceive_Result> spITItemInList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITItemReceive_Result>("spITItemInList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spITItemInUpdate(string pivchItemInCode, Nullable<System.DateTime> pidtmDateIn, Nullable<int> piintBranchFrom, string pivchSupplierCode, string pivchInputID)
        {
            var pivchItemInCodeParameter = pivchItemInCode != null ?
                new ObjectParameter("pivchItemInCode", pivchItemInCode) :
                new ObjectParameter("pivchItemInCode", typeof(string));
    
            var pidtmDateInParameter = pidtmDateIn.HasValue ?
                new ObjectParameter("pidtmDateIn", pidtmDateIn) :
                new ObjectParameter("pidtmDateIn", typeof(System.DateTime));
    
            var piintBranchFromParameter = piintBranchFrom.HasValue ?
                new ObjectParameter("piintBranchFrom", piintBranchFrom) :
                new ObjectParameter("piintBranchFrom", typeof(int));
    
            var pivchSupplierCodeParameter = pivchSupplierCode != null ?
                new ObjectParameter("pivchSupplierCode", pivchSupplierCode) :
                new ObjectParameter("pivchSupplierCode", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemInUpdate", pivchItemInCodeParameter, pidtmDateInParameter, piintBranchFromParameter, pivchSupplierCodeParameter, pivchInputIDParameter);
        }
    
        public virtual int spITItemInUpdateStatus(string pivchItemInCode, string pivchStatus, Nullable<int> piintApprovalState, string pivchInputID)
        {
            var pivchItemInCodeParameter = pivchItemInCode != null ?
                new ObjectParameter("pivchItemInCode", pivchItemInCode) :
                new ObjectParameter("pivchItemInCode", typeof(string));
    
            var pivchStatusParameter = pivchStatus != null ?
                new ObjectParameter("pivchStatus", pivchStatus) :
                new ObjectParameter("pivchStatus", typeof(string));
    
            var piintApprovalStateParameter = piintApprovalState.HasValue ?
                new ObjectParameter("piintApprovalState", piintApprovalState) :
                new ObjectParameter("piintApprovalState", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemInUpdateStatus", pivchItemInCodeParameter, pivchStatusParameter, piintApprovalStateParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITItemInView_Result> spITItemInView(string pivchItemInCode)
        {
            var pivchItemInCodeParameter = pivchItemInCode != null ?
                new ObjectParameter("pivchItemInCode", pivchItemInCode) :
                new ObjectParameter("pivchItemInCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITItemInView_Result>("spITItemInView", pivchItemInCodeParameter);
        }
    
        public virtual ObjectResult<spITItemList_Result> spITItemList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITItemList_Result>("spITItemList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spITItemOutDelete(string pivchItemOutCode)
        {
            var pivchItemOutCodeParameter = pivchItemOutCode != null ?
                new ObjectParameter("pivchItemOutCode", pivchItemOutCode) :
                new ObjectParameter("pivchItemOutCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemOutDelete", pivchItemOutCodeParameter);
        }
    
        public virtual int spITItemOutInsert(Nullable<System.DateTime> pidtmDateOut, Nullable<int> piintBranchFrom, string pivchItemCode, Nullable<int> piintConditionCode, Nullable<int> piintStatusOut, string pivchSupplierCode, string pivchPIC, string pivchInputBy)
        {
            var pidtmDateOutParameter = pidtmDateOut.HasValue ?
                new ObjectParameter("pidtmDateOut", pidtmDateOut) :
                new ObjectParameter("pidtmDateOut", typeof(System.DateTime));
    
            var piintBranchFromParameter = piintBranchFrom.HasValue ?
                new ObjectParameter("piintBranchFrom", piintBranchFrom) :
                new ObjectParameter("piintBranchFrom", typeof(int));
    
            var pivchItemCodeParameter = pivchItemCode != null ?
                new ObjectParameter("pivchItemCode", pivchItemCode) :
                new ObjectParameter("pivchItemCode", typeof(string));
    
            var piintConditionCodeParameter = piintConditionCode.HasValue ?
                new ObjectParameter("piintConditionCode", piintConditionCode) :
                new ObjectParameter("piintConditionCode", typeof(int));
    
            var piintStatusOutParameter = piintStatusOut.HasValue ?
                new ObjectParameter("piintStatusOut", piintStatusOut) :
                new ObjectParameter("piintStatusOut", typeof(int));
    
            var pivchSupplierCodeParameter = pivchSupplierCode != null ?
                new ObjectParameter("pivchSupplierCode", pivchSupplierCode) :
                new ObjectParameter("pivchSupplierCode", typeof(string));
    
            var pivchPICParameter = pivchPIC != null ?
                new ObjectParameter("pivchPIC", pivchPIC) :
                new ObjectParameter("pivchPIC", typeof(string));
    
            var pivchInputByParameter = pivchInputBy != null ?
                new ObjectParameter("pivchInputBy", pivchInputBy) :
                new ObjectParameter("pivchInputBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemOutInsert", pidtmDateOutParameter, piintBranchFromParameter, pivchItemCodeParameter, piintConditionCodeParameter, piintStatusOutParameter, pivchSupplierCodeParameter, pivchPICParameter, pivchInputByParameter);
        }
    
        public virtual int spITItemOutList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemOutList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spITItemOutUpdate(string pivchItemOutCode, Nullable<System.DateTime> pidtmDateOut, Nullable<int> piintBranchFrom, string pivchItemCode, Nullable<int> piintConditionCode, Nullable<int> piintStatusOut, string pivchSupplierCode, string pivchPIC, string pivchInputBy)
        {
            var pivchItemOutCodeParameter = pivchItemOutCode != null ?
                new ObjectParameter("pivchItemOutCode", pivchItemOutCode) :
                new ObjectParameter("pivchItemOutCode", typeof(string));
    
            var pidtmDateOutParameter = pidtmDateOut.HasValue ?
                new ObjectParameter("pidtmDateOut", pidtmDateOut) :
                new ObjectParameter("pidtmDateOut", typeof(System.DateTime));
    
            var piintBranchFromParameter = piintBranchFrom.HasValue ?
                new ObjectParameter("piintBranchFrom", piintBranchFrom) :
                new ObjectParameter("piintBranchFrom", typeof(int));
    
            var pivchItemCodeParameter = pivchItemCode != null ?
                new ObjectParameter("pivchItemCode", pivchItemCode) :
                new ObjectParameter("pivchItemCode", typeof(string));
    
            var piintConditionCodeParameter = piintConditionCode.HasValue ?
                new ObjectParameter("piintConditionCode", piintConditionCode) :
                new ObjectParameter("piintConditionCode", typeof(int));
    
            var piintStatusOutParameter = piintStatusOut.HasValue ?
                new ObjectParameter("piintStatusOut", piintStatusOut) :
                new ObjectParameter("piintStatusOut", typeof(int));
    
            var pivchSupplierCodeParameter = pivchSupplierCode != null ?
                new ObjectParameter("pivchSupplierCode", pivchSupplierCode) :
                new ObjectParameter("pivchSupplierCode", typeof(string));
    
            var pivchPICParameter = pivchPIC != null ?
                new ObjectParameter("pivchPIC", pivchPIC) :
                new ObjectParameter("pivchPIC", typeof(string));
    
            var pivchInputByParameter = pivchInputBy != null ?
                new ObjectParameter("pivchInputBy", pivchInputBy) :
                new ObjectParameter("pivchInputBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemOutUpdate", pivchItemOutCodeParameter, pidtmDateOutParameter, piintBranchFromParameter, pivchItemCodeParameter, piintConditionCodeParameter, piintStatusOutParameter, pivchSupplierCodeParameter, pivchPICParameter, pivchInputByParameter);
        }
    
        public virtual int spITItemOutUpdateStatus(string pivchItemOutCode, string pivchStatus, Nullable<int> piintApprovalState, string pivchInputID)
        {
            var pivchItemOutCodeParameter = pivchItemOutCode != null ?
                new ObjectParameter("pivchItemOutCode", pivchItemOutCode) :
                new ObjectParameter("pivchItemOutCode", typeof(string));
    
            var pivchStatusParameter = pivchStatus != null ?
                new ObjectParameter("pivchStatus", pivchStatus) :
                new ObjectParameter("pivchStatus", typeof(string));
    
            var piintApprovalStateParameter = piintApprovalState.HasValue ?
                new ObjectParameter("piintApprovalState", piintApprovalState) :
                new ObjectParameter("piintApprovalState", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemOutUpdateStatus", pivchItemOutCodeParameter, pivchStatusParameter, piintApprovalStateParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITItemOutView_Result> spITItemOutView(string pivchItemOutCode)
        {
            var pivchItemOutCodeParameter = pivchItemOutCode != null ?
                new ObjectParameter("pivchItemOutCode", pivchItemOutCode) :
                new ObjectParameter("pivchItemOutCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITItemOutView_Result>("spITItemOutView", pivchItemOutCodeParameter);
        }
    
        public virtual int spITItemTransDetailDelete(string pivchItemTransDetailCode, string pivchItemTransCode)
        {
            var pivchItemTransDetailCodeParameter = pivchItemTransDetailCode != null ?
                new ObjectParameter("pivchItemTransDetailCode", pivchItemTransDetailCode) :
                new ObjectParameter("pivchItemTransDetailCode", typeof(string));
    
            var pivchItemTransCodeParameter = pivchItemTransCode != null ?
                new ObjectParameter("pivchItemTransCode", pivchItemTransCode) :
                new ObjectParameter("pivchItemTransCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemTransDetailDelete", pivchItemTransDetailCodeParameter, pivchItemTransCodeParameter);
        }
    
        public virtual int spITItemTransDetailInsert(string pivchItemTransCode, string pivchItemCode, Nullable<int> piintConditionCode, string pivchUsedBy, string pivchPrivilegeCode, string pivchInputID)
        {
            var pivchItemTransCodeParameter = pivchItemTransCode != null ?
                new ObjectParameter("pivchItemTransCode", pivchItemTransCode) :
                new ObjectParameter("pivchItemTransCode", typeof(string));
    
            var pivchItemCodeParameter = pivchItemCode != null ?
                new ObjectParameter("pivchItemCode", pivchItemCode) :
                new ObjectParameter("pivchItemCode", typeof(string));
    
            var piintConditionCodeParameter = piintConditionCode.HasValue ?
                new ObjectParameter("piintConditionCode", piintConditionCode) :
                new ObjectParameter("piintConditionCode", typeof(int));
    
            var pivchUsedByParameter = pivchUsedBy != null ?
                new ObjectParameter("pivchUsedBy", pivchUsedBy) :
                new ObjectParameter("pivchUsedBy", typeof(string));
    
            var pivchPrivilegeCodeParameter = pivchPrivilegeCode != null ?
                new ObjectParameter("pivchPrivilegeCode", pivchPrivilegeCode) :
                new ObjectParameter("pivchPrivilegeCode", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemTransDetailInsert", pivchItemTransCodeParameter, pivchItemCodeParameter, piintConditionCodeParameter, pivchUsedByParameter, pivchPrivilegeCodeParameter, pivchInputIDParameter);
        }
    
        public virtual int spITItemTransDetailList(string pivchItemTransCode, string pivchWhereBy)
        {
            var pivchItemTransCodeParameter = pivchItemTransCode != null ?
                new ObjectParameter("pivchItemTransCode", pivchItemTransCode) :
                new ObjectParameter("pivchItemTransCode", typeof(string));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemTransDetailList", pivchItemTransCodeParameter, pivchWhereByParameter);
        }
    
        public virtual int spITItemTransDetailUpdate(string pivchItemTransDetailCode, string pivchItemTransCode, string pivchItemCode, Nullable<int> piintConditionCode, string pivchUsedBy, string pivchPrivilegeCode, string pivchInputID)
        {
            var pivchItemTransDetailCodeParameter = pivchItemTransDetailCode != null ?
                new ObjectParameter("pivchItemTransDetailCode", pivchItemTransDetailCode) :
                new ObjectParameter("pivchItemTransDetailCode", typeof(string));
    
            var pivchItemTransCodeParameter = pivchItemTransCode != null ?
                new ObjectParameter("pivchItemTransCode", pivchItemTransCode) :
                new ObjectParameter("pivchItemTransCode", typeof(string));
    
            var pivchItemCodeParameter = pivchItemCode != null ?
                new ObjectParameter("pivchItemCode", pivchItemCode) :
                new ObjectParameter("pivchItemCode", typeof(string));
    
            var piintConditionCodeParameter = piintConditionCode.HasValue ?
                new ObjectParameter("piintConditionCode", piintConditionCode) :
                new ObjectParameter("piintConditionCode", typeof(int));
    
            var pivchUsedByParameter = pivchUsedBy != null ?
                new ObjectParameter("pivchUsedBy", pivchUsedBy) :
                new ObjectParameter("pivchUsedBy", typeof(string));
    
            var pivchPrivilegeCodeParameter = pivchPrivilegeCode != null ?
                new ObjectParameter("pivchPrivilegeCode", pivchPrivilegeCode) :
                new ObjectParameter("pivchPrivilegeCode", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemTransDetailUpdate", pivchItemTransDetailCodeParameter, pivchItemTransCodeParameter, pivchItemCodeParameter, piintConditionCodeParameter, pivchUsedByParameter, pivchPrivilegeCodeParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITItemTransDetailView_Result> spITItemTransDetailView(string pivchItemTransDetailCode, string pivchItemTransCode)
        {
            var pivchItemTransDetailCodeParameter = pivchItemTransDetailCode != null ?
                new ObjectParameter("pivchItemTransDetailCode", pivchItemTransDetailCode) :
                new ObjectParameter("pivchItemTransDetailCode", typeof(string));
    
            var pivchItemTransCodeParameter = pivchItemTransCode != null ?
                new ObjectParameter("pivchItemTransCode", pivchItemTransCode) :
                new ObjectParameter("pivchItemTransCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITItemTransDetailView_Result>("spITItemTransDetailView", pivchItemTransDetailCodeParameter, pivchItemTransCodeParameter);
        }
    
        public virtual int spITItemTransInsert(ObjectParameter povchItemTransCode, Nullable<int> piintBranchFrom, Nullable<int> piintBranchTo, Nullable<System.DateTime> pidtmDateTrans, string pivchInputID)
        {
            var piintBranchFromParameter = piintBranchFrom.HasValue ?
                new ObjectParameter("piintBranchFrom", piintBranchFrom) :
                new ObjectParameter("piintBranchFrom", typeof(int));
    
            var piintBranchToParameter = piintBranchTo.HasValue ?
                new ObjectParameter("piintBranchTo", piintBranchTo) :
                new ObjectParameter("piintBranchTo", typeof(int));
    
            var pidtmDateTransParameter = pidtmDateTrans.HasValue ?
                new ObjectParameter("pidtmDateTrans", pidtmDateTrans) :
                new ObjectParameter("pidtmDateTrans", typeof(System.DateTime));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemTransInsert", povchItemTransCode, piintBranchFromParameter, piintBranchToParameter, pidtmDateTransParameter, pivchInputIDParameter);
        }
    
        public virtual int spITItemTransList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemTransList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spITItemTransUpdate(string pivchItemTransCode, Nullable<int> piintBranchFrom, Nullable<int> piintBranchTo, Nullable<System.DateTime> pidtmDateTrans, string pivchInputID)
        {
            var pivchItemTransCodeParameter = pivchItemTransCode != null ?
                new ObjectParameter("pivchItemTransCode", pivchItemTransCode) :
                new ObjectParameter("pivchItemTransCode", typeof(string));
    
            var piintBranchFromParameter = piintBranchFrom.HasValue ?
                new ObjectParameter("piintBranchFrom", piintBranchFrom) :
                new ObjectParameter("piintBranchFrom", typeof(int));
    
            var piintBranchToParameter = piintBranchTo.HasValue ?
                new ObjectParameter("piintBranchTo", piintBranchTo) :
                new ObjectParameter("piintBranchTo", typeof(int));
    
            var pidtmDateTransParameter = pidtmDateTrans.HasValue ?
                new ObjectParameter("pidtmDateTrans", pidtmDateTrans) :
                new ObjectParameter("pidtmDateTrans", typeof(System.DateTime));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemTransUpdate", pivchItemTransCodeParameter, piintBranchFromParameter, piintBranchToParameter, pidtmDateTransParameter, pivchInputIDParameter);
        }
    
        public virtual int spITItemTransUpdateStatus(string pivchItemTransCode, string pivchStatus, Nullable<int> piintApprovalState, string pivchInputID)
        {
            var pivchItemTransCodeParameter = pivchItemTransCode != null ?
                new ObjectParameter("pivchItemTransCode", pivchItemTransCode) :
                new ObjectParameter("pivchItemTransCode", typeof(string));
    
            var pivchStatusParameter = pivchStatus != null ?
                new ObjectParameter("pivchStatus", pivchStatus) :
                new ObjectParameter("pivchStatus", typeof(string));
    
            var piintApprovalStateParameter = piintApprovalState.HasValue ?
                new ObjectParameter("piintApprovalState", piintApprovalState) :
                new ObjectParameter("piintApprovalState", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemTransUpdateStatus", pivchItemTransCodeParameter, pivchStatusParameter, piintApprovalStateParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITItemTransView_Result> spITItemTransView(string pivchItemTransCode)
        {
            var pivchItemTransCodeParameter = pivchItemTransCode != null ?
                new ObjectParameter("pivchItemTransCode", pivchItemTransCode) :
                new ObjectParameter("pivchItemTransCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITItemTransView_Result>("spITItemTransView", pivchItemTransCodeParameter);
        }
    
        public virtual int spITItemTypeInsert(string pivchItemTypeCode, string pivchItemTypeName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pivchItemTypeNameParameter = pivchItemTypeName != null ?
                new ObjectParameter("pivchItemTypeName", pivchItemTypeName) :
                new ObjectParameter("pivchItemTypeName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemTypeInsert", pivchItemTypeCodeParameter, pivchItemTypeNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITItemType_Result> spITItemTypeList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITItemType_Result>("spITItemTypeList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spITItemTypeUpdate(string pivchItemTypeCode, string pivchItemTypeName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pivchItemTypeNameParameter = pivchItemTypeName != null ?
                new ObjectParameter("pivchItemTypeName", pivchItemTypeName) :
                new ObjectParameter("pivchItemTypeName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemTypeUpdate", pivchItemTypeCodeParameter, pivchItemTypeNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITItemTypeView_Result> spITItemTypeView(string pivchItemTypeCode)
        {
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITItemTypeView_Result>("spITItemTypeView", pivchItemTypeCodeParameter);
        }
    
        public virtual int spITItemUpdate(string pivchItemCode, string pivchDescription, Nullable<int> piintConditionCode, string pivchInputBy)
        {
            var pivchItemCodeParameter = pivchItemCode != null ?
                new ObjectParameter("pivchItemCode", pivchItemCode) :
                new ObjectParameter("pivchItemCode", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var piintConditionCodeParameter = piintConditionCode.HasValue ?
                new ObjectParameter("piintConditionCode", piintConditionCode) :
                new ObjectParameter("piintConditionCode", typeof(int));
    
            var pivchInputByParameter = pivchInputBy != null ?
                new ObjectParameter("pivchInputBy", pivchInputBy) :
                new ObjectParameter("pivchInputBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITItemUpdate", pivchItemCodeParameter, pivchDescriptionParameter, piintConditionCodeParameter, pivchInputByParameter);
        }
    
        public virtual ObjectResult<spITItemView_Result> spITItemView(string pivchItemCode)
        {
            var pivchItemCodeParameter = pivchItemCode != null ?
                new ObjectParameter("pivchItemCode", pivchItemCode) :
                new ObjectParameter("pivchItemCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITItemView_Result>("spITItemView", pivchItemCodeParameter);
        }
    
        public virtual int spITMailReminderDelete(Nullable<int> piintReminderId)
        {
            var piintReminderIdParameter = piintReminderId.HasValue ?
                new ObjectParameter("piintReminderId", piintReminderId) :
                new ObjectParameter("piintReminderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITMailReminderDelete", piintReminderIdParameter);
        }
    
        public virtual int spITMailReminderFileDetailDelete(Nullable<int> piintReminderId, Nullable<int> piintFileId)
        {
            var piintReminderIdParameter = piintReminderId.HasValue ?
                new ObjectParameter("piintReminderId", piintReminderId) :
                new ObjectParameter("piintReminderId", typeof(int));
    
            var piintFileIdParameter = piintFileId.HasValue ?
                new ObjectParameter("piintFileId", piintFileId) :
                new ObjectParameter("piintFileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITMailReminderFileDetailDelete", piintReminderIdParameter, piintFileIdParameter);
        }
    
        public virtual int spITMailReminderFileDetailInsert(Nullable<int> piintReminderId, Nullable<int> piintSequence, string pivchFileName, string pivchNewFileName, string pivchDescription, string pivchInputID)
        {
            var piintReminderIdParameter = piintReminderId.HasValue ?
                new ObjectParameter("piintReminderId", piintReminderId) :
                new ObjectParameter("piintReminderId", typeof(int));
    
            var piintSequenceParameter = piintSequence.HasValue ?
                new ObjectParameter("piintSequence", piintSequence) :
                new ObjectParameter("piintSequence", typeof(int));
    
            var pivchFileNameParameter = pivchFileName != null ?
                new ObjectParameter("pivchFileName", pivchFileName) :
                new ObjectParameter("pivchFileName", typeof(string));
    
            var pivchNewFileNameParameter = pivchNewFileName != null ?
                new ObjectParameter("pivchNewFileName", pivchNewFileName) :
                new ObjectParameter("pivchNewFileName", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITMailReminderFileDetailInsert", piintReminderIdParameter, piintSequenceParameter, pivchFileNameParameter, pivchNewFileNameParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITMailReminderFileDetail_Result> spITMailReminderFileDetailList(Nullable<int> piintReminderId, string pivchWhereBy)
        {
            var piintReminderIdParameter = piintReminderId.HasValue ?
                new ObjectParameter("piintReminderId", piintReminderId) :
                new ObjectParameter("piintReminderId", typeof(int));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITMailReminderFileDetail_Result>("spITMailReminderFileDetailList", piintReminderIdParameter, pivchWhereByParameter);
        }
    
        public virtual ObjectResult<spITMailReminderFileDetailView_Result> spITMailReminderFileDetailView(Nullable<int> piintFileId, Nullable<int> piintReminderId)
        {
            var piintFileIdParameter = piintFileId.HasValue ?
                new ObjectParameter("piintFileId", piintFileId) :
                new ObjectParameter("piintFileId", typeof(int));
    
            var piintReminderIdParameter = piintReminderId.HasValue ?
                new ObjectParameter("piintReminderId", piintReminderId) :
                new ObjectParameter("piintReminderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITMailReminderFileDetailView_Result>("spITMailReminderFileDetailView", piintFileIdParameter, piintReminderIdParameter);
        }
    
        public virtual int spITMailReminderInsert(ObjectParameter pointReminderId, string pivchSubject, string pivchBody, string pivchDescription, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchSubjectParameter = pivchSubject != null ?
                new ObjectParameter("pivchSubject", pivchSubject) :
                new ObjectParameter("pivchSubject", typeof(string));
    
            var pivchBodyParameter = pivchBody != null ?
                new ObjectParameter("pivchBody", pivchBody) :
                new ObjectParameter("pivchBody", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITMailReminderInsert", pointReminderId, pivchSubjectParameter, pivchBodyParameter, pivchDescriptionParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITMailReminderList_Result> spITMailReminderList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITMailReminderList_Result>("spITMailReminderList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spITMailReminderScheduleDetailDelete(Nullable<int> piintReminderId, Nullable<int> piintScheduleId)
        {
            var piintReminderIdParameter = piintReminderId.HasValue ?
                new ObjectParameter("piintReminderId", piintReminderId) :
                new ObjectParameter("piintReminderId", typeof(int));
    
            var piintScheduleIdParameter = piintScheduleId.HasValue ?
                new ObjectParameter("piintScheduleId", piintScheduleId) :
                new ObjectParameter("piintScheduleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITMailReminderScheduleDetailDelete", piintReminderIdParameter, piintScheduleIdParameter);
        }
    
        public virtual int spITMailReminderScheduleDetailInsert(Nullable<int> piintReminderId, string pivchMailTo, Nullable<System.DateTime> pidtmStartDate, Nullable<System.DateTime> pidtmEndDate, string pivchIntervalBy, Nullable<int> piintIntervalRange, string pivchIntervalHour, string pivchIntervalMinute, string pivchDescription, string pivchInputID)
        {
            var piintReminderIdParameter = piintReminderId.HasValue ?
                new ObjectParameter("piintReminderId", piintReminderId) :
                new ObjectParameter("piintReminderId", typeof(int));
    
            var pivchMailToParameter = pivchMailTo != null ?
                new ObjectParameter("pivchMailTo", pivchMailTo) :
                new ObjectParameter("pivchMailTo", typeof(string));
    
            var pidtmStartDateParameter = pidtmStartDate.HasValue ?
                new ObjectParameter("pidtmStartDate", pidtmStartDate) :
                new ObjectParameter("pidtmStartDate", typeof(System.DateTime));
    
            var pidtmEndDateParameter = pidtmEndDate.HasValue ?
                new ObjectParameter("pidtmEndDate", pidtmEndDate) :
                new ObjectParameter("pidtmEndDate", typeof(System.DateTime));
    
            var pivchIntervalByParameter = pivchIntervalBy != null ?
                new ObjectParameter("pivchIntervalBy", pivchIntervalBy) :
                new ObjectParameter("pivchIntervalBy", typeof(string));
    
            var piintIntervalRangeParameter = piintIntervalRange.HasValue ?
                new ObjectParameter("piintIntervalRange", piintIntervalRange) :
                new ObjectParameter("piintIntervalRange", typeof(int));
    
            var pivchIntervalHourParameter = pivchIntervalHour != null ?
                new ObjectParameter("pivchIntervalHour", pivchIntervalHour) :
                new ObjectParameter("pivchIntervalHour", typeof(string));
    
            var pivchIntervalMinuteParameter = pivchIntervalMinute != null ?
                new ObjectParameter("pivchIntervalMinute", pivchIntervalMinute) :
                new ObjectParameter("pivchIntervalMinute", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITMailReminderScheduleDetailInsert", piintReminderIdParameter, pivchMailToParameter, pidtmStartDateParameter, pidtmEndDateParameter, pivchIntervalByParameter, piintIntervalRangeParameter, pivchIntervalHourParameter, pivchIntervalMinuteParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITMailSchedulerList_Result> spITMailReminderScheduleDetailList(Nullable<int> piintReminderId, string pivchWhereBy)
        {
            var piintReminderIdParameter = piintReminderId.HasValue ?
                new ObjectParameter("piintReminderId", piintReminderId) :
                new ObjectParameter("piintReminderId", typeof(int));
    
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITMailSchedulerList_Result>("spITMailReminderScheduleDetailList", piintReminderIdParameter, pivchWhereByParameter);
        }
    
        public virtual int spITMailReminderScheduleDetailSending(Nullable<int> piintScheduleId)
        {
            var piintScheduleIdParameter = piintScheduleId.HasValue ?
                new ObjectParameter("piintScheduleId", piintScheduleId) :
                new ObjectParameter("piintScheduleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITMailReminderScheduleDetailSending", piintScheduleIdParameter);
        }
    
        public virtual int spITMailReminderScheduleDetailUpdate(Nullable<int> piintScheduleId, Nullable<int> piintReminderId, string pivchMailTo, Nullable<System.DateTime> pidtmStartDate, Nullable<System.DateTime> pidtmEndDate, string pivchIntervalBy, Nullable<int> piintIntervalRange, string pivchIntervalHour, string pivchIntervalMinute, string pivchDescription, string pivchInputID)
        {
            var piintScheduleIdParameter = piintScheduleId.HasValue ?
                new ObjectParameter("piintScheduleId", piintScheduleId) :
                new ObjectParameter("piintScheduleId", typeof(int));
    
            var piintReminderIdParameter = piintReminderId.HasValue ?
                new ObjectParameter("piintReminderId", piintReminderId) :
                new ObjectParameter("piintReminderId", typeof(int));
    
            var pivchMailToParameter = pivchMailTo != null ?
                new ObjectParameter("pivchMailTo", pivchMailTo) :
                new ObjectParameter("pivchMailTo", typeof(string));
    
            var pidtmStartDateParameter = pidtmStartDate.HasValue ?
                new ObjectParameter("pidtmStartDate", pidtmStartDate) :
                new ObjectParameter("pidtmStartDate", typeof(System.DateTime));
    
            var pidtmEndDateParameter = pidtmEndDate.HasValue ?
                new ObjectParameter("pidtmEndDate", pidtmEndDate) :
                new ObjectParameter("pidtmEndDate", typeof(System.DateTime));
    
            var pivchIntervalByParameter = pivchIntervalBy != null ?
                new ObjectParameter("pivchIntervalBy", pivchIntervalBy) :
                new ObjectParameter("pivchIntervalBy", typeof(string));
    
            var piintIntervalRangeParameter = piintIntervalRange.HasValue ?
                new ObjectParameter("piintIntervalRange", piintIntervalRange) :
                new ObjectParameter("piintIntervalRange", typeof(int));
    
            var pivchIntervalHourParameter = pivchIntervalHour != null ?
                new ObjectParameter("pivchIntervalHour", pivchIntervalHour) :
                new ObjectParameter("pivchIntervalHour", typeof(string));
    
            var pivchIntervalMinuteParameter = pivchIntervalMinute != null ?
                new ObjectParameter("pivchIntervalMinute", pivchIntervalMinute) :
                new ObjectParameter("pivchIntervalMinute", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITMailReminderScheduleDetailUpdate", piintScheduleIdParameter, piintReminderIdParameter, pivchMailToParameter, pidtmStartDateParameter, pidtmEndDateParameter, pivchIntervalByParameter, piintIntervalRangeParameter, pivchIntervalHourParameter, pivchIntervalMinuteParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITMailReminderScheduleDetailView_Result> spITMailReminderScheduleDetailView(Nullable<int> piintScheduleId, Nullable<int> piintReminderId)
        {
            var piintScheduleIdParameter = piintScheduleId.HasValue ?
                new ObjectParameter("piintScheduleId", piintScheduleId) :
                new ObjectParameter("piintScheduleId", typeof(int));
    
            var piintReminderIdParameter = piintReminderId.HasValue ?
                new ObjectParameter("piintReminderId", piintReminderId) :
                new ObjectParameter("piintReminderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITMailReminderScheduleDetailView_Result>("spITMailReminderScheduleDetailView", piintScheduleIdParameter, piintReminderIdParameter);
        }
    
        public virtual int spITMailReminderUpdate(Nullable<int> piintReminderId, string pivchSubject, string pivchBody, string pivchDescription, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var piintReminderIdParameter = piintReminderId.HasValue ?
                new ObjectParameter("piintReminderId", piintReminderId) :
                new ObjectParameter("piintReminderId", typeof(int));
    
            var pivchSubjectParameter = pivchSubject != null ?
                new ObjectParameter("pivchSubject", pivchSubject) :
                new ObjectParameter("pivchSubject", typeof(string));
    
            var pivchBodyParameter = pivchBody != null ?
                new ObjectParameter("pivchBody", pivchBody) :
                new ObjectParameter("pivchBody", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITMailReminderUpdate", piintReminderIdParameter, pivchSubjectParameter, pivchBodyParameter, pivchDescriptionParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITMailReminderView_Result> spITMailReminderView(Nullable<int> piintReminderId)
        {
            var piintReminderIdParameter = piintReminderId.HasValue ?
                new ObjectParameter("piintReminderId", piintReminderId) :
                new ObjectParameter("piintReminderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITMailReminderView_Result>("spITMailReminderView", piintReminderIdParameter);
        }
    
        public virtual int spITProblemTypeInsert(string pivchProblemTypeCode, string pivchProblemTypeName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchProblemTypeCodeParameter = pivchProblemTypeCode != null ?
                new ObjectParameter("pivchProblemTypeCode", pivchProblemTypeCode) :
                new ObjectParameter("pivchProblemTypeCode", typeof(string));
    
            var pivchProblemTypeNameParameter = pivchProblemTypeName != null ?
                new ObjectParameter("pivchProblemTypeName", pivchProblemTypeName) :
                new ObjectParameter("pivchProblemTypeName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITProblemTypeInsert", pivchProblemTypeCodeParameter, pivchProblemTypeNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITProblemTypeList_Result> spITProblemTypeList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITProblemTypeList_Result>("spITProblemTypeList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spITProblemTypeUpdate(string pivchProblemTypeCode, string pivchProblemTypeName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchProblemTypeCodeParameter = pivchProblemTypeCode != null ?
                new ObjectParameter("pivchProblemTypeCode", pivchProblemTypeCode) :
                new ObjectParameter("pivchProblemTypeCode", typeof(string));
    
            var pivchProblemTypeNameParameter = pivchProblemTypeName != null ?
                new ObjectParameter("pivchProblemTypeName", pivchProblemTypeName) :
                new ObjectParameter("pivchProblemTypeName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spITProblemTypeUpdate", pivchProblemTypeCodeParameter, pivchProblemTypeNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITProblemTypeView_Result> spITProblemTypeView(string pivchProblemTypeCode)
        {
            var pivchProblemTypeCodeParameter = pivchProblemTypeCode != null ?
                new ObjectParameter("pivchProblemTypeCode", pivchProblemTypeCode) :
                new ObjectParameter("pivchProblemTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITProblemTypeView_Result>("spITProblemTypeView", pivchProblemTypeCodeParameter);
        }
    
        public virtual int spMappingApprovalBranchDelete(Nullable<int> piintApprovalBranchID)
        {
            var piintApprovalBranchIDParameter = piintApprovalBranchID.HasValue ?
                new ObjectParameter("piintApprovalBranchID", piintApprovalBranchID) :
                new ObjectParameter("piintApprovalBranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMappingApprovalBranchDelete", piintApprovalBranchIDParameter);
        }
    
        public virtual int spMappingApprovalBranchInsert(Nullable<int> piintApprovalID, Nullable<int> piintBranchID, string pivchInputID)
        {
            var piintApprovalIDParameter = piintApprovalID.HasValue ?
                new ObjectParameter("piintApprovalID", piintApprovalID) :
                new ObjectParameter("piintApprovalID", typeof(int));
    
            var piintBranchIDParameter = piintBranchID.HasValue ?
                new ObjectParameter("piintBranchID", piintBranchID) :
                new ObjectParameter("piintBranchID", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMappingApprovalBranchInsert", piintApprovalIDParameter, piintBranchIDParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spMappingApprovalBranchList_Result> spMappingApprovalBranchList(Nullable<int> piintApprovalID)
        {
            var piintApprovalIDParameter = piintApprovalID.HasValue ?
                new ObjectParameter("piintApprovalID", piintApprovalID) :
                new ObjectParameter("piintApprovalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMappingApprovalBranchList_Result>("spMappingApprovalBranchList", piintApprovalIDParameter);
        }
    
        public virtual int spMappingApprovalDelete(Nullable<int> piintApprovalID)
        {
            var piintApprovalIDParameter = piintApprovalID.HasValue ?
                new ObjectParameter("piintApprovalID", piintApprovalID) :
                new ObjectParameter("piintApprovalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMappingApprovalDelete", piintApprovalIDParameter);
        }
    
        public virtual int spMappingApprovalEmailDelete(Nullable<int> piintApprovalEmailID)
        {
            var piintApprovalEmailIDParameter = piintApprovalEmailID.HasValue ?
                new ObjectParameter("piintApprovalEmailID", piintApprovalEmailID) :
                new ObjectParameter("piintApprovalEmailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMappingApprovalEmailDelete", piintApprovalEmailIDParameter);
        }
    
        public virtual int spMappingApprovalEmailInsert(Nullable<int> piintApprovalID, string pivchUserIdEmail, string pivchInputID)
        {
            var piintApprovalIDParameter = piintApprovalID.HasValue ?
                new ObjectParameter("piintApprovalID", piintApprovalID) :
                new ObjectParameter("piintApprovalID", typeof(int));
    
            var pivchUserIdEmailParameter = pivchUserIdEmail != null ?
                new ObjectParameter("pivchUserIdEmail", pivchUserIdEmail) :
                new ObjectParameter("pivchUserIdEmail", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMappingApprovalEmailInsert", piintApprovalIDParameter, pivchUserIdEmailParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spMappingApprovalEmailList_Result> spMappingApprovalEmailList(Nullable<int> piintApprovalID)
        {
            var piintApprovalIDParameter = piintApprovalID.HasValue ?
                new ObjectParameter("piintApprovalID", piintApprovalID) :
                new ObjectParameter("piintApprovalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMappingApprovalEmailList_Result>("spMappingApprovalEmailList", piintApprovalIDParameter);
        }
    
        public virtual int spMappingApprovalInsert(Nullable<int> piintMenuId, string pivchDepartementCode, string pivchParentCode, string pivchUserIdApproval, Nullable<bool> pibitIsBranch, Nullable<int> piintState, Nullable<int> piintToState, string pivchStateDescription, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var piintMenuIdParameter = piintMenuId.HasValue ?
                new ObjectParameter("piintMenuId", piintMenuId) :
                new ObjectParameter("piintMenuId", typeof(int));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchParentCodeParameter = pivchParentCode != null ?
                new ObjectParameter("pivchParentCode", pivchParentCode) :
                new ObjectParameter("pivchParentCode", typeof(string));
    
            var pivchUserIdApprovalParameter = pivchUserIdApproval != null ?
                new ObjectParameter("pivchUserIdApproval", pivchUserIdApproval) :
                new ObjectParameter("pivchUserIdApproval", typeof(string));
    
            var pibitIsBranchParameter = pibitIsBranch.HasValue ?
                new ObjectParameter("pibitIsBranch", pibitIsBranch) :
                new ObjectParameter("pibitIsBranch", typeof(bool));
    
            var piintStateParameter = piintState.HasValue ?
                new ObjectParameter("piintState", piintState) :
                new ObjectParameter("piintState", typeof(int));
    
            var piintToStateParameter = piintToState.HasValue ?
                new ObjectParameter("piintToState", piintToState) :
                new ObjectParameter("piintToState", typeof(int));
    
            var pivchStateDescriptionParameter = pivchStateDescription != null ?
                new ObjectParameter("pivchStateDescription", pivchStateDescription) :
                new ObjectParameter("pivchStateDescription", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMappingApprovalInsert", piintMenuIdParameter, pivchDepartementCodeParameter, pivchParentCodeParameter, pivchUserIdApprovalParameter, pibitIsBranchParameter, piintStateParameter, piintToStateParameter, pivchStateDescriptionParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spMappingApprovalList_Result> spMappingApprovalList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMappingApprovalList_Result>("spMappingApprovalList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spMappingApprovalUpdate(Nullable<int> piintApprovalId, Nullable<int> piintMenuId, string pivchDepartementCode, string pivchParentCode, string pivchUserIdApproval, Nullable<bool> pibitIsBranch, Nullable<int> piintState, Nullable<int> piintToState, string pivchStateDescription, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var piintApprovalIdParameter = piintApprovalId.HasValue ?
                new ObjectParameter("piintApprovalId", piintApprovalId) :
                new ObjectParameter("piintApprovalId", typeof(int));
    
            var piintMenuIdParameter = piintMenuId.HasValue ?
                new ObjectParameter("piintMenuId", piintMenuId) :
                new ObjectParameter("piintMenuId", typeof(int));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchParentCodeParameter = pivchParentCode != null ?
                new ObjectParameter("pivchParentCode", pivchParentCode) :
                new ObjectParameter("pivchParentCode", typeof(string));
    
            var pivchUserIdApprovalParameter = pivchUserIdApproval != null ?
                new ObjectParameter("pivchUserIdApproval", pivchUserIdApproval) :
                new ObjectParameter("pivchUserIdApproval", typeof(string));
    
            var pibitIsBranchParameter = pibitIsBranch.HasValue ?
                new ObjectParameter("pibitIsBranch", pibitIsBranch) :
                new ObjectParameter("pibitIsBranch", typeof(bool));
    
            var piintStateParameter = piintState.HasValue ?
                new ObjectParameter("piintState", piintState) :
                new ObjectParameter("piintState", typeof(int));
    
            var piintToStateParameter = piintToState.HasValue ?
                new ObjectParameter("piintToState", piintToState) :
                new ObjectParameter("piintToState", typeof(int));
    
            var pivchStateDescriptionParameter = pivchStateDescription != null ?
                new ObjectParameter("pivchStateDescription", pivchStateDescription) :
                new ObjectParameter("pivchStateDescription", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMappingApprovalUpdate", piintApprovalIdParameter, piintMenuIdParameter, pivchDepartementCodeParameter, pivchParentCodeParameter, pivchUserIdApprovalParameter, pibitIsBranchParameter, piintStateParameter, piintToStateParameter, pivchStateDescriptionParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spMappingApprovalView_Result> spMappingApprovalView(Nullable<int> piintApprovalID)
        {
            var piintApprovalIDParameter = piintApprovalID.HasValue ?
                new ObjectParameter("piintApprovalID", piintApprovalID) :
                new ObjectParameter("piintApprovalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMappingApprovalView_Result>("spMappingApprovalView", piintApprovalIDParameter);
        }
    
        public virtual int spMeasurementInsert(string pivchMeasurementCode, string pivchMeasurementName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchMeasurementCodeParameter = pivchMeasurementCode != null ?
                new ObjectParameter("pivchMeasurementCode", pivchMeasurementCode) :
                new ObjectParameter("pivchMeasurementCode", typeof(string));
    
            var pivchMeasurementNameParameter = pivchMeasurementName != null ?
                new ObjectParameter("pivchMeasurementName", pivchMeasurementName) :
                new ObjectParameter("pivchMeasurementName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMeasurementInsert", pivchMeasurementCodeParameter, pivchMeasurementNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spMeasurementList_Result> spMeasurementList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMeasurementList_Result>("spMeasurementList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spMeasurementUpdate(string pivchMeasurementCode, string pivchMeasurementName, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchMeasurementCodeParameter = pivchMeasurementCode != null ?
                new ObjectParameter("pivchMeasurementCode", pivchMeasurementCode) :
                new ObjectParameter("pivchMeasurementCode", typeof(string));
    
            var pivchMeasurementNameParameter = pivchMeasurementName != null ?
                new ObjectParameter("pivchMeasurementName", pivchMeasurementName) :
                new ObjectParameter("pivchMeasurementName", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMeasurementUpdate", pivchMeasurementCodeParameter, pivchMeasurementNameParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spMeasurementView_Result> spMeasurementView(string pivchMeasurementCode)
        {
            var pivchMeasurementCodeParameter = pivchMeasurementCode != null ?
                new ObjectParameter("pivchMeasurementCode", pivchMeasurementCode) :
                new ObjectParameter("pivchMeasurementCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMeasurementView_Result>("spMeasurementView", pivchMeasurementCodeParameter);
        }
    
        public virtual int spParameterInsert(string pivchParameterCode, string pivchParameterCodeCond, string pivchParameterGroupCode, string pivchParameterName, string pivchDescription, string pivchValue, Nullable<bool> pibitIsActive, Nullable<bool> pibitIsDelete, string pivchInputID)
        {
            var pivchParameterCodeParameter = pivchParameterCode != null ?
                new ObjectParameter("pivchParameterCode", pivchParameterCode) :
                new ObjectParameter("pivchParameterCode", typeof(string));
    
            var pivchParameterCodeCondParameter = pivchParameterCodeCond != null ?
                new ObjectParameter("pivchParameterCodeCond", pivchParameterCodeCond) :
                new ObjectParameter("pivchParameterCodeCond", typeof(string));
    
            var pivchParameterGroupCodeParameter = pivchParameterGroupCode != null ?
                new ObjectParameter("pivchParameterGroupCode", pivchParameterGroupCode) :
                new ObjectParameter("pivchParameterGroupCode", typeof(string));
    
            var pivchParameterNameParameter = pivchParameterName != null ?
                new ObjectParameter("pivchParameterName", pivchParameterName) :
                new ObjectParameter("pivchParameterName", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchValueParameter = pivchValue != null ?
                new ObjectParameter("pivchValue", pivchValue) :
                new ObjectParameter("pivchValue", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pibitIsDeleteParameter = pibitIsDelete.HasValue ?
                new ObjectParameter("pibitIsDelete", pibitIsDelete) :
                new ObjectParameter("pibitIsDelete", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spParameterInsert", pivchParameterCodeParameter, pivchParameterCodeCondParameter, pivchParameterGroupCodeParameter, pivchParameterNameParameter, pivchDescriptionParameter, pivchValueParameter, pibitIsActiveParameter, pibitIsDeleteParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spParameterList_List> spParameterList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spParameterList_List>("spParameterList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spParameterUpdate(string pivchParameterCodeOld, string pivchParameterCodeCondOld, string pivchParameterCode, string pivchParameterCodeCond, string pivchParameterGroupCode, string pivchParameterName, string pivchDescription, string pivchValue, Nullable<bool> pibitIsActive, Nullable<bool> pibitIsDelete, string pivchInputID)
        {
            var pivchParameterCodeOldParameter = pivchParameterCodeOld != null ?
                new ObjectParameter("pivchParameterCodeOld", pivchParameterCodeOld) :
                new ObjectParameter("pivchParameterCodeOld", typeof(string));
    
            var pivchParameterCodeCondOldParameter = pivchParameterCodeCondOld != null ?
                new ObjectParameter("pivchParameterCodeCondOld", pivchParameterCodeCondOld) :
                new ObjectParameter("pivchParameterCodeCondOld", typeof(string));
    
            var pivchParameterCodeParameter = pivchParameterCode != null ?
                new ObjectParameter("pivchParameterCode", pivchParameterCode) :
                new ObjectParameter("pivchParameterCode", typeof(string));
    
            var pivchParameterCodeCondParameter = pivchParameterCodeCond != null ?
                new ObjectParameter("pivchParameterCodeCond", pivchParameterCodeCond) :
                new ObjectParameter("pivchParameterCodeCond", typeof(string));
    
            var pivchParameterGroupCodeParameter = pivchParameterGroupCode != null ?
                new ObjectParameter("pivchParameterGroupCode", pivchParameterGroupCode) :
                new ObjectParameter("pivchParameterGroupCode", typeof(string));
    
            var pivchParameterNameParameter = pivchParameterName != null ?
                new ObjectParameter("pivchParameterName", pivchParameterName) :
                new ObjectParameter("pivchParameterName", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchValueParameter = pivchValue != null ?
                new ObjectParameter("pivchValue", pivchValue) :
                new ObjectParameter("pivchValue", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pibitIsDeleteParameter = pibitIsDelete.HasValue ?
                new ObjectParameter("pibitIsDelete", pibitIsDelete) :
                new ObjectParameter("pibitIsDelete", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spParameterUpdate", pivchParameterCodeOldParameter, pivchParameterCodeCondOldParameter, pivchParameterCodeParameter, pivchParameterCodeCondParameter, pivchParameterGroupCodeParameter, pivchParameterNameParameter, pivchDescriptionParameter, pivchValueParameter, pibitIsActiveParameter, pibitIsDeleteParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spParameterView_Result> spParameterView(string pivchParameterCode, string pivchParameterCodeCond)
        {
            var pivchParameterCodeParameter = pivchParameterCode != null ?
                new ObjectParameter("pivchParameterCode", pivchParameterCode) :
                new ObjectParameter("pivchParameterCode", typeof(string));
    
            var pivchParameterCodeCondParameter = pivchParameterCodeCond != null ?
                new ObjectParameter("pivchParameterCodeCond", pivchParameterCodeCond) :
                new ObjectParameter("pivchParameterCodeCond", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spParameterView_Result>("spParameterView", pivchParameterCodeParameter, pivchParameterCodeCondParameter);
        }
    
        public virtual int spPrivilegeInsert(string pivchPrivilegeCode, string pivchPrivilegeName, string pivchPrivilegeShortName, string pivchDepartementCode, string pivchOldCode, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchPrivilegeCodeParameter = pivchPrivilegeCode != null ?
                new ObjectParameter("pivchPrivilegeCode", pivchPrivilegeCode) :
                new ObjectParameter("pivchPrivilegeCode", typeof(string));
    
            var pivchPrivilegeNameParameter = pivchPrivilegeName != null ?
                new ObjectParameter("pivchPrivilegeName", pivchPrivilegeName) :
                new ObjectParameter("pivchPrivilegeName", typeof(string));
    
            var pivchPrivilegeShortNameParameter = pivchPrivilegeShortName != null ?
                new ObjectParameter("pivchPrivilegeShortName", pivchPrivilegeShortName) :
                new ObjectParameter("pivchPrivilegeShortName", typeof(string));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchOldCodeParameter = pivchOldCode != null ?
                new ObjectParameter("pivchOldCode", pivchOldCode) :
                new ObjectParameter("pivchOldCode", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPrivilegeInsert", pivchPrivilegeCodeParameter, pivchPrivilegeNameParameter, pivchPrivilegeShortNameParameter, pivchDepartementCodeParameter, pivchOldCodeParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<getPrevList_Result> spPrivilegeList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPrevList_Result>("spPrivilegeList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spPrivilegeMenuClear(string pivchPrivilegeCode)
        {
            var pivchPrivilegeCodeParameter = pivchPrivilegeCode != null ?
                new ObjectParameter("pivchPrivilegeCode", pivchPrivilegeCode) :
                new ObjectParameter("pivchPrivilegeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPrivilegeMenuClear", pivchPrivilegeCodeParameter);
        }
    
        public virtual ObjectResult<spPrivilegeMenuList_Result> spPrivilegeMenuList(string pivchPrivilegeCode, string pivchUserId)
        {
            var pivchPrivilegeCodeParameter = pivchPrivilegeCode != null ?
                new ObjectParameter("pivchPrivilegeCode", pivchPrivilegeCode) :
                new ObjectParameter("pivchPrivilegeCode", typeof(string));
    
            var pivchUserIdParameter = pivchUserId != null ?
                new ObjectParameter("pivchUserId", pivchUserId) :
                new ObjectParameter("pivchUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPrivilegeMenuList_Result>("spPrivilegeMenuList", pivchPrivilegeCodeParameter, pivchUserIdParameter);
        }
    
        public virtual int spPrivilegeMenuUpdate(string pivchPrivilegeCode, Nullable<int> piintMenuId, Nullable<bool> pibitInsert, Nullable<bool> pibitUpdate, Nullable<bool> pibitDelete, Nullable<bool> pibitView, Nullable<bool> pibitIsAllBranch)
        {
            var pivchPrivilegeCodeParameter = pivchPrivilegeCode != null ?
                new ObjectParameter("pivchPrivilegeCode", pivchPrivilegeCode) :
                new ObjectParameter("pivchPrivilegeCode", typeof(string));
    
            var piintMenuIdParameter = piintMenuId.HasValue ?
                new ObjectParameter("piintMenuId", piintMenuId) :
                new ObjectParameter("piintMenuId", typeof(int));
    
            var pibitInsertParameter = pibitInsert.HasValue ?
                new ObjectParameter("pibitInsert", pibitInsert) :
                new ObjectParameter("pibitInsert", typeof(bool));
    
            var pibitUpdateParameter = pibitUpdate.HasValue ?
                new ObjectParameter("pibitUpdate", pibitUpdate) :
                new ObjectParameter("pibitUpdate", typeof(bool));
    
            var pibitDeleteParameter = pibitDelete.HasValue ?
                new ObjectParameter("pibitDelete", pibitDelete) :
                new ObjectParameter("pibitDelete", typeof(bool));
    
            var pibitViewParameter = pibitView.HasValue ?
                new ObjectParameter("pibitView", pibitView) :
                new ObjectParameter("pibitView", typeof(bool));
    
            var pibitIsAllBranchParameter = pibitIsAllBranch.HasValue ?
                new ObjectParameter("pibitIsAllBranch", pibitIsAllBranch) :
                new ObjectParameter("pibitIsAllBranch", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPrivilegeMenuUpdate", pivchPrivilegeCodeParameter, piintMenuIdParameter, pibitInsertParameter, pibitUpdateParameter, pibitDeleteParameter, pibitViewParameter, pibitIsAllBranchParameter);
        }
    
        public virtual int spPrivilegeUpdate(string pivchPrivilegeCode, string pivchPrivilegeName, string pivchPrivilegeShortName, string pivchDepartementCode, string pivchOldCode, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchPrivilegeCodeParameter = pivchPrivilegeCode != null ?
                new ObjectParameter("pivchPrivilegeCode", pivchPrivilegeCode) :
                new ObjectParameter("pivchPrivilegeCode", typeof(string));
    
            var pivchPrivilegeNameParameter = pivchPrivilegeName != null ?
                new ObjectParameter("pivchPrivilegeName", pivchPrivilegeName) :
                new ObjectParameter("pivchPrivilegeName", typeof(string));
    
            var pivchPrivilegeShortNameParameter = pivchPrivilegeShortName != null ?
                new ObjectParameter("pivchPrivilegeShortName", pivchPrivilegeShortName) :
                new ObjectParameter("pivchPrivilegeShortName", typeof(string));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchOldCodeParameter = pivchOldCode != null ?
                new ObjectParameter("pivchOldCode", pivchOldCode) :
                new ObjectParameter("pivchOldCode", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPrivilegeUpdate", pivchPrivilegeCodeParameter, pivchPrivilegeNameParameter, pivchPrivilegeShortNameParameter, pivchDepartementCodeParameter, pivchOldCodeParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spPrivilegeView_Result> spPrivilegeView(string pivchPrivilegeCode)
        {
            var pivchPrivilegeCodeParameter = pivchPrivilegeCode != null ?
                new ObjectParameter("pivchPrivilegeCode", pivchPrivilegeCode) :
                new ObjectParameter("pivchPrivilegeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPrivilegeView_Result>("spPrivilegeView", pivchPrivilegeCodeParameter);
        }
    
        public virtual int spRefundRecipientsList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRefundRecipientsList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spRefundRecipientsUpdate(Nullable<int> piintPersonId, string pivchPersonNIK, Nullable<bool> pibitIsEKTP, string pivchInputID)
        {
            var piintPersonIdParameter = piintPersonId.HasValue ?
                new ObjectParameter("piintPersonId", piintPersonId) :
                new ObjectParameter("piintPersonId", typeof(int));
    
            var pivchPersonNIKParameter = pivchPersonNIK != null ?
                new ObjectParameter("pivchPersonNIK", pivchPersonNIK) :
                new ObjectParameter("pivchPersonNIK", typeof(string));
    
            var pibitIsEKTPParameter = pibitIsEKTP.HasValue ?
                new ObjectParameter("pibitIsEKTP", pibitIsEKTP) :
                new ObjectParameter("pibitIsEKTP", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRefundRecipientsUpdate", piintPersonIdParameter, pivchPersonNIKParameter, pibitIsEKTPParameter, pivchInputIDParameter);
        }
    
        public virtual int spRefundRecipientsView(Nullable<int> piintPersonId)
        {
            var piintPersonIdParameter = piintPersonId.HasValue ?
                new ObjectParameter("piintPersonId", piintPersonId) :
                new ObjectParameter("piintPersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRefundRecipientsView", piintPersonIdParameter);
        }
    
        public virtual ObjectResult<spRptGAItemAdjustDetail_Result> spRptGAItemAdjustDetail(string pivchItemAdjustID)
        {
            var pivchItemAdjustIDParameter = pivchItemAdjustID != null ?
                new ObjectParameter("pivchItemAdjustID", pivchItemAdjustID) :
                new ObjectParameter("pivchItemAdjustID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAItemAdjustDetail_Result>("spRptGAItemAdjustDetail", pivchItemAdjustIDParameter);
        }
    
        public virtual ObjectResult<spRptGAItemAdjustHeader_Result> spRptGAItemAdjustHeader(string pivchItemAdjustID, string pivchUserID)
        {
            var pivchItemAdjustIDParameter = pivchItemAdjustID != null ?
                new ObjectParameter("pivchItemAdjustID", pivchItemAdjustID) :
                new ObjectParameter("pivchItemAdjustID", typeof(string));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAItemAdjustHeader_Result>("spRptGAItemAdjustHeader", pivchItemAdjustIDParameter, pivchUserIDParameter);
        }
    
        public virtual ObjectResult<spRptGAItemRequestDetail_Result> spRptGAItemRequestDetail(string pivchItemRequestID)
        {
            var pivchItemRequestIDParameter = pivchItemRequestID != null ?
                new ObjectParameter("pivchItemRequestID", pivchItemRequestID) :
                new ObjectParameter("pivchItemRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAItemRequestDetail_Result>("spRptGAItemRequestDetail", pivchItemRequestIDParameter);
        }
    
        public virtual ObjectResult<spRptGAItemRequestHeader_Result> spRptGAItemRequestHeader(string pivchItemRequestID, string pivchUserID)
        {
            var pivchItemRequestIDParameter = pivchItemRequestID != null ?
                new ObjectParameter("pivchItemRequestID", pivchItemRequestID) :
                new ObjectParameter("pivchItemRequestID", typeof(string));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAItemRequestHeader_Result>("spRptGAItemRequestHeader", pivchItemRequestIDParameter, pivchUserIDParameter);
        }
    
        public virtual ObjectResult<spRptGAItemStockAssetDetail_Result> spRptGAItemStockAssetDetail(string pivchBranchID, string pivchDepartementCode, string pivchItemCategoryCode, string pivchItemGroupCode, string pivchItemTypeCode, string pivchItemBarcode, string pivchItemUser)
        {
            var pivchBranchIDParameter = pivchBranchID != null ?
                new ObjectParameter("pivchBranchID", pivchBranchID) :
                new ObjectParameter("pivchBranchID", typeof(string));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchItemCategoryCodeParameter = pivchItemCategoryCode != null ?
                new ObjectParameter("pivchItemCategoryCode", pivchItemCategoryCode) :
                new ObjectParameter("pivchItemCategoryCode", typeof(string));
    
            var pivchItemGroupCodeParameter = pivchItemGroupCode != null ?
                new ObjectParameter("pivchItemGroupCode", pivchItemGroupCode) :
                new ObjectParameter("pivchItemGroupCode", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pivchItemBarcodeParameter = pivchItemBarcode != null ?
                new ObjectParameter("pivchItemBarcode", pivchItemBarcode) :
                new ObjectParameter("pivchItemBarcode", typeof(string));
    
            var pivchItemUserParameter = pivchItemUser != null ?
                new ObjectParameter("pivchItemUser", pivchItemUser) :
                new ObjectParameter("pivchItemUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAItemStockAssetDetail_Result>("spRptGAItemStockAssetDetail", pivchBranchIDParameter, pivchDepartementCodeParameter, pivchItemCategoryCodeParameter, pivchItemGroupCodeParameter, pivchItemTypeCodeParameter, pivchItemBarcodeParameter, pivchItemUserParameter);
        }
    
        public virtual ObjectResult<spRptGAItemStockAssetHeader_Result> spRptGAItemStockAssetHeader(string pivchBranchID, string pivchDepartementCode, string pivchItemCategoryCode, string pivchItemGroupCode, string pivchItemTypeCode, string pivchItemBarcode, string pivchItemUser, string pivchUserID)
        {
            var pivchBranchIDParameter = pivchBranchID != null ?
                new ObjectParameter("pivchBranchID", pivchBranchID) :
                new ObjectParameter("pivchBranchID", typeof(string));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchItemCategoryCodeParameter = pivchItemCategoryCode != null ?
                new ObjectParameter("pivchItemCategoryCode", pivchItemCategoryCode) :
                new ObjectParameter("pivchItemCategoryCode", typeof(string));
    
            var pivchItemGroupCodeParameter = pivchItemGroupCode != null ?
                new ObjectParameter("pivchItemGroupCode", pivchItemGroupCode) :
                new ObjectParameter("pivchItemGroupCode", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pivchItemBarcodeParameter = pivchItemBarcode != null ?
                new ObjectParameter("pivchItemBarcode", pivchItemBarcode) :
                new ObjectParameter("pivchItemBarcode", typeof(string));
    
            var pivchItemUserParameter = pivchItemUser != null ?
                new ObjectParameter("pivchItemUser", pivchItemUser) :
                new ObjectParameter("pivchItemUser", typeof(string));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAItemStockAssetHeader_Result>("spRptGAItemStockAssetHeader", pivchBranchIDParameter, pivchDepartementCodeParameter, pivchItemCategoryCodeParameter, pivchItemGroupCodeParameter, pivchItemTypeCodeParameter, pivchItemBarcodeParameter, pivchItemUserParameter, pivchUserIDParameter);
        }
    
        public virtual ObjectResult<spRptGAItemStockNonAssetDetail_Result> spRptGAItemStockNonAssetDetail(string pivchItemCategoryCode, string pivchItemGroupCode, string pivchItemTypeCode, Nullable<int> piintDate, Nullable<int> piintMonth, Nullable<int> piintYear)
        {
            var pivchItemCategoryCodeParameter = pivchItemCategoryCode != null ?
                new ObjectParameter("pivchItemCategoryCode", pivchItemCategoryCode) :
                new ObjectParameter("pivchItemCategoryCode", typeof(string));
    
            var pivchItemGroupCodeParameter = pivchItemGroupCode != null ?
                new ObjectParameter("pivchItemGroupCode", pivchItemGroupCode) :
                new ObjectParameter("pivchItemGroupCode", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var piintDateParameter = piintDate.HasValue ?
                new ObjectParameter("piintDate", piintDate) :
                new ObjectParameter("piintDate", typeof(int));
    
            var piintMonthParameter = piintMonth.HasValue ?
                new ObjectParameter("piintMonth", piintMonth) :
                new ObjectParameter("piintMonth", typeof(int));
    
            var piintYearParameter = piintYear.HasValue ?
                new ObjectParameter("piintYear", piintYear) :
                new ObjectParameter("piintYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAItemStockNonAssetDetail_Result>("spRptGAItemStockNonAssetDetail", pivchItemCategoryCodeParameter, pivchItemGroupCodeParameter, pivchItemTypeCodeParameter, piintDateParameter, piintMonthParameter, piintYearParameter);
        }
    
        public virtual ObjectResult<spRptGAItemStockNonAssetDetail2_Result> spRptGAItemStockNonAssetDetail2(string pivchBranchID, string pivchDepartementCode, string pivchItemCategoryCode, string pivchItemGroupCode, string pivchItemTypeCode, Nullable<System.DateTime> pidtmDateStart, Nullable<System.DateTime> pidtmDateEnd)
        {
            var pivchBranchIDParameter = pivchBranchID != null ?
                new ObjectParameter("pivchBranchID", pivchBranchID) :
                new ObjectParameter("pivchBranchID", typeof(string));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchItemCategoryCodeParameter = pivchItemCategoryCode != null ?
                new ObjectParameter("pivchItemCategoryCode", pivchItemCategoryCode) :
                new ObjectParameter("pivchItemCategoryCode", typeof(string));
    
            var pivchItemGroupCodeParameter = pivchItemGroupCode != null ?
                new ObjectParameter("pivchItemGroupCode", pivchItemGroupCode) :
                new ObjectParameter("pivchItemGroupCode", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pidtmDateStartParameter = pidtmDateStart.HasValue ?
                new ObjectParameter("pidtmDateStart", pidtmDateStart) :
                new ObjectParameter("pidtmDateStart", typeof(System.DateTime));
    
            var pidtmDateEndParameter = pidtmDateEnd.HasValue ?
                new ObjectParameter("pidtmDateEnd", pidtmDateEnd) :
                new ObjectParameter("pidtmDateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAItemStockNonAssetDetail2_Result>("spRptGAItemStockNonAssetDetail2", pivchBranchIDParameter, pivchDepartementCodeParameter, pivchItemCategoryCodeParameter, pivchItemGroupCodeParameter, pivchItemTypeCodeParameter, pidtmDateStartParameter, pidtmDateEndParameter);
        }
    
        public virtual ObjectResult<spRptGAItemStockNonAssetDetail2Dwi_Result> spRptGAItemStockNonAssetDetail2Dwi(string pivchBranchID, string pivchDepartementCode, string pivchItemCategoryCode, string pivchItemGroupCode, string pivchItemTypeCode, Nullable<int> piintDate, Nullable<int> piintMonth, Nullable<int> piintYear)
        {
            var pivchBranchIDParameter = pivchBranchID != null ?
                new ObjectParameter("pivchBranchID", pivchBranchID) :
                new ObjectParameter("pivchBranchID", typeof(string));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchItemCategoryCodeParameter = pivchItemCategoryCode != null ?
                new ObjectParameter("pivchItemCategoryCode", pivchItemCategoryCode) :
                new ObjectParameter("pivchItemCategoryCode", typeof(string));
    
            var pivchItemGroupCodeParameter = pivchItemGroupCode != null ?
                new ObjectParameter("pivchItemGroupCode", pivchItemGroupCode) :
                new ObjectParameter("pivchItemGroupCode", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var piintDateParameter = piintDate.HasValue ?
                new ObjectParameter("piintDate", piintDate) :
                new ObjectParameter("piintDate", typeof(int));
    
            var piintMonthParameter = piintMonth.HasValue ?
                new ObjectParameter("piintMonth", piintMonth) :
                new ObjectParameter("piintMonth", typeof(int));
    
            var piintYearParameter = piintYear.HasValue ?
                new ObjectParameter("piintYear", piintYear) :
                new ObjectParameter("piintYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAItemStockNonAssetDetail2Dwi_Result>("spRptGAItemStockNonAssetDetail2Dwi", pivchBranchIDParameter, pivchDepartementCodeParameter, pivchItemCategoryCodeParameter, pivchItemGroupCodeParameter, pivchItemTypeCodeParameter, piintDateParameter, piintMonthParameter, piintYearParameter);
        }
    
        public virtual int spRptGAItemStockNonAssetDetail3(string pivchBranchID, string pivchItemCategoryCode, string pivchItemGroupCode, string pivchItemTypeCode, Nullable<System.DateTime> pidtmDateStart, Nullable<System.DateTime> pidtmDateEnd)
        {
            var pivchBranchIDParameter = pivchBranchID != null ?
                new ObjectParameter("pivchBranchID", pivchBranchID) :
                new ObjectParameter("pivchBranchID", typeof(string));
    
            var pivchItemCategoryCodeParameter = pivchItemCategoryCode != null ?
                new ObjectParameter("pivchItemCategoryCode", pivchItemCategoryCode) :
                new ObjectParameter("pivchItemCategoryCode", typeof(string));
    
            var pivchItemGroupCodeParameter = pivchItemGroupCode != null ?
                new ObjectParameter("pivchItemGroupCode", pivchItemGroupCode) :
                new ObjectParameter("pivchItemGroupCode", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pidtmDateStartParameter = pidtmDateStart.HasValue ?
                new ObjectParameter("pidtmDateStart", pidtmDateStart) :
                new ObjectParameter("pidtmDateStart", typeof(System.DateTime));
    
            var pidtmDateEndParameter = pidtmDateEnd.HasValue ?
                new ObjectParameter("pidtmDateEnd", pidtmDateEnd) :
                new ObjectParameter("pidtmDateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRptGAItemStockNonAssetDetail3", pivchBranchIDParameter, pivchItemCategoryCodeParameter, pivchItemGroupCodeParameter, pivchItemTypeCodeParameter, pidtmDateStartParameter, pidtmDateEndParameter);
        }
    
        public virtual ObjectResult<spRptGAItemStockNonAssetHeader_Result> spRptGAItemStockNonAssetHeader(string pivchItemCategoryCode, string pivchItemGroupCode, string pivchItemTypeCode, Nullable<int> piintDate, Nullable<int> piintMonth, Nullable<int> piintYear, string pivchUserID)
        {
            var pivchItemCategoryCodeParameter = pivchItemCategoryCode != null ?
                new ObjectParameter("pivchItemCategoryCode", pivchItemCategoryCode) :
                new ObjectParameter("pivchItemCategoryCode", typeof(string));
    
            var pivchItemGroupCodeParameter = pivchItemGroupCode != null ?
                new ObjectParameter("pivchItemGroupCode", pivchItemGroupCode) :
                new ObjectParameter("pivchItemGroupCode", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var piintDateParameter = piintDate.HasValue ?
                new ObjectParameter("piintDate", piintDate) :
                new ObjectParameter("piintDate", typeof(int));
    
            var piintMonthParameter = piintMonth.HasValue ?
                new ObjectParameter("piintMonth", piintMonth) :
                new ObjectParameter("piintMonth", typeof(int));
    
            var piintYearParameter = piintYear.HasValue ?
                new ObjectParameter("piintYear", piintYear) :
                new ObjectParameter("piintYear", typeof(int));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAItemStockNonAssetHeader_Result>("spRptGAItemStockNonAssetHeader", pivchItemCategoryCodeParameter, pivchItemGroupCodeParameter, pivchItemTypeCodeParameter, piintDateParameter, piintMonthParameter, piintYearParameter, pivchUserIDParameter);
        }
    
        public virtual ObjectResult<spRptGAItemStockNonAssetHeader2_Result> spRptGAItemStockNonAssetHeader2(string pivchBranchID, string pivchDepartementCode, string pivchItemCategoryCode, string pivchItemGroupCode, string pivchItemTypeCode, Nullable<System.DateTime> pidtmDateStart, Nullable<System.DateTime> pidtmDateEnd, string pivchUserID)
        {
            var pivchBranchIDParameter = pivchBranchID != null ?
                new ObjectParameter("pivchBranchID", pivchBranchID) :
                new ObjectParameter("pivchBranchID", typeof(string));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchItemCategoryCodeParameter = pivchItemCategoryCode != null ?
                new ObjectParameter("pivchItemCategoryCode", pivchItemCategoryCode) :
                new ObjectParameter("pivchItemCategoryCode", typeof(string));
    
            var pivchItemGroupCodeParameter = pivchItemGroupCode != null ?
                new ObjectParameter("pivchItemGroupCode", pivchItemGroupCode) :
                new ObjectParameter("pivchItemGroupCode", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pidtmDateStartParameter = pidtmDateStart.HasValue ?
                new ObjectParameter("pidtmDateStart", pidtmDateStart) :
                new ObjectParameter("pidtmDateStart", typeof(System.DateTime));
    
            var pidtmDateEndParameter = pidtmDateEnd.HasValue ?
                new ObjectParameter("pidtmDateEnd", pidtmDateEnd) :
                new ObjectParameter("pidtmDateEnd", typeof(System.DateTime));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAItemStockNonAssetHeader2_Result>("spRptGAItemStockNonAssetHeader2", pivchBranchIDParameter, pivchDepartementCodeParameter, pivchItemCategoryCodeParameter, pivchItemGroupCodeParameter, pivchItemTypeCodeParameter, pidtmDateStartParameter, pidtmDateEndParameter, pivchUserIDParameter);
        }
    
        public virtual ObjectResult<spRptGAItemStockNonAssetHeader3_Result> spRptGAItemStockNonAssetHeader3(string pivchBranchID, string pivchItemCategoryCode, string pivchItemGroupCode, string pivchItemTypeCode, Nullable<System.DateTime> pidtmDateStart, Nullable<System.DateTime> pidtmDateEnd, string pivchUserID)
        {
            var pivchBranchIDParameter = pivchBranchID != null ?
                new ObjectParameter("pivchBranchID", pivchBranchID) :
                new ObjectParameter("pivchBranchID", typeof(string));
    
            var pivchItemCategoryCodeParameter = pivchItemCategoryCode != null ?
                new ObjectParameter("pivchItemCategoryCode", pivchItemCategoryCode) :
                new ObjectParameter("pivchItemCategoryCode", typeof(string));
    
            var pivchItemGroupCodeParameter = pivchItemGroupCode != null ?
                new ObjectParameter("pivchItemGroupCode", pivchItemGroupCode) :
                new ObjectParameter("pivchItemGroupCode", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pidtmDateStartParameter = pidtmDateStart.HasValue ?
                new ObjectParameter("pidtmDateStart", pidtmDateStart) :
                new ObjectParameter("pidtmDateStart", typeof(System.DateTime));
    
            var pidtmDateEndParameter = pidtmDateEnd.HasValue ?
                new ObjectParameter("pidtmDateEnd", pidtmDateEnd) :
                new ObjectParameter("pidtmDateEnd", typeof(System.DateTime));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAItemStockNonAssetHeader3_Result>("spRptGAItemStockNonAssetHeader3", pivchBranchIDParameter, pivchItemCategoryCodeParameter, pivchItemGroupCodeParameter, pivchItemTypeCodeParameter, pidtmDateStartParameter, pidtmDateEndParameter, pivchUserIDParameter);
        }
    
        public virtual ObjectResult<spRptGAItemStockNonAssetHeader4_Result> spRptGAItemStockNonAssetHeader4(string pivchBranchID, string pivchItemCategoryCode, string pivchItemGroupCode, string pivchItemTypeCode, Nullable<System.DateTime> pidtmDateStart, Nullable<System.DateTime> pidtmDateEnd, string pivchUserID)
        {
            var pivchBranchIDParameter = pivchBranchID != null ?
                new ObjectParameter("pivchBranchID", pivchBranchID) :
                new ObjectParameter("pivchBranchID", typeof(string));
    
            var pivchItemCategoryCodeParameter = pivchItemCategoryCode != null ?
                new ObjectParameter("pivchItemCategoryCode", pivchItemCategoryCode) :
                new ObjectParameter("pivchItemCategoryCode", typeof(string));
    
            var pivchItemGroupCodeParameter = pivchItemGroupCode != null ?
                new ObjectParameter("pivchItemGroupCode", pivchItemGroupCode) :
                new ObjectParameter("pivchItemGroupCode", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pidtmDateStartParameter = pidtmDateStart.HasValue ?
                new ObjectParameter("pidtmDateStart", pidtmDateStart) :
                new ObjectParameter("pidtmDateStart", typeof(System.DateTime));
    
            var pidtmDateEndParameter = pidtmDateEnd.HasValue ?
                new ObjectParameter("pidtmDateEnd", pidtmDateEnd) :
                new ObjectParameter("pidtmDateEnd", typeof(System.DateTime));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAItemStockNonAssetHeader4_Result>("spRptGAItemStockNonAssetHeader4", pivchBranchIDParameter, pivchItemCategoryCodeParameter, pivchItemGroupCodeParameter, pivchItemTypeCodeParameter, pidtmDateStartParameter, pidtmDateEndParameter, pivchUserIDParameter);
        }
    
        public virtual ObjectResult<spRptGAPurchaseOrderDetail_Result> spRptGAPurchaseOrderDetail(string pivchOrderID)
        {
            var pivchOrderIDParameter = pivchOrderID != null ?
                new ObjectParameter("pivchOrderID", pivchOrderID) :
                new ObjectParameter("pivchOrderID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAPurchaseOrderDetail_Result>("spRptGAPurchaseOrderDetail", pivchOrderIDParameter);
        }
    
        public virtual ObjectResult<spRptGAPurchaseOrderHeader_Result> spRptGAPurchaseOrderHeader(string pivchOrderID, string pivchUserID)
        {
            var pivchOrderIDParameter = pivchOrderID != null ?
                new ObjectParameter("pivchOrderID", pivchOrderID) :
                new ObjectParameter("pivchOrderID", typeof(string));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAPurchaseOrderHeader_Result>("spRptGAPurchaseOrderHeader", pivchOrderIDParameter, pivchUserIDParameter);
        }
    
        public virtual ObjectResult<spRptGAPurchaseReceivedDetail_Result> spRptGAPurchaseReceivedDetail(string pivchReceivedID)
        {
            var pivchReceivedIDParameter = pivchReceivedID != null ?
                new ObjectParameter("pivchReceivedID", pivchReceivedID) :
                new ObjectParameter("pivchReceivedID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAPurchaseReceivedDetail_Result>("spRptGAPurchaseReceivedDetail", pivchReceivedIDParameter);
        }
    
        public virtual ObjectResult<spRptGAPurchaseReceivedHeader_Result> spRptGAPurchaseReceivedHeader(string pivchReceivedID, string pivchUserID)
        {
            var pivchReceivedIDParameter = pivchReceivedID != null ?
                new ObjectParameter("pivchReceivedID", pivchReceivedID) :
                new ObjectParameter("pivchReceivedID", typeof(string));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAPurchaseReceivedHeader_Result>("spRptGAPurchaseReceivedHeader", pivchReceivedIDParameter, pivchUserIDParameter);
        }
    
        public virtual ObjectResult<spRptGAPurchaseRequestDetail_Result> spRptGAPurchaseRequestDetail(string pivchRequestID)
        {
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAPurchaseRequestDetail_Result>("spRptGAPurchaseRequestDetail", pivchRequestIDParameter);
        }
    
        public virtual ObjectResult<spRptGAPurchaseRequestHeader_Result> spRptGAPurchaseRequestHeader(string pivchRequestID, string pivchUserID)
        {
            var pivchRequestIDParameter = pivchRequestID != null ?
                new ObjectParameter("pivchRequestID", pivchRequestID) :
                new ObjectParameter("pivchRequestID", typeof(string));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAPurchaseRequestHeader_Result>("spRptGAPurchaseRequestHeader", pivchRequestIDParameter, pivchUserIDParameter);
        }
    
        public virtual int spRptGAVehicleTripDailyByVehicleDetail(string pivchVehicleCode, Nullable<System.DateTime> pidtmDate)
        {
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            var pidtmDateParameter = pidtmDate.HasValue ?
                new ObjectParameter("pidtmDate", pidtmDate) :
                new ObjectParameter("pidtmDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRptGAVehicleTripDailyByVehicleDetail", pivchVehicleCodeParameter, pidtmDateParameter);
        }
    
        public virtual int spRptGAVehicleTripDailyByVehicleHeader(string pivchVehicleCode, Nullable<System.DateTime> pidtmDate, string pivchUserID)
        {
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            var pidtmDateParameter = pidtmDate.HasValue ?
                new ObjectParameter("pidtmDate", pidtmDate) :
                new ObjectParameter("pidtmDate", typeof(System.DateTime));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRptGAVehicleTripDailyByVehicleHeader", pivchVehicleCodeParameter, pidtmDateParameter, pivchUserIDParameter);
        }
    
        public virtual int spRptGAVehicleTripDetail(string pivchTripCode)
        {
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRptGAVehicleTripDetail", pivchTripCodeParameter);
        }
    
        public virtual int spRptGAVehicleTripDetailFuel(string pivchTripCode)
        {
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRptGAVehicleTripDetailFuel", pivchTripCodeParameter);
        }
    
        public virtual int spRptGAVehicleTripDetailKM(string pivchTripCode)
        {
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRptGAVehicleTripDetailKM", pivchTripCodeParameter);
        }
    
        public virtual int spRptGAVehicleTripGPSDailyByVehicleDetail(string pivchVehicleCode, Nullable<System.DateTime> pidtmDate)
        {
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            var pidtmDateParameter = pidtmDate.HasValue ?
                new ObjectParameter("pidtmDate", pidtmDate) :
                new ObjectParameter("pidtmDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRptGAVehicleTripGPSDailyByVehicleDetail", pivchVehicleCodeParameter, pidtmDateParameter);
        }
    
        public virtual int spRptGAVehicleTripGPSDetail(string pivchVehicleCode, string pidtmFromDate, string pidtmToDate)
        {
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            var pidtmFromDateParameter = pidtmFromDate != null ?
                new ObjectParameter("pidtmFromDate", pidtmFromDate) :
                new ObjectParameter("pidtmFromDate", typeof(string));
    
            var pidtmToDateParameter = pidtmToDate != null ?
                new ObjectParameter("pidtmToDate", pidtmToDate) :
                new ObjectParameter("pidtmToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRptGAVehicleTripGPSDetail", pivchVehicleCodeParameter, pidtmFromDateParameter, pidtmToDateParameter);
        }
    
        public virtual int spRptGAVehicleTripGPSHeader(string pivchVehicleCode, string pidtmFromDate, string pidtmToDate, string pivchUserID)
        {
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            var pidtmFromDateParameter = pidtmFromDate != null ?
                new ObjectParameter("pidtmFromDate", pidtmFromDate) :
                new ObjectParameter("pidtmFromDate", typeof(string));
    
            var pidtmToDateParameter = pidtmToDate != null ?
                new ObjectParameter("pidtmToDate", pidtmToDate) :
                new ObjectParameter("pidtmToDate", typeof(string));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRptGAVehicleTripGPSHeader", pivchVehicleCodeParameter, pidtmFromDateParameter, pidtmToDateParameter, pivchUserIDParameter);
        }
    
        public virtual int spRptGAVehicleTripHeader(string pivchTripCode, string pivchUserID)
        {
            var pivchTripCodeParameter = pivchTripCode != null ?
                new ObjectParameter("pivchTripCode", pivchTripCode) :
                new ObjectParameter("pivchTripCode", typeof(string));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRptGAVehicleTripHeader", pivchTripCodeParameter, pivchUserIDParameter);
        }
    
        public virtual int spRptGAVehicleTripMonthlyByVehicleDetail(string pivchVehicleCode, Nullable<System.DateTime> pidtmDateStart, Nullable<System.DateTime> pidtmDateEnd)
        {
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            var pidtmDateStartParameter = pidtmDateStart.HasValue ?
                new ObjectParameter("pidtmDateStart", pidtmDateStart) :
                new ObjectParameter("pidtmDateStart", typeof(System.DateTime));
    
            var pidtmDateEndParameter = pidtmDateEnd.HasValue ?
                new ObjectParameter("pidtmDateEnd", pidtmDateEnd) :
                new ObjectParameter("pidtmDateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRptGAVehicleTripMonthlyByVehicleDetail", pivchVehicleCodeParameter, pidtmDateStartParameter, pidtmDateEndParameter);
        }
    
        public virtual int spRptGAVehicleTripMonthlyByVehicleHeader(string pivchVehicleCode, Nullable<System.DateTime> pidtmDateStart, Nullable<System.DateTime> pidtmDateEnd, string pivchUserID)
        {
            var pivchVehicleCodeParameter = pivchVehicleCode != null ?
                new ObjectParameter("pivchVehicleCode", pivchVehicleCode) :
                new ObjectParameter("pivchVehicleCode", typeof(string));
    
            var pidtmDateStartParameter = pidtmDateStart.HasValue ?
                new ObjectParameter("pidtmDateStart", pidtmDateStart) :
                new ObjectParameter("pidtmDateStart", typeof(System.DateTime));
    
            var pidtmDateEndParameter = pidtmDateEnd.HasValue ?
                new ObjectParameter("pidtmDateEnd", pidtmDateEnd) :
                new ObjectParameter("pidtmDateEnd", typeof(System.DateTime));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRptGAVehicleTripMonthlyByVehicleHeader", pivchVehicleCodeParameter, pidtmDateStartParameter, pidtmDateEndParameter, pivchUserIDParameter);
        }
    
        public virtual int spRptGAVehicleTripMonthlyDetail(Nullable<System.DateTime> pidtmDateStart, Nullable<System.DateTime> pidtmDateEnd)
        {
            var pidtmDateStartParameter = pidtmDateStart.HasValue ?
                new ObjectParameter("pidtmDateStart", pidtmDateStart) :
                new ObjectParameter("pidtmDateStart", typeof(System.DateTime));
    
            var pidtmDateEndParameter = pidtmDateEnd.HasValue ?
                new ObjectParameter("pidtmDateEnd", pidtmDateEnd) :
                new ObjectParameter("pidtmDateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRptGAVehicleTripMonthlyDetail", pidtmDateStartParameter, pidtmDateEndParameter);
        }
    
        public virtual ObjectResult<spRptGAVehicleTripMonthlyHeader_Result> spRptGAVehicleTripMonthlyHeader(Nullable<System.DateTime> pidtmDateStart, Nullable<System.DateTime> pidtmDateEnd, string pivchUserID)
        {
            var pidtmDateStartParameter = pidtmDateStart.HasValue ?
                new ObjectParameter("pidtmDateStart", pidtmDateStart) :
                new ObjectParameter("pidtmDateStart", typeof(System.DateTime));
    
            var pidtmDateEndParameter = pidtmDateEnd.HasValue ?
                new ObjectParameter("pidtmDateEnd", pidtmDateEnd) :
                new ObjectParameter("pidtmDateEnd", typeof(System.DateTime));
    
            var pivchUserIDParameter = pivchUserID != null ?
                new ObjectParameter("pivchUserID", pivchUserID) :
                new ObjectParameter("pivchUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAVehicleTripMonthlyHeader_Result>("spRptGAVehicleTripMonthlyHeader", pidtmDateStartParameter, pidtmDateEndParameter, pivchUserIDParameter);
        }
    
        public virtual int spScheduleTaskDelete(string pivchScheduleNo)
        {
            var pivchScheduleNoParameter = pivchScheduleNo != null ?
                new ObjectParameter("pivchScheduleNo", pivchScheduleNo) :
                new ObjectParameter("pivchScheduleNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spScheduleTaskDelete", pivchScheduleNoParameter);
        }
    
        public virtual int spScheduleTaskFinish(string pivchScheduleNo)
        {
            var pivchScheduleNoParameter = pivchScheduleNo != null ?
                new ObjectParameter("pivchScheduleNo", pivchScheduleNo) :
                new ObjectParameter("pivchScheduleNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spScheduleTaskFinish", pivchScheduleNoParameter);
        }
    
        public virtual int spScheduleTaskInsert(string pivchScheduleType, string pivchScheduleTitle, Nullable<System.DateTime> pidtmStartDate, Nullable<System.DateTime> pidtmEndDate, string pivchIntervalBy, Nullable<int> piintIntervalRange, string pivchIntervalHour, string pivchIntervalMinute, string pivchDescription, string pivchInputID)
        {
            var pivchScheduleTypeParameter = pivchScheduleType != null ?
                new ObjectParameter("pivchScheduleType", pivchScheduleType) :
                new ObjectParameter("pivchScheduleType", typeof(string));
    
            var pivchScheduleTitleParameter = pivchScheduleTitle != null ?
                new ObjectParameter("pivchScheduleTitle", pivchScheduleTitle) :
                new ObjectParameter("pivchScheduleTitle", typeof(string));
    
            var pidtmStartDateParameter = pidtmStartDate.HasValue ?
                new ObjectParameter("pidtmStartDate", pidtmStartDate) :
                new ObjectParameter("pidtmStartDate", typeof(System.DateTime));
    
            var pidtmEndDateParameter = pidtmEndDate.HasValue ?
                new ObjectParameter("pidtmEndDate", pidtmEndDate) :
                new ObjectParameter("pidtmEndDate", typeof(System.DateTime));
    
            var pivchIntervalByParameter = pivchIntervalBy != null ?
                new ObjectParameter("pivchIntervalBy", pivchIntervalBy) :
                new ObjectParameter("pivchIntervalBy", typeof(string));
    
            var piintIntervalRangeParameter = piintIntervalRange.HasValue ?
                new ObjectParameter("piintIntervalRange", piintIntervalRange) :
                new ObjectParameter("piintIntervalRange", typeof(int));
    
            var pivchIntervalHourParameter = pivchIntervalHour != null ?
                new ObjectParameter("pivchIntervalHour", pivchIntervalHour) :
                new ObjectParameter("pivchIntervalHour", typeof(string));
    
            var pivchIntervalMinuteParameter = pivchIntervalMinute != null ?
                new ObjectParameter("pivchIntervalMinute", pivchIntervalMinute) :
                new ObjectParameter("pivchIntervalMinute", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spScheduleTaskInsert", pivchScheduleTypeParameter, pivchScheduleTitleParameter, pidtmStartDateParameter, pidtmEndDateParameter, pivchIntervalByParameter, piintIntervalRangeParameter, pivchIntervalHourParameter, pivchIntervalMinuteParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual int spScheduleTaskList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spScheduleTaskList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spScheduleTaskNextList(string pivchWhereBy)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spScheduleTaskNextList", pivchWhereByParameter);
        }
    
        public virtual int spScheduleTaskUpdate(string pivchScheduleNo, string pivchScheduleType, string pivchScheduleTitle, Nullable<System.DateTime> pidtmStartDate, Nullable<System.DateTime> pidtmEndDate, string pivchIntervalBy, Nullable<int> piintIntervalRange, string pivchIntervalHour, string pivchIntervalMinute, string pivchStatus, string pivchDescription, string pivchInputID)
        {
            var pivchScheduleNoParameter = pivchScheduleNo != null ?
                new ObjectParameter("pivchScheduleNo", pivchScheduleNo) :
                new ObjectParameter("pivchScheduleNo", typeof(string));
    
            var pivchScheduleTypeParameter = pivchScheduleType != null ?
                new ObjectParameter("pivchScheduleType", pivchScheduleType) :
                new ObjectParameter("pivchScheduleType", typeof(string));
    
            var pivchScheduleTitleParameter = pivchScheduleTitle != null ?
                new ObjectParameter("pivchScheduleTitle", pivchScheduleTitle) :
                new ObjectParameter("pivchScheduleTitle", typeof(string));
    
            var pidtmStartDateParameter = pidtmStartDate.HasValue ?
                new ObjectParameter("pidtmStartDate", pidtmStartDate) :
                new ObjectParameter("pidtmStartDate", typeof(System.DateTime));
    
            var pidtmEndDateParameter = pidtmEndDate.HasValue ?
                new ObjectParameter("pidtmEndDate", pidtmEndDate) :
                new ObjectParameter("pidtmEndDate", typeof(System.DateTime));
    
            var pivchIntervalByParameter = pivchIntervalBy != null ?
                new ObjectParameter("pivchIntervalBy", pivchIntervalBy) :
                new ObjectParameter("pivchIntervalBy", typeof(string));
    
            var piintIntervalRangeParameter = piintIntervalRange.HasValue ?
                new ObjectParameter("piintIntervalRange", piintIntervalRange) :
                new ObjectParameter("piintIntervalRange", typeof(int));
    
            var pivchIntervalHourParameter = pivchIntervalHour != null ?
                new ObjectParameter("pivchIntervalHour", pivchIntervalHour) :
                new ObjectParameter("pivchIntervalHour", typeof(string));
    
            var pivchIntervalMinuteParameter = pivchIntervalMinute != null ?
                new ObjectParameter("pivchIntervalMinute", pivchIntervalMinute) :
                new ObjectParameter("pivchIntervalMinute", typeof(string));
    
            var pivchStatusParameter = pivchStatus != null ?
                new ObjectParameter("pivchStatus", pivchStatus) :
                new ObjectParameter("pivchStatus", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spScheduleTaskUpdate", pivchScheduleNoParameter, pivchScheduleTypeParameter, pivchScheduleTitleParameter, pidtmStartDateParameter, pidtmEndDateParameter, pivchIntervalByParameter, piintIntervalRangeParameter, pivchIntervalHourParameter, pivchIntervalMinuteParameter, pivchStatusParameter, pivchDescriptionParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spScheduleTaskView_Result> spScheduleTaskView(string pivchScheduleNo)
        {
            var pivchScheduleNoParameter = pivchScheduleNo != null ?
                new ObjectParameter("pivchScheduleNo", pivchScheduleNo) :
                new ObjectParameter("pivchScheduleNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spScheduleTaskView_Result>("spScheduleTaskView", pivchScheduleNoParameter);
        }
    
        public virtual int spSendApprovalMail(string workFlowCode, Nullable<int> workFlowIdx, Nullable<int> workFlowCreatedBranch, string workFlowDescription)
        {
            var workFlowCodeParameter = workFlowCode != null ?
                new ObjectParameter("WorkFlowCode", workFlowCode) :
                new ObjectParameter("WorkFlowCode", typeof(string));
    
            var workFlowIdxParameter = workFlowIdx.HasValue ?
                new ObjectParameter("WorkFlowIdx", workFlowIdx) :
                new ObjectParameter("WorkFlowIdx", typeof(int));
    
            var workFlowCreatedBranchParameter = workFlowCreatedBranch.HasValue ?
                new ObjectParameter("WorkFlowCreatedBranch", workFlowCreatedBranch) :
                new ObjectParameter("WorkFlowCreatedBranch", typeof(int));
    
            var workFlowDescriptionParameter = workFlowDescription != null ?
                new ObjectParameter("WorkFlowDescription", workFlowDescription) :
                new ObjectParameter("WorkFlowDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSendApprovalMail", workFlowCodeParameter, workFlowIdxParameter, workFlowCreatedBranchParameter, workFlowDescriptionParameter);
        }
    
        public virtual int spSendApprovedMail(string workFlowCode, string workFlowCreatedBy, string workFlowUpdateBy, string workFlowDescription)
        {
            var workFlowCodeParameter = workFlowCode != null ?
                new ObjectParameter("WorkFlowCode", workFlowCode) :
                new ObjectParameter("WorkFlowCode", typeof(string));
    
            var workFlowCreatedByParameter = workFlowCreatedBy != null ?
                new ObjectParameter("WorkFlowCreatedBy", workFlowCreatedBy) :
                new ObjectParameter("WorkFlowCreatedBy", typeof(string));
    
            var workFlowUpdateByParameter = workFlowUpdateBy != null ?
                new ObjectParameter("WorkFlowUpdateBy", workFlowUpdateBy) :
                new ObjectParameter("WorkFlowUpdateBy", typeof(string));
    
            var workFlowDescriptionParameter = workFlowDescription != null ?
                new ObjectParameter("WorkFlowDescription", workFlowDescription) :
                new ObjectParameter("WorkFlowDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSendApprovedMail", workFlowCodeParameter, workFlowCreatedByParameter, workFlowUpdateByParameter, workFlowDescriptionParameter);
        }
    
        public virtual int spSendRejectedMail(string workFlowCode, string workFlowCreatedBy, string workFlowUpdateBy, string workFlowDescription)
        {
            var workFlowCodeParameter = workFlowCode != null ?
                new ObjectParameter("WorkFlowCode", workFlowCode) :
                new ObjectParameter("WorkFlowCode", typeof(string));
    
            var workFlowCreatedByParameter = workFlowCreatedBy != null ?
                new ObjectParameter("WorkFlowCreatedBy", workFlowCreatedBy) :
                new ObjectParameter("WorkFlowCreatedBy", typeof(string));
    
            var workFlowUpdateByParameter = workFlowUpdateBy != null ?
                new ObjectParameter("WorkFlowUpdateBy", workFlowUpdateBy) :
                new ObjectParameter("WorkFlowUpdateBy", typeof(string));
    
            var workFlowDescriptionParameter = workFlowDescription != null ?
                new ObjectParameter("WorkFlowDescription", workFlowDescription) :
                new ObjectParameter("WorkFlowDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSendRejectedMail", workFlowCodeParameter, workFlowCreatedByParameter, workFlowUpdateByParameter, workFlowDescriptionParameter);
        }
    
        public virtual int spSetUserLog(string pivchUserId, string pivchIP, string pivchObject, string pivchActivity)
        {
            var pivchUserIdParameter = pivchUserId != null ?
                new ObjectParameter("pivchUserId", pivchUserId) :
                new ObjectParameter("pivchUserId", typeof(string));
    
            var pivchIPParameter = pivchIP != null ?
                new ObjectParameter("pivchIP", pivchIP) :
                new ObjectParameter("pivchIP", typeof(string));
    
            var pivchObjectParameter = pivchObject != null ?
                new ObjectParameter("pivchObject", pivchObject) :
                new ObjectParameter("pivchObject", typeof(string));
    
            var pivchActivityParameter = pivchActivity != null ?
                new ObjectParameter("pivchActivity", pivchActivity) :
                new ObjectParameter("pivchActivity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSetUserLog", pivchUserIdParameter, pivchIPParameter, pivchObjectParameter, pivchActivityParameter);
        }
    
        public virtual int spSupplierInsert(ObjectParameter povchSupplierCode, string pivchSupplierName, string pivchAddress, string pivchCity, string pivchZipCode, string pivchPhone, string pivchNPWP, string pivchState, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchSupplierNameParameter = pivchSupplierName != null ?
                new ObjectParameter("pivchSupplierName", pivchSupplierName) :
                new ObjectParameter("pivchSupplierName", typeof(string));
    
            var pivchAddressParameter = pivchAddress != null ?
                new ObjectParameter("pivchAddress", pivchAddress) :
                new ObjectParameter("pivchAddress", typeof(string));
    
            var pivchCityParameter = pivchCity != null ?
                new ObjectParameter("pivchCity", pivchCity) :
                new ObjectParameter("pivchCity", typeof(string));
    
            var pivchZipCodeParameter = pivchZipCode != null ?
                new ObjectParameter("pivchZipCode", pivchZipCode) :
                new ObjectParameter("pivchZipCode", typeof(string));
    
            var pivchPhoneParameter = pivchPhone != null ?
                new ObjectParameter("pivchPhone", pivchPhone) :
                new ObjectParameter("pivchPhone", typeof(string));
    
            var pivchNPWPParameter = pivchNPWP != null ?
                new ObjectParameter("pivchNPWP", pivchNPWP) :
                new ObjectParameter("pivchNPWP", typeof(string));
    
            var pivchStateParameter = pivchState != null ?
                new ObjectParameter("pivchState", pivchState) :
                new ObjectParameter("pivchState", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSupplierInsert", povchSupplierCode, pivchSupplierNameParameter, pivchAddressParameter, pivchCityParameter, pivchZipCodeParameter, pivchPhoneParameter, pivchNPWPParameter, pivchStateParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spITSupplierList_Result> spSupplierList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITSupplierList_Result>("spSupplierList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spSupplierUpdate(string pivchSupplierCode, string pivchSupplierName, string pivchAddress, string pivchCity, string pivchZipCode, string pivchPhone, string pivchNPWP, string pivchState, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchSupplierCodeParameter = pivchSupplierCode != null ?
                new ObjectParameter("pivchSupplierCode", pivchSupplierCode) :
                new ObjectParameter("pivchSupplierCode", typeof(string));
    
            var pivchSupplierNameParameter = pivchSupplierName != null ?
                new ObjectParameter("pivchSupplierName", pivchSupplierName) :
                new ObjectParameter("pivchSupplierName", typeof(string));
    
            var pivchAddressParameter = pivchAddress != null ?
                new ObjectParameter("pivchAddress", pivchAddress) :
                new ObjectParameter("pivchAddress", typeof(string));
    
            var pivchCityParameter = pivchCity != null ?
                new ObjectParameter("pivchCity", pivchCity) :
                new ObjectParameter("pivchCity", typeof(string));
    
            var pivchZipCodeParameter = pivchZipCode != null ?
                new ObjectParameter("pivchZipCode", pivchZipCode) :
                new ObjectParameter("pivchZipCode", typeof(string));
    
            var pivchPhoneParameter = pivchPhone != null ?
                new ObjectParameter("pivchPhone", pivchPhone) :
                new ObjectParameter("pivchPhone", typeof(string));
    
            var pivchNPWPParameter = pivchNPWP != null ?
                new ObjectParameter("pivchNPWP", pivchNPWP) :
                new ObjectParameter("pivchNPWP", typeof(string));
    
            var pivchStateParameter = pivchState != null ?
                new ObjectParameter("pivchState", pivchState) :
                new ObjectParameter("pivchState", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSupplierUpdate", pivchSupplierCodeParameter, pivchSupplierNameParameter, pivchAddressParameter, pivchCityParameter, pivchZipCodeParameter, pivchPhoneParameter, pivchNPWPParameter, pivchStateParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spSupplierView_Result> spSupplierView(string pivchSupplierCode)
        {
            var pivchSupplierCodeParameter = pivchSupplierCode != null ?
                new ObjectParameter("pivchSupplierCode", pivchSupplierCode) :
                new ObjectParameter("pivchSupplierCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSupplierView_Result>("spSupplierView", pivchSupplierCodeParameter);
        }
    
        public virtual int spUploadDelete(Nullable<int> piintUploadId)
        {
            var piintUploadIdParameter = piintUploadId.HasValue ?
                new ObjectParameter("piintUploadId", piintUploadId) :
                new ObjectParameter("piintUploadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUploadDelete", piintUploadIdParameter);
        }
    
        public virtual int spUploadInsert(Nullable<int> piintUploadId, string pivchDirPath, string pivchFileExt, string pivchFileType, Nullable<int> piintFileSize, string pivchInputID)
        {
            var piintUploadIdParameter = piintUploadId.HasValue ?
                new ObjectParameter("piintUploadId", piintUploadId) :
                new ObjectParameter("piintUploadId", typeof(int));
    
            var pivchDirPathParameter = pivchDirPath != null ?
                new ObjectParameter("pivchDirPath", pivchDirPath) :
                new ObjectParameter("pivchDirPath", typeof(string));
    
            var pivchFileExtParameter = pivchFileExt != null ?
                new ObjectParameter("pivchFileExt", pivchFileExt) :
                new ObjectParameter("pivchFileExt", typeof(string));
    
            var pivchFileTypeParameter = pivchFileType != null ?
                new ObjectParameter("pivchFileType", pivchFileType) :
                new ObjectParameter("pivchFileType", typeof(string));
    
            var piintFileSizeParameter = piintFileSize.HasValue ?
                new ObjectParameter("piintFileSize", piintFileSize) :
                new ObjectParameter("piintFileSize", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUploadInsert", piintUploadIdParameter, pivchDirPathParameter, pivchFileExtParameter, pivchFileTypeParameter, piintFileSizeParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spUploadList_Result> spUploadList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUploadList_Result>("spUploadList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spUploadUpdate(Nullable<int> piintUploadId, string pivchDirPath, string pivchFileExt, string pivchFileType, Nullable<int> piintFileSize, string pivchInputID)
        {
            var piintUploadIdParameter = piintUploadId.HasValue ?
                new ObjectParameter("piintUploadId", piintUploadId) :
                new ObjectParameter("piintUploadId", typeof(int));
    
            var pivchDirPathParameter = pivchDirPath != null ?
                new ObjectParameter("pivchDirPath", pivchDirPath) :
                new ObjectParameter("pivchDirPath", typeof(string));
    
            var pivchFileExtParameter = pivchFileExt != null ?
                new ObjectParameter("pivchFileExt", pivchFileExt) :
                new ObjectParameter("pivchFileExt", typeof(string));
    
            var pivchFileTypeParameter = pivchFileType != null ?
                new ObjectParameter("pivchFileType", pivchFileType) :
                new ObjectParameter("pivchFileType", typeof(string));
    
            var piintFileSizeParameter = piintFileSize.HasValue ?
                new ObjectParameter("piintFileSize", piintFileSize) :
                new ObjectParameter("piintFileSize", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUploadUpdate", piintUploadIdParameter, pivchDirPathParameter, pivchFileExtParameter, pivchFileTypeParameter, piintFileSizeParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spUploadView_Result> spUploadView(Nullable<int> piintUploadId)
        {
            var piintUploadIdParameter = piintUploadId.HasValue ?
                new ObjectParameter("piintUploadId", piintUploadId) :
                new ObjectParameter("piintUploadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUploadView_Result>("spUploadView", piintUploadIdParameter);
        }
    
        public virtual ObjectResult<spITLogList_Result> spUserLogsList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spITLogList_Result>("spUserLogsList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spUsersChangePassword(string userId, string pass, string newPass)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            var newPassParameter = newPass != null ?
                new ObjectParameter("NewPass", newPass) :
                new ObjectParameter("NewPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUsersChangePassword", userIdParameter, passParameter, newPassParameter);
        }
    
        public virtual int spUsersInsert(string pivchUserId, string pivchUserName, string pivchNIK, Nullable<int> piintBranchId, string pivchEmail, string pivchEmailB2B, string pivchPass, string pivchCanSendEmail, string pivchCanChangePass, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchUserIdParameter = pivchUserId != null ?
                new ObjectParameter("pivchUserId", pivchUserId) :
                new ObjectParameter("pivchUserId", typeof(string));
    
            var pivchUserNameParameter = pivchUserName != null ?
                new ObjectParameter("pivchUserName", pivchUserName) :
                new ObjectParameter("pivchUserName", typeof(string));
    
            var pivchNIKParameter = pivchNIK != null ?
                new ObjectParameter("pivchNIK", pivchNIK) :
                new ObjectParameter("pivchNIK", typeof(string));
    
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchEmailParameter = pivchEmail != null ?
                new ObjectParameter("pivchEmail", pivchEmail) :
                new ObjectParameter("pivchEmail", typeof(string));
    
            var pivchEmailB2BParameter = pivchEmailB2B != null ?
                new ObjectParameter("pivchEmailB2B", pivchEmailB2B) :
                new ObjectParameter("pivchEmailB2B", typeof(string));
    
            var pivchPassParameter = pivchPass != null ?
                new ObjectParameter("pivchPass", pivchPass) :
                new ObjectParameter("pivchPass", typeof(string));
    
            var pivchCanSendEmailParameter = pivchCanSendEmail != null ?
                new ObjectParameter("pivchCanSendEmail", pivchCanSendEmail) :
                new ObjectParameter("pivchCanSendEmail", typeof(string));
    
            var pivchCanChangePassParameter = pivchCanChangePass != null ?
                new ObjectParameter("pivchCanChangePass", pivchCanChangePass) :
                new ObjectParameter("pivchCanChangePass", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUsersInsert", pivchUserIdParameter, pivchUserNameParameter, pivchNIKParameter, piintBranchIdParameter, pivchEmailParameter, pivchEmailB2BParameter, pivchPassParameter, pivchCanSendEmailParameter, pivchCanChangePassParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spUsersList_Result> spUsersList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUsersList_Result>("spUsersList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int spUsersMenuClear(string pivchUserId)
        {
            var pivchUserIdParameter = pivchUserId != null ?
                new ObjectParameter("pivchUserId", pivchUserId) :
                new ObjectParameter("pivchUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUsersMenuClear", pivchUserIdParameter);
        }
    
        public virtual int spUsersMenuUpdate(string pivchUserId, Nullable<int> piintMenuId, Nullable<bool> pibitInsert, Nullable<bool> pibitUpdate, Nullable<bool> pibitDelete, Nullable<bool> pibitView, Nullable<bool> pibitIsAllBranch)
        {
            var pivchUserIdParameter = pivchUserId != null ?
                new ObjectParameter("pivchUserId", pivchUserId) :
                new ObjectParameter("pivchUserId", typeof(string));
    
            var piintMenuIdParameter = piintMenuId.HasValue ?
                new ObjectParameter("piintMenuId", piintMenuId) :
                new ObjectParameter("piintMenuId", typeof(int));
    
            var pibitInsertParameter = pibitInsert.HasValue ?
                new ObjectParameter("pibitInsert", pibitInsert) :
                new ObjectParameter("pibitInsert", typeof(bool));
    
            var pibitUpdateParameter = pibitUpdate.HasValue ?
                new ObjectParameter("pibitUpdate", pibitUpdate) :
                new ObjectParameter("pibitUpdate", typeof(bool));
    
            var pibitDeleteParameter = pibitDelete.HasValue ?
                new ObjectParameter("pibitDelete", pibitDelete) :
                new ObjectParameter("pibitDelete", typeof(bool));
    
            var pibitViewParameter = pibitView.HasValue ?
                new ObjectParameter("pibitView", pibitView) :
                new ObjectParameter("pibitView", typeof(bool));
    
            var pibitIsAllBranchParameter = pibitIsAllBranch.HasValue ?
                new ObjectParameter("pibitIsAllBranch", pibitIsAllBranch) :
                new ObjectParameter("pibitIsAllBranch", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUsersMenuUpdate", pivchUserIdParameter, piintMenuIdParameter, pibitInsertParameter, pibitUpdateParameter, pibitDeleteParameter, pibitViewParameter, pibitIsAllBranchParameter);
        }
    
        public virtual int spUsersUpdate(string pivchUserId, string pivchUserName, string pivchNIK, Nullable<int> piintBranchId, string pivchEmail, string pivchEmailB2B, string pivchPass, string pivchCanSendEmail, string pivchCanChangePass, string pivchPrivilegeCode, Nullable<bool> pibitIsActive, string pivchInputID)
        {
            var pivchUserIdParameter = pivchUserId != null ?
                new ObjectParameter("pivchUserId", pivchUserId) :
                new ObjectParameter("pivchUserId", typeof(string));
    
            var pivchUserNameParameter = pivchUserName != null ?
                new ObjectParameter("pivchUserName", pivchUserName) :
                new ObjectParameter("pivchUserName", typeof(string));
    
            var pivchNIKParameter = pivchNIK != null ?
                new ObjectParameter("pivchNIK", pivchNIK) :
                new ObjectParameter("pivchNIK", typeof(string));
    
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchEmailParameter = pivchEmail != null ?
                new ObjectParameter("pivchEmail", pivchEmail) :
                new ObjectParameter("pivchEmail", typeof(string));
    
            var pivchEmailB2BParameter = pivchEmailB2B != null ?
                new ObjectParameter("pivchEmailB2B", pivchEmailB2B) :
                new ObjectParameter("pivchEmailB2B", typeof(string));
    
            var pivchPassParameter = pivchPass != null ?
                new ObjectParameter("pivchPass", pivchPass) :
                new ObjectParameter("pivchPass", typeof(string));
    
            var pivchCanSendEmailParameter = pivchCanSendEmail != null ?
                new ObjectParameter("pivchCanSendEmail", pivchCanSendEmail) :
                new ObjectParameter("pivchCanSendEmail", typeof(string));
    
            var pivchCanChangePassParameter = pivchCanChangePass != null ?
                new ObjectParameter("pivchCanChangePass", pivchCanChangePass) :
                new ObjectParameter("pivchCanChangePass", typeof(string));
    
            var pivchPrivilegeCodeParameter = pivchPrivilegeCode != null ?
                new ObjectParameter("pivchPrivilegeCode", pivchPrivilegeCode) :
                new ObjectParameter("pivchPrivilegeCode", typeof(string));
    
            var pibitIsActiveParameter = pibitIsActive.HasValue ?
                new ObjectParameter("pibitIsActive", pibitIsActive) :
                new ObjectParameter("pibitIsActive", typeof(bool));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUsersUpdate", pivchUserIdParameter, pivchUserNameParameter, pivchNIKParameter, piintBranchIdParameter, pivchEmailParameter, pivchEmailB2BParameter, pivchPassParameter, pivchCanSendEmailParameter, pivchCanChangePassParameter, pivchPrivilegeCodeParameter, pibitIsActiveParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spUsersView_Result> spUsersView(string pivchUserId)
        {
            var pivchUserIdParameter = pivchUserId != null ?
                new ObjectParameter("pivchUserId", pivchUserId) :
                new ObjectParameter("pivchUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUsersView_Result>("spUsersView", pivchUserIdParameter);
        }
    
        public virtual ObjectResult<TERORIS_INSERT_Result> TERORIS_INSERT(Nullable<int> tYPE, Nullable<System.DateTime> effectiveDate, string cATEGORY, string uSERID)
        {
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var cATEGORYParameter = cATEGORY != null ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TERORIS_INSERT_Result>("TERORIS_INSERT", tYPEParameter, effectiveDateParameter, cATEGORYParameter, uSERIDParameter);
        }
    
        public virtual int TERORIS_INSERT_MANUAL(string nAME, string lAST_NAME, string aDDRESS, string bIRTHPLACE, string nATIONALITY, Nullable<System.DateTime> bIRTHDAY, string oTHER_INFO)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var lAST_NAMEParameter = lAST_NAME != null ?
                new ObjectParameter("LAST_NAME", lAST_NAME) :
                new ObjectParameter("LAST_NAME", typeof(string));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var bIRTHPLACEParameter = bIRTHPLACE != null ?
                new ObjectParameter("BIRTHPLACE", bIRTHPLACE) :
                new ObjectParameter("BIRTHPLACE", typeof(string));
    
            var nATIONALITYParameter = nATIONALITY != null ?
                new ObjectParameter("NATIONALITY", nATIONALITY) :
                new ObjectParameter("NATIONALITY", typeof(string));
    
            var bIRTHDAYParameter = bIRTHDAY.HasValue ?
                new ObjectParameter("BIRTHDAY", bIRTHDAY) :
                new ObjectParameter("BIRTHDAY", typeof(System.DateTime));
    
            var oTHER_INFOParameter = oTHER_INFO != null ?
                new ObjectParameter("OTHER_INFO", oTHER_INFO) :
                new ObjectParameter("OTHER_INFO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TERORIS_INSERT_MANUAL", nAMEParameter, lAST_NAMEParameter, aDDRESSParameter, bIRTHPLACEParameter, nATIONALITYParameter, bIRTHDAYParameter, oTHER_INFOParameter);
        }
    
        public virtual ObjectResult<TERORIS_SEARCH_Result> TERORIS_SEARCH(string name, Nullable<int> startRowIndex, Nullable<int> maximumRows, Nullable<int> type)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("maximumRows", maximumRows) :
                new ObjectParameter("maximumRows", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TERORIS_SEARCH_Result>("TERORIS_SEARCH", nameParameter, startRowIndexParameter, maximumRowsParameter, typeParameter);
        }
    
        public virtual ObjectResult<TERORIST_SEARCH_OLD_Result> TERORIST_SEARCH_OLD(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TERORIST_SEARCH_OLD_Result>("TERORIST_SEARCH_OLD", nameParameter);
        }
    
        public virtual ObjectResult<TeroristListHistory_Result> TeroristListHistory(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TeroristListHistory_Result>("TeroristListHistory", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<WorkFlowGetSource_Result> WorkFlowGetSource(Nullable<int> branchId, string departementCode, string workFlowType)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var departementCodeParameter = departementCode != null ?
                new ObjectParameter("DepartementCode", departementCode) :
                new ObjectParameter("DepartementCode", typeof(string));
    
            var workFlowTypeParameter = workFlowType != null ?
                new ObjectParameter("WorkFlowType", workFlowType) :
                new ObjectParameter("WorkFlowType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkFlowGetSource_Result>("WorkFlowGetSource", branchIdParameter, departementCodeParameter, workFlowTypeParameter);
        }
    
        public virtual int WorkFlowModuleGetList(string pivchWhereBy, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var pivchWhereByParameter = pivchWhereBy != null ?
                new ObjectParameter("pivchWhereBy", pivchWhereBy) :
                new ObjectParameter("pivchWhereBy", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WorkFlowModuleGetList", pivchWhereByParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual int WorkflowModuleInsert(string workFlowModule, Nullable<int> menuID, string active, string pivchInputID)
        {
            var workFlowModuleParameter = workFlowModule != null ?
                new ObjectParameter("WorkFlowModule", workFlowModule) :
                new ObjectParameter("WorkFlowModule", typeof(string));
    
            var menuIDParameter = menuID.HasValue ?
                new ObjectParameter("MenuID", menuID) :
                new ObjectParameter("MenuID", typeof(int));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WorkflowModuleInsert", workFlowModuleParameter, menuIDParameter, activeParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<WorkflowParameterGetList_Result> WorkflowParameterGetList(string workFlowCode, string workFlowModule, string active)
        {
            var workFlowCodeParameter = workFlowCode != null ?
                new ObjectParameter("WorkFlowCode", workFlowCode) :
                new ObjectParameter("WorkFlowCode", typeof(string));
    
            var workFlowModuleParameter = workFlowModule != null ?
                new ObjectParameter("WorkFlowModule", workFlowModule) :
                new ObjectParameter("WorkFlowModule", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkflowParameterGetList_Result>("WorkflowParameterGetList", workFlowCodeParameter, workFlowModuleParameter, activeParameter);
        }
    
        public virtual int WorkflowParameterSet(string workFlowCode, string workFlowTable, string workFlowTableKey, string workFlowParameterType, string workFlowStatusTableKey, string workFlowStatusDateTableKey, string workflowViewPage, string workFlowModule, string workFlowDescription, string active)
        {
            var workFlowCodeParameter = workFlowCode != null ?
                new ObjectParameter("WorkFlowCode", workFlowCode) :
                new ObjectParameter("WorkFlowCode", typeof(string));
    
            var workFlowTableParameter = workFlowTable != null ?
                new ObjectParameter("WorkFlowTable", workFlowTable) :
                new ObjectParameter("WorkFlowTable", typeof(string));
    
            var workFlowTableKeyParameter = workFlowTableKey != null ?
                new ObjectParameter("WorkFlowTableKey", workFlowTableKey) :
                new ObjectParameter("WorkFlowTableKey", typeof(string));
    
            var workFlowParameterTypeParameter = workFlowParameterType != null ?
                new ObjectParameter("WorkFlowParameterType", workFlowParameterType) :
                new ObjectParameter("WorkFlowParameterType", typeof(string));
    
            var workFlowStatusTableKeyParameter = workFlowStatusTableKey != null ?
                new ObjectParameter("WorkFlowStatusTableKey", workFlowStatusTableKey) :
                new ObjectParameter("WorkFlowStatusTableKey", typeof(string));
    
            var workFlowStatusDateTableKeyParameter = workFlowStatusDateTableKey != null ?
                new ObjectParameter("WorkFlowStatusDateTableKey", workFlowStatusDateTableKey) :
                new ObjectParameter("WorkFlowStatusDateTableKey", typeof(string));
    
            var workflowViewPageParameter = workflowViewPage != null ?
                new ObjectParameter("WorkflowViewPage", workflowViewPage) :
                new ObjectParameter("WorkflowViewPage", typeof(string));
    
            var workFlowModuleParameter = workFlowModule != null ?
                new ObjectParameter("WorkFlowModule", workFlowModule) :
                new ObjectParameter("WorkFlowModule", typeof(string));
    
            var workFlowDescriptionParameter = workFlowDescription != null ?
                new ObjectParameter("WorkFlowDescription", workFlowDescription) :
                new ObjectParameter("WorkFlowDescription", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WorkflowParameterSet", workFlowCodeParameter, workFlowTableParameter, workFlowTableKeyParameter, workFlowParameterTypeParameter, workFlowStatusTableKeyParameter, workFlowStatusDateTableKeyParameter, workflowViewPageParameter, workFlowModuleParameter, workFlowDescriptionParameter, activeParameter);
        }
    
        public virtual int WorkFlowSourceGetList(string branchId, string departementCode, string workFlowType, string active, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var branchIdParameter = branchId != null ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(string));
    
            var departementCodeParameter = departementCode != null ?
                new ObjectParameter("DepartementCode", departementCode) :
                new ObjectParameter("DepartementCode", typeof(string));
    
            var workFlowTypeParameter = workFlowType != null ?
                new ObjectParameter("WorkFlowType", workFlowType) :
                new ObjectParameter("WorkFlowType", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WorkFlowSourceGetList", branchIdParameter, departementCodeParameter, workFlowTypeParameter, activeParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<spGetAllMsUser_Result> spGetAllMsUser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAllMsUser_Result>("spGetAllMsUser");
        }
    
        [DbFunction("USOFTEntities", "fnGetSortBranch")]
        public virtual IQueryable<fnGetSortBranch_Result> fnGetSortBranch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnGetSortBranch_Result>("[USOFTEntities].[fnGetSortBranch]()");
        }
    
        public virtual ObjectResult<GROUPWORKFLOW_Result> GROUPWORKFLOW(Nullable<int> workFlowBranchCode, string workFlowPriveledgeCode, string workFlowUserID)
        {
            var workFlowBranchCodeParameter = workFlowBranchCode.HasValue ?
                new ObjectParameter("WorkFlowBranchCode", workFlowBranchCode) :
                new ObjectParameter("WorkFlowBranchCode", typeof(int));
    
            var workFlowPriveledgeCodeParameter = workFlowPriveledgeCode != null ?
                new ObjectParameter("WorkFlowPriveledgeCode", workFlowPriveledgeCode) :
                new ObjectParameter("WorkFlowPriveledgeCode", typeof(string));
    
            var workFlowUserIDParameter = workFlowUserID != null ?
                new ObjectParameter("WorkFlowUserID", workFlowUserID) :
                new ObjectParameter("WorkFlowUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GROUPWORKFLOW_Result>("GROUPWORKFLOW", workFlowBranchCodeParameter, workFlowPriveledgeCodeParameter, workFlowUserIDParameter);
        }
    
        public virtual int HRAccountNumberViewGet(string nIK, string employeeName, Nullable<int> piintPageNo, Nullable<int> piintPageSize, ObjectParameter pointTotalPage, ObjectParameter pointTotalData)
        {
            var nIKParameter = nIK != null ?
                new ObjectParameter("NIK", nIK) :
                new ObjectParameter("NIK", typeof(string));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var piintPageNoParameter = piintPageNo.HasValue ?
                new ObjectParameter("piintPageNo", piintPageNo) :
                new ObjectParameter("piintPageNo", typeof(int));
    
            var piintPageSizeParameter = piintPageSize.HasValue ?
                new ObjectParameter("piintPageSize", piintPageSize) :
                new ObjectParameter("piintPageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HRAccountNumberViewGet", nIKParameter, employeeNameParameter, piintPageNoParameter, piintPageSizeParameter, pointTotalPage, pointTotalData);
        }
    
        public virtual ObjectResult<msWorkFlowGroup_Result> msWorkFlowGroup(Nullable<int> workFlowBranchCode, string workFlowPriveledgeCode, string workFlowUserID)
        {
            var workFlowBranchCodeParameter = workFlowBranchCode.HasValue ?
                new ObjectParameter("WorkFlowBranchCode", workFlowBranchCode) :
                new ObjectParameter("WorkFlowBranchCode", typeof(int));
    
            var workFlowPriveledgeCodeParameter = workFlowPriveledgeCode != null ?
                new ObjectParameter("WorkFlowPriveledgeCode", workFlowPriveledgeCode) :
                new ObjectParameter("WorkFlowPriveledgeCode", typeof(string));
    
            var workFlowUserIDParameter = workFlowUserID != null ?
                new ObjectParameter("WorkFlowUserID", workFlowUserID) :
                new ObjectParameter("WorkFlowUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<msWorkFlowGroup_Result>("msWorkFlowGroup", workFlowBranchCodeParameter, workFlowPriveledgeCodeParameter, workFlowUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> OpexPaymentConvertGetID1(Nullable<decimal> historyID)
        {
            var historyIDParameter = historyID.HasValue ?
                new ObjectParameter("HistoryID", historyID) :
                new ObjectParameter("HistoryID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("OpexPaymentConvertGetID1", historyIDParameter);
        }
    
        public virtual int OpexPaymentConvertReversalSet1(Nullable<decimal> id, string opexPaymentNo, string paymentStatus, string createdBy)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(decimal));
    
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            var paymentStatusParameter = paymentStatus != null ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpexPaymentConvertReversalSet1", idParameter, opexPaymentNoParameter, paymentStatusParameter, createdByParameter);
        }
    
        public virtual ObjectResult<string> OpexPaymentConvertToBCA1(Nullable<decimal> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("OpexPaymentConvertToBCA1", iDParameter);
        }
    
        public virtual ObjectResult<OpexPaymentConvertToBTMU1_Result> OpexPaymentConvertToBTMU1(Nullable<decimal> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentConvertToBTMU1_Result>("OpexPaymentConvertToBTMU1", iDParameter);
        }
    
        public virtual ObjectResult<OpexPaymentEPRReport_Result> OpexPaymentEPRReport(string opexPaymentNo)
        {
            var opexPaymentNoParameter = opexPaymentNo != null ?
                new ObjectParameter("OpexPaymentNo", opexPaymentNo) :
                new ObjectParameter("OpexPaymentNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OpexPaymentEPRReport_Result>("OpexPaymentEPRReport", opexPaymentNoParameter);
        }
    
        public virtual ObjectResult<string> ReportRefundRecepientCSV(Nullable<int> branchId, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ReportRefundRecepientCSV", branchIdParameter, dateStartParameter, dateEndParameter);
        }
    
        public virtual int spGAItemAdjustmentUpdateStatus_dwi(string pivchItemAdjustID, string pivchStatus, string pivchDescription, Nullable<int> piintApprovalState, Nullable<int> piintToState, string pivchInputID, Nullable<System.DateTime> pidtmGetDate)
        {
            var pivchItemAdjustIDParameter = pivchItemAdjustID != null ?
                new ObjectParameter("pivchItemAdjustID", pivchItemAdjustID) :
                new ObjectParameter("pivchItemAdjustID", typeof(string));
    
            var pivchStatusParameter = pivchStatus != null ?
                new ObjectParameter("pivchStatus", pivchStatus) :
                new ObjectParameter("pivchStatus", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var piintApprovalStateParameter = piintApprovalState.HasValue ?
                new ObjectParameter("piintApprovalState", piintApprovalState) :
                new ObjectParameter("piintApprovalState", typeof(int));
    
            var piintToStateParameter = piintToState.HasValue ?
                new ObjectParameter("piintToState", piintToState) :
                new ObjectParameter("piintToState", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            var pidtmGetDateParameter = pidtmGetDate.HasValue ?
                new ObjectParameter("pidtmGetDate", pidtmGetDate) :
                new ObjectParameter("pidtmGetDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAItemAdjustmentUpdateStatus_dwi", pivchItemAdjustIDParameter, pivchStatusParameter, pivchDescriptionParameter, piintApprovalStateParameter, piintToStateParameter, pivchInputIDParameter, pidtmGetDateParameter);
        }
    
        public virtual int spGAPurchaseReceivedUpdateStatus_dwi(string pivchReceivedID, string pivchStatus, string pivchDescription, Nullable<int> piintApprovalState, Nullable<int> piintToState, string pivchInputID, Nullable<System.DateTime> pidtmGetDate)
        {
            var pivchReceivedIDParameter = pivchReceivedID != null ?
                new ObjectParameter("pivchReceivedID", pivchReceivedID) :
                new ObjectParameter("pivchReceivedID", typeof(string));
    
            var pivchStatusParameter = pivchStatus != null ?
                new ObjectParameter("pivchStatus", pivchStatus) :
                new ObjectParameter("pivchStatus", typeof(string));
    
            var pivchDescriptionParameter = pivchDescription != null ?
                new ObjectParameter("pivchDescription", pivchDescription) :
                new ObjectParameter("pivchDescription", typeof(string));
    
            var piintApprovalStateParameter = piintApprovalState.HasValue ?
                new ObjectParameter("piintApprovalState", piintApprovalState) :
                new ObjectParameter("piintApprovalState", typeof(int));
    
            var piintToStateParameter = piintToState.HasValue ?
                new ObjectParameter("piintToState", piintToState) :
                new ObjectParameter("piintToState", typeof(int));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            var pidtmGetDateParameter = pidtmGetDate.HasValue ?
                new ObjectParameter("pidtmGetDate", pidtmGetDate) :
                new ObjectParameter("pidtmGetDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGAPurchaseReceivedUpdateStatus_dwi", pivchReceivedIDParameter, pivchStatusParameter, pivchDescriptionParameter, piintApprovalStateParameter, piintToStateParameter, pivchInputIDParameter, pidtmGetDateParameter);
        }
    
        public virtual int spHRPrivilegeInsert(string pivchPrivilegeCode, string pivchPrivilegeName, Nullable<int> piintBranchId, string pivchDepartementCode, string pivchOrgId, string pivchInputID)
        {
            var pivchPrivilegeCodeParameter = pivchPrivilegeCode != null ?
                new ObjectParameter("pivchPrivilegeCode", pivchPrivilegeCode) :
                new ObjectParameter("pivchPrivilegeCode", typeof(string));
    
            var pivchPrivilegeNameParameter = pivchPrivilegeName != null ?
                new ObjectParameter("pivchPrivilegeName", pivchPrivilegeName) :
                new ObjectParameter("pivchPrivilegeName", typeof(string));
    
            var piintBranchIdParameter = piintBranchId.HasValue ?
                new ObjectParameter("piintBranchId", piintBranchId) :
                new ObjectParameter("piintBranchId", typeof(int));
    
            var pivchDepartementCodeParameter = pivchDepartementCode != null ?
                new ObjectParameter("pivchDepartementCode", pivchDepartementCode) :
                new ObjectParameter("pivchDepartementCode", typeof(string));
    
            var pivchOrgIdParameter = pivchOrgId != null ?
                new ObjectParameter("pivchOrgId", pivchOrgId) :
                new ObjectParameter("pivchOrgId", typeof(string));
    
            var pivchInputIDParameter = pivchInputID != null ?
                new ObjectParameter("pivchInputID", pivchInputID) :
                new ObjectParameter("pivchInputID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHRPrivilegeInsert", pivchPrivilegeCodeParameter, pivchPrivilegeNameParameter, piintBranchIdParameter, pivchDepartementCodeParameter, pivchOrgIdParameter, pivchInputIDParameter);
        }
    
        public virtual ObjectResult<spRptGAItemStockNonAssetDetail4_Result> spRptGAItemStockNonAssetDetail4(string pivchBranchID, string pivchItemCategoryCode, string pivchItemGroupCode, string pivchItemTypeCode, Nullable<System.DateTime> pidtmDateStart, Nullable<System.DateTime> pidtmDateEnd)
        {
            var pivchBranchIDParameter = pivchBranchID != null ?
                new ObjectParameter("pivchBranchID", pivchBranchID) :
                new ObjectParameter("pivchBranchID", typeof(string));
    
            var pivchItemCategoryCodeParameter = pivchItemCategoryCode != null ?
                new ObjectParameter("pivchItemCategoryCode", pivchItemCategoryCode) :
                new ObjectParameter("pivchItemCategoryCode", typeof(string));
    
            var pivchItemGroupCodeParameter = pivchItemGroupCode != null ?
                new ObjectParameter("pivchItemGroupCode", pivchItemGroupCode) :
                new ObjectParameter("pivchItemGroupCode", typeof(string));
    
            var pivchItemTypeCodeParameter = pivchItemTypeCode != null ?
                new ObjectParameter("pivchItemTypeCode", pivchItemTypeCode) :
                new ObjectParameter("pivchItemTypeCode", typeof(string));
    
            var pidtmDateStartParameter = pidtmDateStart.HasValue ?
                new ObjectParameter("pidtmDateStart", pidtmDateStart) :
                new ObjectParameter("pidtmDateStart", typeof(System.DateTime));
    
            var pidtmDateEndParameter = pidtmDateEnd.HasValue ?
                new ObjectParameter("pidtmDateEnd", pidtmDateEnd) :
                new ObjectParameter("pidtmDateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRptGAItemStockNonAssetDetail4_Result>("spRptGAItemStockNonAssetDetail4", pivchBranchIDParameter, pivchItemCategoryCodeParameter, pivchItemGroupCodeParameter, pivchItemTypeCodeParameter, pidtmDateStartParameter, pidtmDateEndParameter);
        }
    }
}
